0	0	a	Software Requirements Specification for the Management Processes of an Integrated Library System
1	0	a	This Software Requirements Specification (SRS) describes the functional and nonfunctional requirements for Management Processes of an Integrated Library System (ILS).
2	0	a	The resulting PINES Reports Working Group consists of one library director, three assistant library directors, and a systems librarian, all of whom have significant experience developing reports for PINES libraries.
3	0	a	The mission statement of the PINES Reports Working Group is as follows:
4	0	a	The Management Processes facilitates the management of Library services, programs, and policies.
5	0	a	Specifically, the Management Processes support the following activities, among others:
6	0	a	? Analyzing the Library collection and its use by patrons.
7	0	a	? Analyzing staff productivity and workflow. ? Tracking and verifying financial transactions.
8	0	a	The current specification presupposes the general functionality of an ILS and specifies only those requirements that directly or indirectly relate to management activities.
9	0	a	PINES is currently working on specifications for Acquisitions and Cataloging modules.
10	0	a	Moreover, the current specification is focused on functional characteristics of Management Processes.
11	0	a	Data structures and user interfaces will require further specification and development using an iterative, prototype-oriented software development methodology. 1.3 Intended Audience
12	0	a	This SRS is intended both for library managers and staff who may contribute additional requirements or commentary, and for software project managers and developers who will implement the requirements.
13	0	a	It is also assumed that the reader has a general understanding of Library services and processes and does not require definition of common Library terminology. 1.4 Document Conventions
14	0	a	Requirements include a reference to a process flowchart where appropriate.
15	1	a	Specifically, the system must support a library consortium with 286 locations, 17 million annual circulations, purchasing and processing over 900,000 items per year.
16	1	a	It is highly desirable that searches and reports can be processed during open hours without disrupting other system functions.
17	1	a	Management Processes shall operate on a Linux or Solaris server.
18	1	a	Management Processes shall be accessible through a web-browser or a Windows-compatible client.
19	1	a	If web-browser based, Management Processes shall be accessible through Microsoft Internet Explorer (v.6.0 and later) and Mozilla Firefox (v.2.0 and later).
20	1	a	UD-3: The system shall provide an online, hierarchical, and cross-linked help system in HTML that describes and illustrates all system functions.
21	1	a	UD-4: The system shall provide thorough high-level error reporting and feedback and shall allow low-level query-specific feedback for Local and Global System Administrators from the front-end interface. 1.9 Assumptions and Dependencies
22	0	a	Management Processes are part of an enterprise-level Library Automation System. AS-2:
23	1	a	Management Processes are consolidated at a central location, and accept input and provide services to multiple locations.
24	1	a	DE-1: Management Processes rely on the data structures and functionality of an enterprise-level Library Automation System, including Acquisitions and Cataloging modules.
25	0	a	Management Processes interface with a variety of vendor websites, via published APIs and/or automated transfer of standard-format data files (e.g. USMARC21, EDIFACT).
26	1	a	Management Processes interact with a patron interface, also known as an Online Public Access Catalog (OPAC). System Requirements Category: Management Tools: General Req ID:
27	1	a	Name: report templates Description: System administrators can create reliable report templates that are available to staff, and can be run as is or modified to the staff person's particular needs.
28	1	a	Changes in the templates could be done without comprising the results.
29	1	a	The administrator can limit the filters and display fields that can be altered to certify a dependable output.
30	0	a	For example, front-line staff could set the call number range for a weeding report or add or remove designated display fields from a pick list, but couldn?t alter the template to display deleted items.
31	1	a	Name: reports permissions Description: System provides distinct, fine-grained permission levels limiting who can create and clone reports.
32	1	a	All permissions should be easy to administer.
33	1	a	System administrators can create shared folders to allow or disallow staff to run specific reports, and/or to run ad hoc reports on specific sets of data.
34	0	a	Source: RWG Req ID: PINES-004 Priority: 1
35	0	a	Name: query tool Description:
36	1	a	System provides a user-friendly interface for designing queries against all record types.
37	1	a	Staff can select fields to query; select values from picklist of possible values; select regular expressions from drop-down menu, and use a full range of Boolean operators.
38	1	a	Administrators control staff access to tables and fields.
39	0	a	Source: RWG Req ID: PINES-005 Priority: 1
40	1	a	Name: board reports Description: The system provides pre-defined reports for consumption by library boards or other consumers.
41	1	a	It should be possible cross-tabulated per terminal, per branch, per library system, per hour, per patron age range, per patron type, and per patron location.
42	1	a	Name: transaction data archive Description: Transactions are archived in a form that protects patron privacy as defined by State Law, while providing useful demographic statistics.
43	1	a	Name: Query selections Description: System provides the query selections along with the results.
44	1	a	Name: PINES-Specific Reports Examples Description: System must be able to support the reporting definitions as described in Appendix A. Source: RWG Req ID: PINES-011 Priority: 1
45	1	a	Name: PINES-Specific Fine-Grained Requirements Description: System must be able to support the fine-grained reports requirements as described in Appendix B. Source: RWG Category: Management Tools: Demographics Req ID:
46	1	a	Name: behavior and use analysis Description: The system produces statistics that can be used to understand and predict patron behavior and use of materials.
47	0	a	For example, how quickly is a particular book returned, on average?
48	0	a	How likely is a particular book to be renewed?
49	0	a	What percent of check-outs at a particular branch are renewals?
50	1	a	Source: RWG Req ID: PINES-013 Priority: 1 Name: demographic statistics Description: The system produces useful demographic statistics, including transactions by geographical regions, age ranges, etc.
51	1	a	The data used to produce these statistics must be anonymized, i.e. information that could be used to identify a patron is deleted.
52	1	a	Name: system capacity interface Description: The system provides an interface showing capacity of all branches (as defined in PINES-014).
53	1	a	Description: For each genre and format of material, ability to compare the percentage of total circulations, the percentage of the collection, and the percentage of total shelf space that genre/format comprises.
54	1	a	Name: uncataloged material Description: Ability to control inventory of uncataloged material, such as paperback books and children's board books.
55	1	a	Support for quick distribution and ability to identify how the material is being used.
56	0	a	Ability to count transactions and include in circulation statistics and reports.
57	1	a	"System provides a utility for transferring batches of items between branches, used for example to move books into a mobile library, an outreach program collection, or a ""just-in-time"" warehouse."
58	1	a	Utility includes ability to query for candidate materials,  ability to save queries for repeated use,  ability to manually select titles from query results,  and ability to change records of all or selected items to move to new location.
59	0	a	Mechanisms for moving items include changing location field, generating pull lists, etc.
60	1	a	In addition, utility provides means to revert items to original location after a set period of time, and/or based on other criteria.
61	1	a	Name: missing and damaged items report Description: The system provides reports of missing and damaged items per branch. Source: RWG Req ID: PINES-020 Priority: 1
62	1	a	Name: in-transit items report Description: The system generates a list of items that have been in-transit for more than X days (X configurable), per branch and per system.
63	1	a	The report would merge the transit to and transit from into one report for ease of front-line staff use.
64	1	a	The system provides a last copy report that would single out a library system's last copies, to assist catalogers who need to edit WorldCat entries.
65	1	a	The system provides a quick effective method of deleting volume entries along with copy entries, as well as records with no items attached. Req ID: PINES-022 Priority: 1
66	1	a	Name: deletions Description: Ability to count and track record deletions (e.g. item records, patron records) per location and per system. Source: RWG Category: Management Tools: Patron Records Req ID: PINES-023 Priority: 1
67	1	a	Name: patron characteristics Description: Queries and reports can be limited or grouped by various patron characteristics, including: age range, zip code, county of residence, home branch, patron type, and preferred language.
68	1	a	Name: examples of useful backroom statistics Description: Transactions can be grouped by hour, terminal, branch, and system.
69	1	a	Transactions include check-ins, check-outs, fines collected, patron registrations, etc., and can be queried by all transactions or by type of transaction.
70	1	a	Name: types of check-in Description: The system counts all types of check-in individually and cumulatively: book-drop, by terminal, by user or self-service. Source: RWG Req ID: PINES-028 Priority: 1
71	1	a	Name: types of check-out Description: The system counts all types of check-out individually and cumulatively: staff check-out, self check-out, staff renewal, self checkout renewal, online renewal, OPAC renewal.
72	1	a	Name: holds and locations Description: The system counts all hold requests, including how the hold was placed: at a staff desk, at a public computer inside the library, or remotely.
73	1	a	Name: transactions report Description: The system can generate a report of transactions (holds placed, holds filled, and check-outs) per patron, per library, per selected group o libraries, per system, per county.
74	1	a	The system displays the number of check-outs and placed holds per patron.
75	0	a	Holds are subtotaled by type, e.g. active, frozen, and frozen-until holds.
76	0	a	Source: RWG Category: Management Tools: Financial Records Req ID:
77	1	a	Name: value of items report Description: The system can generate a report of the value of items (based on data in item record) in the entire collection or a portion.
78	1	a	Example: staff can obtain value of all items with status of longoverdue, or value of all dvds in children's collection, or value of entire collection.
79	0	a	Name: standard accounting practice and auditing requirements Description:
80	1	a	All reports and data archiving must comply with standard accounting practice and state, county, and municipal auditing requirements.
81	1	a	Source: RWG Req ID: PINES-033 Priority: 1 Name: financial data (patrons) Description: Fines, charges, waivers, and ecommerce transactions are attached to patron and item records.
82	1	a	System tracks fines waived and payments made per library.
83	1	a	Financial information can be updated easily.
84	1	a	As an example, a staff user can easily query patron accounts with balances greater than X dollars.
85	0	a	Circulation Count by Shelving Location ? Circulation Count by MARC ?
86	0	a	Circulation Count by Circ Location broken down by Patron County ?
87	0	a	Circulation Count by Circ Location broken down Patron Home Library ?
88	0	a	Demographic ITEMS Canned or On Demand Reports ?
89	0	a	Items Added Count ?
90	0	a	Items Deleted Count ?
91	0	a	List of Items Added ?
92	0	a	List of Items
93	0	a	Added (Cataloger's version, displaying the various Copy Editor fields) ?
94	0	a	Items Edited Count ?
95	0	a	Items Count ?
96	0	a	List of Items by Fines
97	0	a	Stopped Reason ?
98	0	a	Items Currently Checked Out ?
99	0	a	Items more than XX days overdue (aka Overdue Materials Report) ? Items marked longoverdue by system ? List of Items with a > Total Use Count  ?
100	0	a	List of Items with a < Total Use Count [Weeding Report] ?
101	0	a	List of Items Deleted ?
102	0	a	Last Copy Report (last copy owned by a library system that was deleted) ? List of Items by Creation Date Range ?
103	0	a	List of Items with a status of Missing ? List of Items in Transit by both sending library and destination library  ? Claims returned ?
104	0	a	In process for X months to be converted to missing, etc.)
105	0	a	BIB RECORDS Canned or On Demand Reports ? Bib Records Count ? Bib Records Edited Count ?
106	0	a	Added by user by library Count ? Bib Records with No Volumes attached ? Bib Records missing specific MARC fields PATRONS Canned or On Demand Reports ?
107	0	a	Patron Added Count by Month ? New Patron Count (patrons added the previous month by Demographic Category & facility) ? Patron Count by Age Demographic ?
108	0	a	Patron Count by County   ?
109	0	a	Patron Count by County, City, & Zip Code ?
110	0	a	Patron Count by Home Library ?
111	0	a	Patron Count by Profile Group ?
112	0	a	Patron Count by survey answer (for custom surveys) ?
113	0	a	List of patrons by survey answer (ex: survey is do you want to be on mailing list?) ? Voter Survey Responses County by Week ?
114	0	a	List of Patrons by Expiration Date ?
115	0	a	Voter Reg Survey
116	0	a	Responses Count by Week ?
117	0	a	List of patrons who are BARRED (JennD) ? List of Patrons with inactive status
118	0	a	? List of Staff Accounts with date of last password change and account expiration date-- GT ?
119	0	a	"List of Patrons with specific wording in notes (used to identify patrons ""pushed to collections"") HOLDS Canned or On Demand Reports ?"
120	0	a	Holds Purchase Alert ? Items Sent for Holds ? Items Received for Holds ? IntraPINES Loans for all Systems ?
121	0	a	IntraPINES Loans for all Facilities ? IntraPINES Loans by System ? IntraPINES Loans by Facility ?
122	0	a	Annual # of holds placed ?
123	0	a	Stale Holds - holds sitting on hold shelf waiting for pickup for too long IN HOUSE USE Canned or On Demand Reports ?  NonCat
124	0	a	In House Use Count by Month ?  Cataloged In House Use Count     TRANSITS Canned or On Demand Reports ? Items
125	0	a	In Transit to Destination Library ?
126	0	a	Three interfaces - canned reports, noncanned or on demand reports, and open template reporting ? Canned reports are generic reports set to run by the individual either ASAP or recurring. 
127	0	a	"Quick Access Interface"" ?  Ability to hover over each title of canned report/template with pop-up box with description."
128	0	a	i.e., ?check-in count report gives monthly numbers on X for the preceding month?s.
129	1	a	The system provides a report to assist in the batch conversion of statuses.
130	0	a	What was the bill amount on June 30th? 
131	0	a	What was the circ count by circ mod or shelving location on x past month even though the shelving location is currently different than it was at the time of check out. ?
132	1	a	An Open template would have all attributes associated with items, patrons, bills, circulation, and bib records to select from for filtering and the same attributes for displaying.   ?
133	0	a	For instance, Circulation would have an option to check a box to filter by circ mod. 
134	0	a	This would have the attribute of circ modifier as a selection to include or exclude and then have a drop down to select any circ mods to filter by. 
135	1	a	All filter options would be listed as display option as well. 
136	1	a	Software Requirements Specification For Voucher Management System The system will be user friendly with maximum master table structure with all transaction screens to have drop down selection menus to minimize data entry errors.
137	1	a	The main data entry screen on claims entry to have drop drown menu from patient?s profile selection to medicine cost to have drop down.
138	1	a	Minimize the use of key board for any number entry to have a faster transaction data entry.
139	1	a	The system will be easily trainable for the user with minimum computer skill with simple user step by step manual.
140	1	a	Storage efficiency: The structural design of the database will have sequential links with surrogate keys.
141	1	a	The database storage will be highly efficient to manage and avoid empty unused spaced blocked, properly defragmenter on a periodic basis.
142	1	a	This efficiency will have a maximum provision to expand this program beyond the pilot period, if the program requirements remain same.
143	1	a	Security: High intrusion controls will be in place in the system and the database.
144	0	a	Access level controls, various organizational level user setting by including granular model setting.
145	1	a	External Hardware interface: Bar-code ? the system will interface with the bar-code reader to interface all transaction details.
146	0	a	voucher number verifications, claim form entry and selection of voucher usage by the clients.
147	1	a	Bio-metrics ? the system will interface with the thumb-print reader for verifying claims form used by the clients.
148	0	a	This document is purely based on the Functional Flow Diagram designed by Microcare.
149	0	a	The document will explain every small entity of the system including various code generations, Bar-coding and Graphical User Interface etc.
150	0	a	This document will help the system development team to understand the overall and detailed functions of every small entity in VMU and to design the system that will meet every requirement of the VMU program.
151	0	a	This document will help the testing team to prepare the Test Cases and will help them to test every module in the system and overall testing of the system, so that the testing team will have confidence on the quality of this system.
152	0	a	1.3.1 about MSIU and OBA Program The concept of Output-based Aid (OBA) Past experiences with development aid showed, that financing inputs, e.g.
153	0	a	facilities and equipment, does not result in the necessary improvement of health outcomes.
154	0	a	Thus as a change of paradigm, the OBA concept finances agreed outputs with pre- defined quality rather than pre-defined inputs by selling vouchers for STD services at subsidised prices to patients.
155	0	a	These vouchers will be refunded to service providers in the private sector (medical doctors, qualified nurses and midwives), government hospitals, NGOs, and faith-based organisations.
156	0	a	The approach was successfully applied in the sixties/seventies in South Korea and Taiwan.
157	0	a	In recent years also a programme was run in Nicaragua but the OBA has not been implemented in larger scale programs.
158	0	a	Basic structures and processes of the STD voucher programme The main structures and processes in the STD voucher programme are: The programme is prepared, implemented and managed by the Voucher Management Unit (VMU).
159	0	a	The VMU establishes a network of approved providers (during the pilot phase private, NGO, FBO providers) throughout Mbarara District.
160	0	a	The VMU runs a marketing and behavioural change campaign (BCC) to market and inform about the voucher services and how to use them.
161	0	a	The VMU establishes and runs a distribution system with the purpose to distribute the STD vouchers to the sexually active population for which the above-mentioned providers are in reach.
162	0	a	Distribution follows certain rules: ? The vouchers are packed in two with one voucher for the purchaser of the voucher, in the following addressed as ?client? and one for the partner of the client.
163	0	a	? The voucher may only be bought for personal treatment or for the treatment of the partner.
164	0	a	Only one voucher is sold at time.
165	0	a	The option of selling more than one voucher to a person at a time introduces too many sources for fraud.
166	0	a	? Distributors keep a distribution list documenting distributor, voucher number, date, place of sale, and name and place of living of the customer.
167	0	a	The client may honour the voucher at any approved provider of his choice.
168	0	a	Genital ulcer 4.
169	0	a	Inguinal bubo 5.
170	0	a	Ophthalmia neonatorum 6.
171	0	a	Acute scrotal swelling 7.
172	0	a	Pelvic inflammatory disease In line with the NTA the voucher includes ? First consultation with basic lab testing and treatment ? First follow-up visit for all clients.
173	0	a	If symptoms persist drug regimen will be switched.
174	0	a	? If necessary second follow-up visit.
175	0	a	If symptoms persist referral to a hospital.
176	0	a	? Provider documents each voucher case in a standardised patient treatment documentation form.
177	0	a	? The data from the forms is entered into a computer database.
178	0	a	Data checks and plausibilisations are done.
179	0	a	? Clean claims will be reimbursed via bank transfer.
180	0	a	? Conspicuous claims will be investigated and cleared by the VMU.
181	0	a	? The VMU operates a monitoring system including follow-up with patients to monitor proper operation of the voucher scheme.
182	1	a	The system will also control the existence of fraud in claims and will help the service provider to reach their payments in time without delay.
183	0	a	The other features and details of system will be explained in below sections in the document.
184	0	a	The voucher management system is subdivided into following modules to make the system easy for understanding, developing, testing and to implement.
185	0	a	Voucher Creation / Preparation 2.
186	0	a	Marketing / Sales 3.
187	0	a	Claim Entry / Processing 4.
188	0	a	Voucher Sales Return 5.
189	0	a	Client Feed back 6.
190	0	a	Reports (Standard and Customized) 7.
191	0	a	Overall Description 2.1 System Perspective This section of the document is going to explain the functionalities of the system, its subsystems and how it?s integrated and working together.
192	0	a	During the system study, it was understood that the first pilot period, twenty thousand vouchers will be sold, but the VMU-system has the provision to upgrade to meet the additional market and projects needs.
193	1	a	2.1.1 Outline of entire system ? The VMU will create the vouchers and sell it to clients through distributors.
194	0	a	? The distributor will submit the sales details back to the VMU.
195	0	a	? Each voucher should have two portions with three tear off voucher slips each for Client and Partner.
196	0	a	? The client and/or the partner will choose the service provider and will get treatment.
197	0	a	? The quarantined forms will be sent back to the VSP for verification, if the VSP returns the claim with satisfactory details, the claims will be entered on to the system, in the following month?s batch.
198	0	a	? Based on the payment terms agreed by VSP, the field office will generate Bi- Month or Monthly financial and medical report and send it to MSIU Admin team to arrange the payments for the VSP.
199	0	a	? To understand the satisfaction of client the MSIU Admin team will get client feedback from some of the clients and send those documents to field office to enter those into database.
200	0	a	As mentioned above the entire system is sub-divided into six modules and again the each module is subdivided into different subsystems.
201	0	a	2.1.2 Voucher Management System Modules 1.
202	0	a	Voucher Creation / Preparation Voucher creation ? the voucher numbers are system generated and created with unique identification numbers with security protocols in-built.
203	0	a	The created unique numbers are then printed out in the form of bar-codes, which will complement (or stuck on the voucher) the voucher.
204	0	a	Then at every level on the voucher cycle this number is captured, on distribution, retail sales, point of treatment, enclosed along with claim forms, at the claims processing and finally for the payment.
205	0	a	Such tracking records will be utilized for reports as well.
206	1	a	Each voucher should have the following properties, which will have sub-elements to get the batch numbers, voucher numbers, and the project codes.
207	0	a	Project code ? Group batch code ? Batch number ? Voucher number ? Security code.
208	1	a	This validity date can be amended or altered at the system level ONLY by the authorized user.
209	0	a	? Voucher will also have MRP (maximum retail price) ? Voucher should have three tear off portioned slips with a sub-section tear-off for the partner.
210	0	a	? If the tear off voucher slips would be sticker then it will not be lost on attaching to the claim forms by the VSP.
211	1	a	? Each voucher slip should contain the bar code of the Voucher with two identifications one for the client and the other for the partner.
212	0	a	? The first tear for the first consultation ? Second one for the first follow-up ? And the third tear off for the final (second follow-up).
213	1	a	Design Constraints This system has high security feature as far as the user access to the system, including all the modules, sub-modules and even at the screen level.
214	1	a	? The voucher will be created ONLY by the authorized person.
215	1	a	? The will be a provision to create a minimum quantity of vouchers at one time (such minimum numbers will be decided by the management team).
216	1	a	? Once created vouchers will not be edited or deleted but there will be a provision to with-hold any voucher number if the admin team decides to do for any reason.
217	1	a	? There will be a provision to amend the validity date of the voucher.
218	0	a	Marketing / Sales The marketing and sales is the next step and the next module in the system.
219	0	a	This module will take care of following sub modules.
220	1	a	Distributor Master Information The system will capture the master details of every distributor so that the users can get the details of any distributor and sales details at any time.
221	1	a	Each distributor will have unique code and detailed descriptions such as name, address, locations and type of business etc.
222	0	a	such valid information will help us track information related to sales and distributions.
223	0	a	Following fields will be captured at this master.
224	0	a	All the level of details will have a master table in order to update as per the program requirements.
225	1	a	The system will check the duplicated ID for the distributors.
226	1	a	The system can allow the duplicate names of the Distributor.
227	1	a	On capture of any duplicate name the system will give a warning message to have the duplicate name or to change the name.
228	1	a	For better reporting purposes it is better to have a differentiating indicator on the name.
229	1	a	System will have a provision to print the distributor master details.
230	0	a	The distributor screen will have a provision to view the Sales History of a particular distributor with following summary details.
231	0	a	sales) by double clicking on the grid.
232	0	a	Print option of above report is based on User Login Permission only.
233	1	a	There will be an option for doing the following at every screen.
234	1	a	MSIU Sales Team Information Master The system will capture the details of MSIU Salesman
235	1	a	During every distribution transaction the user should select the name of the sales man listed from Team Master.
236	0	a	The sales team master is for the future development of this program, if this program is extended to a country-wide network, this master will help understand and tack sales information.
237	1	a	Design Constraints The system will check the duplicated ID for the salesman and team.
238	1	a	The system can allow the duplicate names of the salesman.
239	1	a	On capture of any duplicate name the system will give a warning message to have the duplicate name or to change the name.
240	1	a	For better reporting purposes it is better to have a differentiating indicator on the name.
241	1	a	Distribution Transactions (Sales from MSIU to Distributor) The system will capture the details of voucher sales between MISU sales team and Distributors.
242	1	a	During the distribution the system will capture the following details, to make Distribution process easily.
243	1	a	With the below details the user can get the details of Distributor-wise and Salesman-wise and Batch No wise sales details as reports.
244	0	a	o Invoice amount = No of vouchers x Wholesale price o Mode of payment is Cash Design Constraints The mandatory information required during a distribution transaction is mentioned below.
245	1	a	(Automatic Calculation) The system will generate an auto-generated number as Distribution Invoice No.
246	1	a	While entering the No of vouchers required, the system should automatically pick the Batch No?s with voucher No?s from the available voucher stock and list the details of each voucher with below information?s as a grid format.
247	0	a	o Batch No o Voucher No o Validity Date The date of distribution will be current (system) date.
248	0	a	But the date of sale can be the past dates.
249	1	a	There will be a future date sale validation check available.
250	1	a	Claim Entry / Processing The program will take maximum care in this form and table, as it become a vital transaction to be captured.
251	0	a	In this module you will see that every capture of data will be validated and checked on saving into the database.
252	0	a	the capture of voucher number, clinical information, diagnosis details, drug and investigation details and the costs are going to provide the program a vital report information.
253	0	a	The system development team will focus its attention in making this module/table function efficiently.
254	0	a	For the easy understanding and designing of the system, this module is subdivided into following sub-modules.
255	0	a	The division of sub-module is purely based on the sub-level categories of the data information.
256	1	a	If any of the information is not available in existing master of above, then the system will have the provision to navigate quickly to its form to enter the master details and back to VSP Screen.
257	0	a	The system will populate Active VSP only on other screen during data entry process, but the system will also populate all VSP for report purpose.
258	0	a	Activation and In-activation of VSP is purely based on the MSIU Management decision.
259	1	a	But if the system is found more than two fraud entries during the claim process of particular VSP, then the system would automatically change the status of that particular VSP as In-activate.
260	0	a	Activation of that particular VSP is again purely based on MSIU Management decision.
261	1	a	The VSP Master Information screen should have a provision to enter the payment terms agreed between MSIU and VSP.
262	1	a	The system will capture following master details to fill the payment terms.
263	0	a	o Payment Mode (Cash / Bank) o Bank Account No o Bank Name o Payment Type (Selection from list of options Bi-Monthly/Monthly) The below details may periodically change depends on the MSIU management decision.
264	1	a	The system will control the payment process and terms.
265	1	a	The allowed users only can able to Add, Modify or delete the VSP master information including payment terms.
266	1	a	The VSP screen will have the provision to view the Claim Status of selected VSP.
267	1	a	The system will facilitate to show the user following details if necessary.
268	0	a	VSP Name (as the report header and below as the details part of report) Claim No Date Date of System Entry Amount Status Remarks Cumulative Total Amount will show in Report footer for the previous payment done.
269	1	a	VSP Staff Master Information The system will have the facility to capture the details of VSP staff details and the necessary master information while entering the claim into the system.
270	0	a	o VSP Name o Staff Code o Staff Name o Staff Type o Qualification Design Constraints The system will generate message while creating a new staff with existing name, but the system will allow the user to save that new staff if its required.
271	0	a	All above information?s other than Qualification are mandatory during the creation of new staff under any VSP.
272	1	a	While submitting the Claim (Treatment Form) to MSIU, the system will have the provision to capture the following details.
273	0	a	These information is vital and shall be used for compared with the processed claims.
274	1	a	Date of submission should be current date The system lists the VSP Name from VSP Master.
275	1	a	Mentioned Forms and Available Forms only accept numeric values.
276	0	a	Available forms may be less than or greater than or equal to Mentioned Forms.
277	1	a	In the transaction part no of forms should match with No of Available Forms The system should print a receipt document based on the information entered during claim submission.
278	0	a	The document should have the following information.
279	0	a	VSP Name Date of Submission (with date and time) No of claims mentioned No of claims Available The above details would print in the report header and below details will print in the detailed part of the report Treatment Form No iv.
280	0	a	Claim Entry The claim entry is purely based on the Treatment (claims) Form submitted by the VSP.
281	0	a	Before the claim entry the user should check the form manually to understand whether any mandatory information is missed in the Claim or not.
282	0	a	If yes, then the user should mark that Claim (Treatment Form) status as Rejected and send back to VSP.
283	1	a	During the claim entry the system should capture the following information.
284	0	a	NDE?s primary mission is to provide products derived from NPOESS observations to NOAA?s operational and climate communities and to other civilian customers.
285	0	a	Each environment will be designed for a specific purpose for both the NPOESS Preparatory Project (NPP) era, as well as the NPOESS C1 and C2 eras.
286	0	a	1.2 Document Overview The System Requirements Specification is based on the IEEE/EIA 12207 Standard for Software Life Cycle Processes published in 1995 by the Institute of Electrical and Electronics Engineers.
287	0	a	This document was created and published using the DOORS 7.1 automated requirements management tool.
288	0	a	), used in discussions of NDE infrastructure.
289	0	a	Element - refers to In-house developed capabilities (i.e., the source code for algorithms, programs, utilities, control tables, called procedures, etc.
290	0	a	), used in discussions of NDE infrastructure.
291	0	a	Product Latency - The point in time when all of the required xDRs needed to create a product are successfully ingested and the point in time where the product is made available for distribution to customers.
292	0	a	System - refers to the assemblage of entity/objects comprising the whole of NDE, with each and every component/element interacting or related to at least one other component/element.
293	0	a	1.4 Document Organization Section 1 provides introduction and background information.
294	0	a	Section 2 lists the applicable and reference documentation.
295	0	a	Section 3 provides the formal requirements statements.
296	0	a	Section 4 provides the qualification provisions.
297	0	a	Section 5 contains traceability information.
298	0	a	This is the nominal system mode.
299	0	a	3.1.2 Degraded System Mode The System shall provide the capability to operate in a Degraded System Mode, within which the system generates a subset of products based upon priority and availability of system resources.
300	1	a	3.1.2.1 Degraded Data Notification The System shall provide the capability to notify customers upon the NPOESS Ground System entering and leaving a Degraded Operations Mode.
301	1	a	3.1.3 Restricted Access Mode The System shall provide the capability to operate in a Restricted Access Mode, within which only users meeting certain criteria will be authorized access to the data.
302	0	a	Criteria will be defined in the TBD Data Denial Plan.
303	1	a	3.1.3.1 Restricted Access Notification The System shall provide the capability to send an electronic notification to authorized users when they receive restricted access data.
304	1	a	3.2.2 Integrate System Elements The System shall be capable of integrating System Elements including Scientific Algorithms, Product Tailoring Tools, Data Format Translation Tools, and other pre-defined transformation utilities.
305	1	a	3.2.3 Test Support The System shall provide the capability to support functional and performance tests of system elements without impacting operational product generation.
306	1	a	3.2.4 Maintain Records of Data and System Elements The System shall be capable of maintaining records of at least 30 days (configurable) worth of Ingest history.
307	1	a	3.2.5 Control Algorithm Execution The System shall provide the capability to control the execution of Scientific Algorithms.
308	1	a	3.2.6 Data Product Generation The System shall be capable of generating Data Products.
309	1	a	3.2.6.1 Data Product Priorities The System shall provide the capability for an authorized user to adjust Product Generation priorities.
310	1	a	3.2.6.2 Platte Carre Projection The System shall be capable of rendering Platte Carre projections.
311	1	a	3.2.6.3 Mercator Projection The System shall be capable of rendering Mercator projections.
312	1	a	3.2.6.4 Polar Stereographic Projection The System shall be capable of rendering Polar Stereographic projections.
313	1	a	3.2.6.5 Available Data Product Aggregations The System shall be capable of aggregating Data Products up to and including one orbit.
314	1	a	3.2.6.6 Time-Averaged Data Products The System shall be capable of producing time-averaged Data Products.
315	1	a	3.2.6.7 Available Grid Spacing The System shall be capable of generating NOAA-Unique and Tailored Data Products with Government-specified grid spacing.
316	1	a	3.2.6.8 BUFR Data Format The System shall be capable of reformatting Data Products into BUFR.
317	1	a	3.2.6.9 GRIB2 Data Format The System shall be capable of reformatting Data Products into GRIB2.
318	1	a	3.2.6.10 GeoTIFF Data Format The System shall be capable of reformatting Data Products into GeoTIFF.
319	1	a	3.2.6.11 HDF5 Data Format The System shall be capable of reformatting Data Products into HDF5.
320	1	a	3.2.6.12 netCDF Data Format The System shall be capable of reformatting Data Products into netCDF.
321	1	a	3.2.6.13 GZIP Compression Format The System shall be capable of compressing Data Products with the GZIP algorithm.
322	1	a	3.2.6.14 ZIP Compression Format The System shall be capable of compressing Data Products with the ZIP algorithm.
323	1	a	3.2.6.15 RICE Compression Format The System shall be capable of compressing Data Products with the RICE algorithm.
324	1	a	3.2.6.16 JPEG Compression Format The System shall be capable of compressing images of Data Products with the JPEG algorithm.
325	1	a	3.2.6.17 MPEG Compression Format The System shall be capable of compressing animated images of Data Products with the MPEG algorithm.
326	1	a	3.2.6.18 Data Product Recovery The System shall be capable of generating Data Products within a time frame not to exceed the maximum user-specified shelf-life of the Data Product.
327	1	a	3.2.7 Data Product Availability The System shall be capable of making Data Products available to registered users.
328	1	a	3.2.7.1 User Subscription Requests The System shall provide an online capability for registered users to request subscriptions to xDRs, Ancillary, NOAA-Unique, and Tailored Data Products.
329	1	a	3.2.7.2 Approve Subscription Requests The System shall provide an online capability for the Government to approve subscription requests for xDRs, Ancillary, NOAA-Unique, and Tailored Data Products.
330	1	a	3.2.7.3 Archive NOAA-Unique Data Products The System shall be capable of distributing NOAA-Unique Data Products to the CLASS Long-Term Archive (LTA).
331	1	a	3.2.7.3.1 Provide Manifest and File Reports to CLASS The System shall provide a list of files distributed to CLASS.
332	1	a	3.2.7.4 Receipt from CLASS The System shall provide the capability to receive an electronic delivery acknowledgement message from CLASS.
333	1	a	3.2.8 Data Delivery The System shall be capable of delivering NDE Data Products to registered user's computer systems.
334	1	a	3.2.9 Order Status Notification The System shall be capable of notifying registered users of the status of their orders.
335	1	a	3.2.10 System Status Notification The System shall be capable of notifying registered users of the status of the System.
336	1	a	3.2.11 Data Authorization Procedures The System shall ensure that NDE information is accessible only to those authorized to have access.
337	1	a	3.2.12 Customer Registration The System shall be capable of registering Users for the purpose of controlling their access to System Elements and Data Products.
338	1	a	3.2.13 Health and Status The System shall provide a mechanism for reporting performance related to resource utilization, communications, product latencies, and hardware.
339	1	a	3.2.14 Provide Automatic Failover The System shall provide an automatic failover capability that will re-create a fully functioning configuration from a failed configuration.
340	1	a	3.2.15 Monitor Input Data Integrity The System shall be capable of monitoring the integrity of all data received from external sources.
341	1	a	3.2.15.1 Define Data Integrity Checks The System shall provide the capability for an authorized user to define data input integrity checks.
342	1	a	3.2.15.2 Execute Data Integrity Checks The System shall be capable of executing and recording the results of data input integrity checks, and initiate actions based on those results.
343	1	a	3.2.16 Data Product Latency The System shall be capable of making products available for distribution according to customer- specified latencies.
344	1	a	3.2.17 Capture Performance Statistics The System shall have the capability to monitor, record statistics, and deliver reports on its performance.
345	1	a	3.2.17.1 Performance Log Retention The System shall be capable of retaining logs of all performance data for no less than 90 consecutive calendar days.
346	1	a	3.2.18 Generate Custom Reports The System shall provide the capability to generate custom reports from data collected during data receipt, processing, and distribution.
347	1	a	3.3 External interface requirements 3.3.1 Receive from IDPS The System shall be capable of receiving data and products from IDPS.
348	1	a	3.3.1.1 xDR Ingest from IDPS The System shall be capable of requesting and accepting all xDRs generated by the IDPS.
349	1	a	3.3.1.2 SARSAT Telemetry from IDPS The System shall be capable of receiving SARSAT Telemetry from the IDPS.
350	1	a	3.3.1.3 A-DCS Data and Telemetry from IDPS The System shall be capable of receiving A-DCS data and telemetry from the IDPS.
351	1	a	3.3.1.4 Product Subscriptions to the IDPS The System shall provide an operator console capable of utilizing IDPS client software for submitting subscriptions for Data Products to the IDPS.
352	1	a	3.3.1.6 Data Delivery Notifications The System shall be capable of receiving Data Delivery Reports (DDRs) from the IDPS.
353	1	a	3.3.2 Ancillary Data Product Acquisition The System shall be capable of receiving Ancillary Data Products from the Environmental Satellite Processing Center (ESPC).
354	1	a	3.3.3 Process Archived Data The System shall be capable of ingesting and processing archived data.
355	1	a	3.3.4 Receive from CLASS The System shall provide an operator console capable of requesting Data Products from the Comprehensive Large Array-data Stewardship System (CLASS).
356	1	a	3.3.4.1 Data Products from CLASS The System shall be capable of receiving Data Products delivered from CLASS.
357	1	a	3.3.4.2 Send CLASS Data Receipt The System shall be capable of sending a Data Receipt to CLASS for each Data Product received from CLASS.
358	1	a	3.3.6 NPOESS Trouble Ticket Interface The System shall provide an operator console capable of interfacing with the NPOESS trouble ticketing system.
359	1	a	3.3.7 ESPC Trouble Ticket Interface The System shall provide an operator console capable of interfacing with the ESPC trouble ticketing system.
360	1	a	3.4 Internal Interface Requirements 3.4.1 Schedule Tasks The System shall be capable of executing tasks according to a schedule.
361	1	a	3.4.2 Event Driven Tasks The System shall be capable of executing tasks initiated by events.
362	1	a	3.4.3 Reliability of Scheduled Tasks The System shall be capable of executing 99% of its scheduled tasks in any consecutive 30 day period.
363	1	a	3.4.4 Reliability of Event Driven Tasks The System shall be capable of executing 99% of its event driven tasks in any consecutive 30 day period.
364	1	a	3.4.5 Adjust Priorities of Tasks The System shall be capable of adjusting the priorities of scheduled and event-driven tasks.
365	1	a	3.5 Internal data Requirements 3.5.1 Test Data Capacity The System shall have the capacity to store 4 Terabytes (TBs) of data for testing purposes.
366	1	a	2 (FGDC-STD-001-1998 ) and the CSDGM Remote Sensing Extensions (FGDC-STD-012-2002).
367	1	a	3.5.3 Record Quality Information The System shall be capable of storing product quality information in the metadata of products created.
368	1	a	3.5.4 NOAA-Unique Product Shelf Life The System shall be capable of retaining Data Products for a configurable period of time not to exceed 96 hours.
369	1	a	3.6.2 Scalability The System shall be capable of adding additional capacity without redesign of it's infrastructure.
370	1	a	3.7.2 Generate System Backups The System shall be capable of generating backups for all NDE data, procedures, and software.
371	1	a	3.7.3 Identify Automated Backup Procedures The System shall be capable of implementing automated backup procedures.
372	1	a	3.7.4 Restore from System Backups The System shall be capable of returning to nominal operations following a restoration from system backups.
373	1	a	3.7.5 Integrity - Protect from Human Errors The System shall be capable of protecting the integrity of NDE data in the event of human errors.
374	1	a	3.7.6 Integrity - Protect from Transmission Errors The System shall be capable of protecting the integrity of NDE data in the event of computer to computer transmission errors.
375	1	a	3.7.7 Integrity - Protect from Software Bugs The System shall be capable of protecting the integrity of NDE data from software bugs.
376	1	a	3.7.8 Integrity - Protect from Hardware Malfunction The System shall be capable of protecting the integrity of NDE data in the event of a hardware malfunction such as a disk crash.
377	1	a	3.7.9 Integrity - Protect from Natural Disasters The System shall be capable of protecting the integrity of NDE data in the event of a natural disaster.
378	1	a	3.7.10 ESPC Network Authorization The NDE System can be accessed only with the authorization of the Government.
379	0	a	Inventory will be provided to the Contractor by OSDPD IT Lead.
380	0	a	Inventory will be provided to the Contractor by OSDPD IT Lead.
381	1	a	3.8.2.2 COTS and Open Source The System shall be constructed using COTS and Open Source software where it is possible, practical, and approved by the Government.
382	1	a	3.8.2.3 Reusability The NDE System Elements shall be designed to be reused in other Satellite Data Processing applications.
383	1	a	3.8.2.4 Modularity The NDE System shall be designed so that Scientific Algorithms are invoked as objects.
384	1	a	3.9.2 Provide an Operator Log The System shall provide the capability for operators to update a summary log for the purposes of tracking the occurrence of significant events or activities.
385	1	a	3.9.3 Sort/Search Operator Log The System shall provide the capability for operators to sort and search on summary log events for the purposes of identifying, troubleshooting, and reporting on significant activities.
386	1	a	3.9.4 Report on Events The System shall be capable of reporting on summary log events.
387	1	a	3.9.5 Restart Procedures The System shall provide the capability for operators to quiesce and restart the System.
388	0	a	This capability should be designed to minimize interruptions of service.
389	1	a	3.9.6 Monitor Input Quality The System shall implement operational quality monitoring procedures that will detect and report to operators and management the acceptability of xDR metadata according to configurable thresholds.
390	1	a	3.9.7 Monitor Output Quality The System shall implement operational quality monitoring procedures that will detect and report to operators and management the acceptability of output product metadata according to configurable thresholds.
391	1	a	3.9.8 Degraded Operations Notification The System shall be capable of changing system status to reflect the condition of NPOESS (i.e., Degraded Operations, Restricted Access).
392	1	a	3.9.9 Archive System Elements The System shall provide the capability for operators to forward NDE System Elements to CLASS for permanent archive.
393	1	a	3.10.1.2 Product Generation Availability The NDE Product Generation capability shall not be interrupted for more than 2 hours in any consecutive 24 hour period and no more than 4 hours in any consecutive 30 day period.
394	1	a	3.10.1.3 Distribution Availability The NDE Distribution capability shall not be interrupted for more than 2 hours in any consecutive 24 hour period and no more than 4 hours in any consecutive 30 day period.
395	1	a	3.10.1.4 Operations Monitoring Availability The NDE Operations Monitoring capability shall not be interrupted for more than 2 hours in any consecutive 24 hour period and no more than 4 hours in any consecutive 30 day period.
396	1	a	3.10.1.5 Interruptions to Development The Development and Maintenance Environment shall be available to at least 25 developers 85% of the time during normal business hours over any consecutive twelve month period.
397	0	a	Normal business hours are 8am to 4pm Eastern Time, Monday through Friday.
398	1	a	3.10.2 Performance Requirements 3.10.2.1 IDPS Data Access Latency The System shall be capable of accessing data delivered by IDPS within no more than ten seconds of notification from IDPS.
399	1	a	3.10.2.2 SARSAT Telemetry The System shall deliver SARSAT Telemetry data from IDPS to US Mission Control Center (USMCC) within 1 minute of their receipt.
400	1	a	3.10.2.3 A-DCS Telemetry The System shall deliver A-DCS Telemetry data from IDPS to the US Global Processing Center within 1 minute of their receipt.
401	1	a	3.10.2.4 A-DCS Data The System shall deliver A-DCS Data Products from IDPS to the US Global Processing Center within 1 minute of their receipt.
402	1	a	3.10.3 Capacity Requirements 3.10.3.1 NPP Era Product Volumes During the NPP mission, the System shall be capable of supporting product volumes of 4 Terrabytes per day of input and 8 Terabytes per day of output.
403	1	a	3.10.3.2 NPOESS-C1 Era Product Volumes During the NPOESS-C1 mission, the System shall be capable of supporting product volumes of 8 Terabytes per day of input and 16 Terrabytes per day of output.
404	1	a	3.10.3.3 NPOESS-C2 Era Product Volumes During the NPOESS-C2 mission, the System shall be capable of supporting product volumes of 8 Terabytes per day of input and 16 Terabytes per day of output.
405	0	a	4 REQUIREMENTS TRACEABILITY 4.1 NDE Contract Section J The Section J portion of the NDE Contract specifies NDE System requirements in terms of Desired Outcomes, Required Services, Performance Standards, and Monitoring Methods.
406	0	a	These requirements have been used as a basis for the SRS items in the Section 4.2 Traceability Table.
407	0	a	All applicable portions of NDE Contract Section J are located in Appendix C. APPENDIX A: Glossary The following table is from the NDE Glossary (Draft) dated 20-Mar-2007, with several additions.
408	0	a	The Terms below are reference in the System Requirements Specification as well as other NDE documents.
409	0	a	An activity diagram represents the business and operational step-by-step workflows of components in a system.
410	0	a	Advanced Data Collection System An application server is a software engine that delivers applications to client computers.
411	1	a	Moreover, an application server should handle most, if not all, of the business logic and data access of the application.
412	0	a	Computer-Aided Software Engineering Comprehensive Large Array-data Stewardship System Hardware, equipment, and licensed software products (i.e., Operating Systems, DBMS, middleware, COTS or GOTS products, CASE tools, etc.
413	0	a	), used by NDE as general term in discussions of infrastructure (See Contract Section J, Figure 38.)
414	0	a	A conducted three months study starting in February 2007 to evaluate options for a NDE backup facility.
415	0	a	Infrastructure necessary to backup the NDE system.
416	0	a	The DAP is a single compressed tar file which contains all information necessary so that an algorithm can be built from scratch and tested independently of other algorithms in the NDE development and test environments.
417	0	a	A file directory or set of directories located on a system within a designated public security zone on the network which is configured to segregate access and provide a place to deliver and receive files necessary for other systems to process.
418	0	a	NOAA-developed system capabilities (e.g., the source code for algorithms, programs, utilities, control tables, called procedures, etc.
419	0	a	), used by NDE as general term in discussions of archiving and configuration management (See Contract Section J, Figure 38.)
420	0	a	An ESB refers to a software architecture construct that provides foundational services for more complex architectures via an event-driven and standards-based messaging engine (the bus).
421	0	a	The ESB is in the category of middleware infrastructure products.
422	0	a	British National Grid reference).
423	0	a	Middleware is computer software that connects software components or applications.
424	0	a	It is used most often to support complex, distributed applications.
425	0	a	The point in time when all of the required xDRs needed to create a product are successfully ingested and the point in time where the product is made available for distribution to customers.
426	0	a	Search and Rescue Satellite-aided Tracking The SADIE is a computing environment where algorithms are integrated with the Data Handling System (DHS).
427	0	a	It contains all the tools and libraries necessary to design, develop, and do unit testing on algorithms.
428	0	a	It also can receive algorithms that were developed in other environments (e.g., the STAR Collaborative Environment) via the delivery of a Delivered Algorithm Package (DAP).
429	0	a	A service is a unit of work done by a service provider for a service consumer.
430	0	a	SOA is an architectural style whose goal is to achieve loose coupling among interacting software agents.
431	0	a	(Source: from Wikipedia) An architecture that relies on service-orientation as its fundamental design principle.
432	0	a	Service-orientation describes an architecture that uses loosely coupled services to support the requirements of business processes and users.
433	0	a	Resources on a network in an SOA environment are made available as independent services that can be accessed without knowledge of their underlying platform implementation.
434	0	a	These concepts can be applied to business, software and other types of producer/consumer systems.
435	0	a	Center for Satellite Applications and Research A subsystem is a set of elements, which is a system itself, and a part of the whole system.
436	0	a	A system is an assemblage of entity/objects comprising a whole with each and every component/element interacting or related to at least one other component/element.
437	0	a	Any object which has no relationship with any other element of the system is not a component of that system.
438	0	a	A use case is a technique for capturing functional requirements of systems.
439	0	a	Each use case provides one or more scenarios that convey how the system should interact with the users, called actor, to achieve a specific business goal or function.
440	0	a	End users or other systems.
441	0	a	Use Case Diagrams model the behavior of a system, subsystem, or class.
442	0	a	A VPN is a private communications network often used within a company, or by several companies or organizations, to communicate confidentially Term Web Server/HTTP Server Definition over a publicly accessible network.
443	0	a	VPN message traffic can be carried over a public networking infrastructure (e.g.
444	0	a	the Internet) on top of standard protocols, or over a service provider's private network with a defined Service Level Agreement (SLA) between the VPN customer and the VPN service provider.
445	0	a	(Source: Wikipedia) For NDE, the VPN is used to authorize roles and access to each user, encrypt the traffic between the user?s system and the NDE systems accessed, and provide strong authentication capabilities for the users.
446	0	a	APPENDIX B: Acronyms and Abbreviations The following table is from the NDE Concept of Operations (Draft) document dated 7-Nov-2007.
447	0	a	The acronyms below are reference in the CONOPS document as well as other NDE documents.
448	0	a	NDE Software Engineering Outcomes Matrix Desired Outcomes The ESPC will have an IT Architecture compliant with government standards and that meets NESDIS requirements.
449	0	a	The EA will also be compliant with guidance from the NESDIS CIO's Office.
450	0	a	EA will include documentation in Table 1.
451	0	a	The contractor's design shall meet IT security standards (see System Management Requirements G through J) ESPC is built according to government standards and Maturity Models.
452	0	a	Costs are reduced and system transition is easier.
453	0	a	The use of existing hardware and software reduces cost.
454	1	a	The contractor shall provide documentation needed for Information System Certification and Accreditation.
455	1	a	The contractor shall use Government Maturity Models for Configuration Control of documentation, Information System components, EA, and IT Security.
456	1	a	The contractor shall design and build the NDE Information System using NOAA IT Best Practices provided by NDE Project Manager.
457	1	a	The contractor shall use existing hardware and software where it is possible, practical, and approved by the Government.
458	0	a	Inventory will be provided to the contractor by OSDPD IT Documentation is complete and high quality.
459	0	a	Documentation includes IT Security Plan, Risk Assessment, Security Test and Evaluation Plan, and Contingency Plan.
460	0	a	CM, EA, and IT Security conform with accepted Government Level 4 Maturity Models.
461	0	a	Technical Reference Model is compared to NDE collection of NOAA Best Practices.
462	0	a	~Analysis of designs ~Analysis of designs ~Analysis of designs ~Analysis of designs SE10 SE11 SE12 Vendor- supported COTS and Open Source software is used to reduce development costs.
463	0	a	Ability to make system management decisions on the basis of system- generated metrics Effectively manage design and development of the system's data processing capabilities Lead.
464	1	a	The contractor shall use Commercial-Off-the-Shelf (COTS) and Open Source software packages where practical, possible, and approved by the Government.
465	0	a	Design documentation identifies COTS used.
466	1	a	Measurability: During the project, prior to coding, the contractor shall provide diagrams and supporting text describing:~ numerical data elements of execution performance (time, volume, number of invocations, etc.
467	0	a	SE13 SE14 Effectively maintain the system's data processing components with a pool of readily available software engineers.
468	0	a	that are appropriate for remote sensing data processing.
469	1	a	The contractor shall develop the data processing elements of the future NDE system using tools that will support the ability to alter executable components without altering source code.
470	0	a	that will promote, to the greatest extent possible, the ability to alter executable elements without altering source code.
471	0	a	Preface This section describes the document stIucture, conventions, and references used to develop this document.
472	0	a	Section 1 Introduction - This section introduces the project and describes its scope and obj ectives, constraints, associated assumptions, and related references.
473	0	a	Section 2 Business Process Flows - This section provides the high level processing ?ows for the NPAC SMS.
474	0	a	Section 3 NPAC Data Administration - This section provides the high level functional requirements related to the NPAC SMS data relationships.
475	0	a	Section 4 Service Provider Data Administration - This section contains the functional requirements for managing service provider information on the NPAC SMS.
476	0	a	Section 5 Subscription Administration - This section contains the functional requirements associated with managing service provider subscriptions for ported numbers on the NPAC SMS.
477	0	a	Section 6 NPAC SMS Interfaces - This section contains the functional requirements associated with the NPAC SMS external interfaces.
478	0	a	Section 7 Security - This section contains the functional requirements for the NPAC SMS system security.
479	0	a	Section 8 Audit Administration - This section contains the functional requirements for NPAC SMS audit administration.
480	0	a	Section 9 Reports - This section contains the functional requirements for NPAC SMS reporting capabilities.
481	0	a	Section 10 Performance and Reliability - This section contains the functional requirements for NPAC SMS system performance and reliability.
482	0	a	Section 11 Billing - This section contains the functional requirements for NPAC SMS usage recording for usage billing.
483	0	a	Appendix A This section contains the ?ow diagrams depicting the NPAC SMS process ?ows.
484	0	a	March 12, 2001 Preface Glossary - This section provides a description of all acronyms and terms used in this document.
485	0	a	EnCIyption Key Exchange ? This section provides information on exchange of keys between Service Providers and the NPAC SMS.
486	0	a	Download File Examples ? This section provides descriptions of the NPAC SMS data download files.
487	0	a	Midwest Region Number Pooling ? This section is deleted in release 3.0.0.
488	0	a	Deleted Requirements ? This section provides a list of requirements that have been deleted from the FRS.
489	0	a	Release Migration ? This section provides requirements for the data migration of the NPAC SMS from Release 2.0 to 3.0.
490	0	a	It will contain only the Change Orders that have been authorized for inclusion in this new major release.
491	0	a	Y 7 Will only be incremented when a new sub-release of an existing release X is authorized.
492	0	a	It will contain only the Change Orders that have been authorized for inclusion in this new sub-release.
493	0	a	Z 7 will be incremented when documentation only clari?cations and/or backward compatibility issues or other de?ciency corrections are made in the FRS and/or HS.
494	0	a	This number will be reset to 0 when Y is incremented.
495	0	a	For example, the ?rst release of the Release 2 FRS will be numbered 2.0.0.
496	0	a	If documentation only claii?cations are introduced in the next release of the FRS document it will be numbered 2.0.1.
497	0	a	If requirements are added to Release 2.0 that require NPAC SMS software changes then the next release of the FRS document will be numbered 2.1.0.
498	0	a	This number scheme is intended to make the mapping between NPAC SMS and the FRS and IIS documentation consistent.
499	0	a	0.4 Abbreviations and Notations To uniquely identify requirements, this document follows a naming convention where the ?rst character is always a letter denoting whether the item is an assumption (A), a constraint (C) or a requirement (R).
500	0	a	Illinois number of requirements has been adopted for the initial release of the NANC document.
501	0	a	In Illinois as requirements were deleted the requirement number and an indication of its deletion were left in the document for tracking purposes.
502	0	a	NANC has chosen to leave these deleted requirements in this document for the initial release of the document.
503	0	a	Further explanation of the numbering scheme follows.
504	0	a	If the second character is the letter ?N?, the item is a requirement, assumption or a constraint that was stated in the narrative portion of the RFP and not assigned a number.
505	0	a	The number following this character identi?es the item?s section in the RFP/requirements document.
506	0	a	March 12, 2001 Preface If the second character is the letter ?X?, the item is a requirement, assumption or a constraint that was added upon award, and not in the RFP.
507	0	a	These items represent clari?cations or enhancements to the RFP.
508	0	a	The number following this character identi?es the item?s section in the RFP/requirements document.
509	0	a	If the second character is the letter ?R?, the item is a requirement, assumption or a constraint that was identi?ed during requirements analysis and veri?cation activities subsequent to award.
510	0	a	These items represent clari?cations or enhancements to the RFP.
511	0	a	The number following this character identi?es the item?s section in the RFP/requirements document.
512	0	a	The following labels are used to identify assumptions, constraints, and requirements within the document.
513	0	a	Each label begins with the letter A, C, or R followed either by a number or letter illustrated below: A- Is a label for each assumption in the document.
514	0	a	Assumptions are conditions that are expected to be true during the design and implementation phases of the project.
515	0	a	This is an assumption that was a numbered assumption in the RFP.
516	0	a	AP- This is an assumption that was added upon award.
517	0	a	AR- This is an assumption that was identi?ed as a new assumption for the system, during post-award meetings with the Illinois LCC.
518	0	a	C- Is a label for each constraint within the document.
519	0	a	Constraints are conditions that restrict the design and implementation scope of the project.
520	0	a	This is a constraint that was a numbered constraint in the RFP.
521	0	a	CN- This is a constraint that was contained in the narrative text in the RFP.
522	0	a	CP- This is a constraint that was added upon award.
523	0	a	CR- This is a constraint that was identi?ed as a new constraint for the system, during post-award meetings with the Illinois LCC.
524	0	a	R- Is a label for each requirement in the document.
525	0	a	Requirements de?ne the functionality expected of the design and implementation.
526	0	a	This is a requirement that was a numbered requirement in the RFP.
527	0	a	RN- This is a requirement that was contained in the narrative text in the RFP.
528	0	a	RR- This is a requirement that was identi?ed in a NPAC SMS release subsequent to 1.X.
529	0	a	March 12, 2001 Preface RX- This is a requirement that was added upon award.
530	0	a	RR- This is a requirement that was identi?ed as a new requirement for the system, during post-award meetings with the Illinois LCC.
531	0	a	Table 0-1 Notation Key 0.5 Document Language Speci?c language is used in the document to denote whether a statement is informative or required.
532	0	a	The following words have these connotations when used to describe actions or items: shall The use of the term ?shall? in this document is intended to precede a required statement.
533	0	a	Compliance with ?shall? must be demonstrated during design review and system acceptance testing.
534	0	a	Statements annotated in this manner are to be treated as informative or preference, but not should required.
535	0	a	Introduction This document de?nes the functional requirements of the Number Portability Administration Center Service Management System (NPAC SMS) enabling Service Provider Portability.
536	0	a	This introduction gives readers a brief overview of NPAC SMS functionality.
537	0	a	It is intended to prepare you for the detailed sections that follow.
538	0	a	If you need more information on any particular area, please consult the applicable detailed sections in the remainder of this document or the NPAC SMS Interoperable Interface Speci?cation.
539	0	a	This introduction is also meant to convey the basic course of events that give the best understanding of the system.
540	0	a	The NPAC SMS also contains a record of all ported numbers and a history ?le of all transactions relating to the porting of a number.
541	0	a	The NPAC SMS shall also provide audit functionality and the ability to transmit LNP routing information to Service Providers to maintain synchronization of Service Provider?s network elements that support LNP.
542	0	a	Both the old and new Service Providers can send a noti?cation to the NPAC SMS from their Service Order Administration Systems (SOA).
543	0	a	When the NPAC SMS receives the noti?cation(s), it will perform certain validation checks, and attempt to match the noti?cation received from the new Service Provider with a concurring noti?cation that may be sent from the old Service Provider.
544	0	a	Assuming the noti?cations are valid, the two Service Providers will complete any physical changes required.
545	0	a	When the new Service Provider due date is reached, the new Service Provider can send an activation notice to the NPAC SMS.
546	0	a	The NPAC SMS will broadcast the update out in real time to each local SMS.
547	1	a	Upon receiving the update from the NPAC SMS, all Service Providers will update their networks.
548	1	a	The NPAC SMS will record any transmission failures and take the appropriate action.
549	0	a	If it then receives the missing noti?cation and the noti?cations indicate agreement among the Service Providers, the process proceeds as normal.
550	1	a	If it was the new Service Provider that failed to respond, the NPAC will log the failure to respond, cancel the request, and notify both Service Providers of the cancellation.
551	1	a	If there is disagreement among the Service Providers as to who will be providing service for the telephone number, the con?ict resolution procedures will be implemented (see Section 1.2.4).
552	1	a	Processes for obtaining authorization from the customer to port a number are de?ned by the Service Providers.
553	0	a	The NPAC is not involved in obtaining or verifying customer approval to port a TN.
554	1	a	1.2.2Disconnect Service Functionality When a ported number is being disconnected, the customer and Service Provider will agree on a date.
555	1	a	The current Service Provider will send an update indicating the disconnect to the NPAC SMS.
556	1	a	The NPAC SMS will broadcast the update to all Service Providers based on the disconnect effective date and remove the telephone number from its database of ported numbers.
557	1	a	Upon receiving the update, all Service Providers will remove the telephone number from their LNP databases.
558	1	a	The NPAC SMS will log the update in history.
559	1	a	Calls to the telephone number will be routed as a non-ported number.
560	1	a	1.2.3Repair Service Functionality A problem will be detected either by a Service Provider or by a customer contacting a Service Provider.
561	1	a	There will be audit capabilities in the NPAC SMS to aid in isolating problems.
562	1	a	If an inaccuracy is found, the NPAC SMS will supply the correct data to any local SMS requesting updates.
563	1	a	The Service Providers will determine who will serve the customer Via internal processes.
564	1	a	When a resolution is reached, the NPAC will be noti?ed and will remove the request from the ?con?ict? state by the new Service Provider.
565	1	a	The new Service Provider can cancel the Subscription Version.
566	1	a	1.2.5Disaster Recovery and Backup Functionality If there is unplanned downtime, the NPAC will assess how long the primary machine will be down.
567	1	a	The NPAC will notify all of the Service Providers of the situation and planned action by electronic noti?cation and telephone calls to the Service Providers? contact numbers.
568	1	a	The Service Providers will attempt to switch to the backup NPAC.
569	1	a	If a Create Subscription has been sent by only the old Service Provider, the old Service Provider may send a message to the NPAC SMS to cancel the Subscription Version.
570	1	a	If both Service Providers have sent a Create Subscription, either may send a message to the NPAC SMS to cancel the Subscription Version.
571	1	a	If both Service Providers concur with the cancellation, the NPAC SMS will set the Subscription Version to canceled and notify both Service Providers that the Subscription Version has been canceled.
572	1	a	If cancellation concurrence is not provided by the new Service Provider the Subscription Version is placed in con?ict by the NPAC SMS.
573	1	a	If cancellation concurrence is not provided by the old Service Provider, the Subscription Version is set to cancel by the NPAC SMS.
574	1	a	1.2.7Audit Request Functionality An audit function will be necessary for troubleshooting customer problems and also as a maintenance process to ensure Subscription Version data integrity across the entire LNP network.
575	1	a	Audits will be concerned with the process of comparing the NPAC SMS View of the LNP network?s Subscription Version data with one or more of the Service Provider?s Views of its network.
576	1	a	In the case of ?on demand? audits, audits may be initiated by any Service Provider who has reason to believe a problem may eXist in another Service Provider?s network.
577	1	a	These audits are executed Via queries to the appropriate Service Provider?s network, and corrected Via downloads to those same networks.
578	1	a	In addition, Local Service Providers will be responsible for comparing database extracts of Subscription data written to an FTP site by the NPAC SMS with their own versions of the same Subscription data.
579	1	a	In a third scenario, the NPAC SMS will select a random sample of active Subscription Versions from its own database, then compare those samples to the representation of that same data in the various Local SMS databases.
580	1	a	All three of the methods outlined above are designed to help ensure data integrity across the LNP network.
581	1	a	1.2.8Report Request Functionality The NPAC SMS supports report generation for pre-de?ned and ad-hoc reports.
582	1	a	The report generation function creates output report ?les according to speci?ed format de?nitions, and distributes reports to output devices as requested.
583	1	a	The report distribution service supports distribution to electronic ?les local/remote printers, e-mail and FAX machines.
584	1	a	1.2.9Data Management Functionality The NPAC SMS will support functionality to manage network, Service Provider, and Subscription Version data.
585	1	a	1.2.9.1NPAC Network Data The NPAC SMS contains data, which de?nes the con?guration of the LNP service and network.
586	1	a	This includes such data as: participating Service Providers, NPA-NXXs that are portable, and LRNs associated with each Service Provider.
587	1	a	1.2.9.3Subscription Version Data The subscription data indicates how local number portability should operate to meet subscribers? needs.
588	1	a	The NPAC inputs Via the NPAC Administrative Interface the information for the NPA split (the current NPA, the new NPA, and the affected NXXs) plus the beginning and end date of the permissive dialing period.
589	1	a	This function of the NPAC Administrative Interface is only available to NPAC Operations personnel.
590	1	a	The NPAC will update its subscription version records when permissive dialing starts to the new NPA.
591	1	a	During the permissive dialing period the NPAC will accept messages with either old or new NPA but broadcasts/downloads with the new NPA only.
592	1	a	In addition, all noti?cations and responses to the SOA system will contain the new NPA only during the permissive dialing period regardless of whether the SOA system is using the old or new NPA in its requests to the NPAC SMS.
593	1	a	If a delete request is received, it is broadcast with the new NPA.
594	1	a	The subscription version ID that the NPAC SMS is aware of for the TN is used in the messages.
595	1	a	Based on information from the LERG, the service providers will update their networks/LSMS to accommodate the permissive dialing period and will update the data in their networks/LSMS after permissive dialing ends.
596	1	a	There is no communication from the NPAC to cause these updates to occur.
597	1	a	No assumptions are made about what the LSMS does during the permissive period to track the NPA-NXX split for a subscription version.
598	1	a	Additionally, the service providers can remove any old LRNs that are no longer valid due to the split, if any, Via an electronic interface (SOA, LSMS, or NPAC Administrative Interface).
599	1	a	The two types are long and short business days/hours.
600	1	a	version port short business days/ hours will be used.
601	1	a	No action is necessary by either the old or new service provider The old service provider who operations personnel.
602	1	a	supports the long business days/hours will have to recognize that the short business days/hours are being used instead of the expected long business days/hours.
603	1	a	Long When the new service provider When both the old and new supports long business service providers support long days/hours and the old service timers for a subscription version providers supports short port long timers will be used.
604	1	a	business days/hours for a subscription version port short No action is necessary by either business days/hours will be the old or new service provider used.
605	1	a	The new service provider who supports the long business days/hours will have to recognize that the short timers are being used instead of the expected long timers.
606	1	a	The two types are long and short timers.
607	1	a	No action is necessary by either the old or new service provider The new service provider who operations personnel.
608	1	a	supports the short timers will have to recognize that the long timers are being used instead of the expected short timers.
609	1	a	No action is necessary by either The old service provider who the old or new service provider supports the short timers will operations personnel.
610	1	a	The SOA requests network data and noti?cation data for a speci?c period of time from the NPAC SMS, which is sent by the NPAC SMS as requested.
611	1	a	During the recovery process, new messages are queued on the NPAC SMS.
612	1	a	At the completion of sending the previously queued messages, the interaction between the SOA and the NPAC SMS resumes for normal message processing.
613	1	a	The LSMS recovery functionality works similar to the SOA, with the addition of recovering subscription data.
614	0	a	The processing steps for this functionality include: 1.
615	1	a	The Service Provider system sends a network data recovery request to the NPAC.
616	1	a	The NPAC takes the time range in the requested criteria, and compares the number to the current tunable value.
617	1	a	If the time range exceeds the tunable value, a DownloadReply is returned to the SP system with the status ?eld populated with value 2, signifying ?time-range-invalid?.
618	1	a	No network data will be included with this reply.
619	1	a	When an SP system sees this response, the suggested behavior is to reduce the time range requested in the network data recovery action and re-issue the request.
620	1	a	The processing steps for this functionality include: 1.
621	1	a	The Service Provider system sends a subscription data recovery request to the NPAC.
622	1	a	The NPAC takes the time range in the requested criteria, and compares the number to the current tunable value.
623	1	a	If the time range exceeds the tunable value, a DownloadReply is returned to the SP system with the status ?eld populated with value 2, signifying ?time-range-invalid?.
624	1	a	No subscription data will be included with this reply.
625	1	a	When an SP system sees this response, the suggested behavior is to reduce the time range requested in the subscription data recovery action and re-issue the request.
626	1	a	1.2.13.3 Notification Recovery Noti?cation Recovery in the NPAC SMS allows a Service Provider for both SOA and LSMS to capture, Via a recovery process, all noti?cations that were missed during a downtime period for the Service Provider.
627	1	a	The Service Provider system sends a noti?cation recovery request to the NPAC.
628	1	a	The NPAC retrieves the records that match the requested criteria, and compares the number to the current tunable value.
629	1	a	No noti?cations will be included with this reply.
630	1	a	When an SP system sees this response, the suggested behavior is to reduce the time range requested in the noti?cation recovery action and re-issue the request.
631	1	a	1.2.14 Number Pooling Overview At the present time, the National Number Pooling approach includes the following: 1.
632	1	a	The NPA-NXX-X Holder Information in the NPAC is a representation of the 1K Block managed by the Pooling Administrator, and represented in the LERG.
633	1	a	The NPAC Customer Data Model (logical) and Service Provider Pro?le (physical) refer to the same information.
634	1	a	At the time of NPA-NXX-X creation, the NPAC will check for ?pending-like, no-active? SVs or ?pending- like Port?To-Original? SVs.
635	1	a	If any are found, the NPAC will reject the creation of this NPA-NXX-X.
636	1	a	An error message will be generated for the NPAC personnel.
637	1	a	The Pending-Like No-Active Subscription Version and Pending-Like Port?to-Original Subscription Version report will be available to NPAC personnel.
638	1	a	The report will contain TN, Old SPID, New SPID, Due Date, and Status.
639	1	a	Once the NPA-NXX-X?s Effective Date has been reached, but prior to the Block?s activation, snapback messages will go to the Block Holder, and default routing will be the responsibility of the Code Holder.
640	0	a	The exception to this is during the de-pool process for the NPA-NXX-X (see #31 below).
641	0	a	The Block Holder Information?s ?Activation Timestamp? is the date/time the NPAC broadcasts block or SV data to the applicable LSMSs.
642	1	a	Only at this point in time are all SPs noti?ed of the ?ownership switchover? date for the 1K Block from the Code Holder (NPA-NXX owning SP) to the Block Holder (NPA-NXX-X owning SP).
643	1	a	Block Create messages over the SOA-to-NPAC SMS Interface will set the SOA Origination to TRUE.
644	1	a	The Block Holder Information?s SOA noti?cation is broadcast over the SOA to NPAC Interface, when the SOA Origination on the Block record is set to TRUE.
645	1	a	At the time of Block creation by the NPAC (attempted on or after the NPA-NXX-X?s Effective Date), the NPAC will check for ?pending-like, no-active? SVs.
646	1	a	If any are found, the NPAC will reject the creation of this Block.
647	1	a	A unique alarmable error message (new error message and error number for Block) will be generated and alarm NPAC personnel.
648	1	a	At the time of Block creation by the SP's SOA (attempted on or after the NPA-NXX-X?s Effective Date), the NPAC will check for ?pending-like, no-active? SVs.
649	1	a	If any are found, the NPAC will reject the creation of this Block.
650	1	a	A unique alarmable error message (new error message and error number for Block, but no alarm to NPAC Personnel) will be generated and sent back to the SP?s SOA.
651	1	a	A new M&P will require the SP to contact NPAC personnel (USA) and request the generation of the Pending-Like No-Active Subscription Version and Pending-Like Port?to-Original Subscription Version report.
652	1	a	The Pending-Like No-Active Subscription Version and Pending-Like Port?to-Original Subscription Version report will be created and will contain TN, Old SPID, New SPID, Due Date, and Status.
653	1	a	Once they are cleaned up, NPAC personnel will attempt the Block creation again (if it is NPAC initiated), or contact the Block Holder SP and inform them that they could re-submit the Block request.
654	1	a	M&P will be established to have NPAC Personnel resolve the broadcast failures with the Service Providers on the Block?s Failed SP List.
655	1	a	The NPAC will execute a background process, once a day, to check for Block completeness.
656	1	a	During this background process, the NPAC will check for active blocks that haven?t been veri?ed to contain 1000 SVs (combination of POOL, LISP, LSPP) for that Block..
657	1	a	This background process will be run for the ?rst time within 24 hours of Block Creation (with an Active status), and once every 24 hours thereafter for incomplete Blocks.
658	1	a	For missing TNs that are identi?ed during this process, the NPAC will create, activate and broadcast the missing SVs to non-EDR Local SMSs (i.e., self-?Xing create, activate and broadcast of missing SVs).
659	1	a	Once all 1000 TNs have been accounted for in the NPAC, this Block will no longer be checked by the NPAC.
660	1	a	The NPAC will manage the synchronization of, and maintain the integrity of, the data between a Block and the subordinate Pooled Subscription Versions within the Block.
661	1	a	This means that, at all times, the LRN and GTT routing data for the Block and all SVs with LNP Type of POOL within the 1K Block, will contain the same values.
662	1	a	The status for the Block and status for each SV with LNP Type of POOL within the 1K Block, may not always contain the same value.
663	0	a	The matriX to coordinate the status is found in the detailed requirements.
664	1	a	The failed SP List for the Block and Failed SP List for each SV with LNP Type of POOL within the 1K Block, may not always contain the same Service Providers.
665	0	a	The matriX to coordinate the various Failed SP Lists is found in the detailed requirements.
666	1	a	Once a Block is ?active?, the routing data can be modi?ed.
667	0	a	This may be performed by NPAC Personnel using the NPAC OpGUI, Service Provider Personnel using the NPAC Low-tech Interface, or Service Provider Via the SOA-to-NPAC SMS Interface.
668	1	a	At the time of NPA-NXX-X deletion (i.e., de-pool), the NPAC will check for ?pending-like, with Active POOL? SVs, or ?pending-like, port?to-original? SVs.
669	1	a	If any are found, the NPAC will reject the Deletion of this NPA-NXX-X.
670	0	a	An error message will be generated for the NPAC personnel.
671	1	a	The Pending-Like With Active POOL Subscription Version and Pending-Like Port?to-Original Subscription Version report will be available to NPAC personnel.
672	0	a	The report will contain TN, Old SPID, New SPID, Due Date, and Status.
673	0	a	Once they are cleaned up, NPAC personnel will await noti?cation from the Pooling Administrator prior to attempting the NPA-NXX-X deletion again.
674	0	a	The NPAC performs a ?cascading delete? when processing an NPA-NXX-X Deletion.
675	0	a	This includes sending deletes of Pooled SV data to non-EDR LSMSs, and sending deletes of Block data to EDR LSMSs.
676	1	a	Once all LSMSs have successfully deleted the Pooled data (the status of all SVs and the Block is Old, and both Failed SP Lists are empty), the NPA-NXX-X is deleted.
677	0	a	Similar to the NPA-NXX-X Creation, the NPA-NXX-X Deletion is broadcast to the appropriate Service Providers, based on the values in their NPA-NXX-X Indicators.
678	1	a	During the de-pooling process, the vacant number treatment responsibility and snapback for TN re- assignment noti?cations have unique behavior, once the Block has migrated to a status of Old.
679	1	a	As de?ned in #14 above, snapback messages will go to the Block Holder, and default routing will be the responsibility of the Code Holder, once the NPA-NXX-X?s Effective Date has been reached.
680	0	a	However, in this de-pooling situation, both snapback messages and default routing responsibility will be the Code Holder.
681	0	a	So, even though the NPA-NXX-X still eXists, it has the same behavior as the ?pre-effective date? NPA-NXX-X s1tuat10n.
682	1	a	Once the Block has been deleted in the NPAC, then NPAC processing considers the Block to be ?deleted? for the Block Holder, and all snapback messages and default routing will go to the Code Holder.
683	0	a	Additionally, the Block is now available to be allocated to another Service Provider.
684	0	a	37. convert the Block and SVs back to the Old NPA-NXX, if the New NPA-NXX is removed from the NPA Split, prior to the end of PDP.
685	1	a	When adding an NPA-NXX-X during an NPA Split, the NPAC will automatically add a corresponding New/Old NPA-NXX-X for an NPA-NXX involved in a Split.
686	1	a	During PDP, the NPAC will treat Block data similar to the treatment of SV data (i.e., either the Old or New NPA-NXX can be sent to the NPAC, but the NPAC will broadcast the New NPA-NXX).
687	1	a	The NPAC Customer LSMS EDR Indicator in the NPAC Customer Data Model will be added to indicate whether or not the Service Provider uses Ef?cient Data Representation on the Local SMS (TRUE : yes, FALSE : no).
688	1	a	The two new objects that will be broadcast over the interface include the NPA-NXX-X (1K Block) block allocation, and Block for EDR compatible Local SMSs that represent the 1000 TNs of POOL?ed numbers as the 1K Block.
689	0	a	The basis for the National Number Pooling requirements was the Illinois Number Pooling NPAC Release 1.4.
690	0	a	The Number Pooling Delta document, National Number Pooling requirements, represents the requirements for National Number Pooling functionality.
691	0	a	NOTE: for the last column (during Block de-pool), the behavior is the same as the pre-effective date column.
692	0	a	A block may still eXist in the NPAC SMS with a status of Old.
693	1	a	At the time of de-pooling, the Block goes back to the Pooling Administrator and is awaiting re-assignment to the next Block Holder.
694	0	a	The NPA-NXX-X may also eXist in the NPAC SMS until a Block is successfully deleted from all Local SMSs.
695	0	a	During that year, the task force made signi?cant progress in de?ning and resolving the issues related to implementing number portability.
696	0	a	All North American regions for deployment in all North American Local Number Portability Regions then used the work done by the Illinois task force to move forward with LNP implementation.
697	0	a	A group was formed under NANC called the LNPA Working Group that oversaw implementation issues and documentation clari?cations to the FRS and Us for Release 1.0.
698	0	a	Midwest Region Number Pooling To support number pooling in the Midwest Region requirements were developed and implemented.
699	0	a	The requirements are included in Appendix F for completeness.
700	0	a	If a service provider system is implementing Midwest Region Number Pooling then some of these requirements will supercede other requirements in this FRS document.
701	0	a	Outbreak Management (OM) is the PHIN functional area intended to support the needs of investigation, monitoring, management, analysis, and reporting of a health event or act of bioterrorism.
702	1	a	OM should aid in the collection and analysis of data to support identifying and containing the health event.
703	1	a	The application should also allow for new objects to be defined and created during the course of an investigation.
704	1	a	Central to the functionality of a system supporting OM is the ability to collect data related to cases and exposures and to create traceable links between all appropriate entities.
705	0	a	By tracing the mechanism of transmission and identifying the source of the health event, the appropriate response staff can more effectively contain the event.
706	0	a	This document provides minimum operational requirements necessary to support an outbreak management system and should in no way preclude a system from incorporating additional functionality beyond what has been covered in this document.
707	1	a	2.3 System Functions and Behaviors: Systems supporting OM should support case investigation, maintain detailed and comprehensive linkages, trace contacts, and quarantine and isolation monitoring activities.
708	1	a	2.4 Analysis, Visualization, and Report Generation: Systems supporting OM should enable investigators to produce both aggregated and individual reports about affected entities and events.
709	1	a	2.5 System Integration and Data Exchange: OM information must be exchangeable, based on established standards, between systems involved in the investigation, identification, confirmation, and reporting of a health event.
710	1	a	2.6 Vocabulary Standards: Standard vocabulary lists and data structures have been defined by standards organizations.
711	1	a	Where they exist, systems supporting OM should use them.
712	1	a	2.8 System Security and Availability: Security of OM data includes the protection of data from corruption and access by unauthorized individuals, as well as the protection of the actual systems supporting OM from sabotage or other failure.
713	1	a	A plan must be established for continuing activities when systems supporting OM are unavailable.
714	1	a	2.9 Privacy: Patients, organizations, and personnel must be protected from fraudulent and unauthorized use of their information.
715	1	a	2.1.2 Systems supporting OM must support structured data entry for common forms and fields to ensure data integrity, validity, and standardization.
716	1	a	A standardized data structure ensures that data mapping of common elements will only be necessary one time, rather than for each event.
717	1	a	2.1.3 Systems supporting OM should support multiple deployment options (e.g., client server, disconnected, and potentially web based).
718	1	a	2.1.3.1 Systems supporting OM should provide the ability for computers in disconnected mode to reconnect to a server to share OM data among other computers that operate in disconnected mode.
719	1	a	2.1.3.2 OM data should be synchronized so that all instances of OM applications working from the same server are able to share and use the same data.
720	1	a	2.1.4 Systems supporting OM should be able to electronically record and store data from remote devices that may be uploaded to an aggregating system.
721	1	a	2.1.5 Systems supporting OM should be capable of using configurable, domain-specific vocabulary.
722	1	a	2.2 DATA REQUIREMENTS The following high-level data requirements are necessary to ensure that the data being collected, analyzed, and reported to support OM are clearly defined.
723	1	a	2.2.1 Entity Data An entity is any being or object involved in a health event.
724	1	a	Entities may be classified as a person, organization, location, animal, object, conveyance, event, or other organism.
725	1	a	Each type of entity requires specific data to be collected.
726	1	a	2.2.1.1.a Other descriptive details may be captured, such as occupation and work history.
727	1	a	A Subject ID should also be collected for animals in an OM investigation.
728	0	a	It may be a challenge to ensure unambiguous identification because demographic details of an animal are not easily identified; therefore, animals involved in investigations may need to be tagged.
729	1	a	2.2.1.6 Systems supporting OM must have the capability to capture data about any conveyance involved in an OM investigation, including: type of conveyance, route taken (e.g., flight number), etc.
730	1	a	2.2.1.7 Systems supporting OM must have the capability to capture data about any public or private gathering of people (e.g., church social, ball game) involved in an OM investigation, including: time, location, nature of the event, etc.
731	1	a	2.2.1.8 Systems supporting OM must have the capability to capture data about any living things other than persons or animals that are involved in an OM investigation, including: type of living thing, and other customizable data collection questions.
732	1	a	2.2.1.9 Systems supporting OM must have the capability to capture an entity?s travel history to support investigations of entities infected, exposed or potentially exposed.
733	1	a	2.2.2 Health Event Data 2.2.2.1 When a health event is investigated, it must be assigned an event identifier (i.e., Event ID) that is unique within the jurisdiction.
734	1	a	2.2.2.3 Systems supporting OM should have the ability to record the case definition for a health event.
735	1	a	2.2.2.4 Systems supporting OM should have the ability to capture changes to the case definition that occur as the health event evolves.
736	1	a	Examples of travel history include a person?s local travel as a part of their daily activities as well as the shipment of animals or plants from one country to another.
737	1	a	2.2.3.1.a Information about each leg of a trip, as well as the parent information about the trip, should be captured.
738	1	a	2.2.3.2 Travel history data to be collected for an animal or object should include shipping invoices, animal shelter delivery and adoption receipts, and delivery schedules (including delivery vehicle and driver information).
739	1	a	2.2.4 Case Investigation and Exposure Contact Data Case and exposure data provide more detailed information beyond demographic data.
740	1	a	Cases can be persons or animals, and exposure contacts can be persons, animals, other organisms, or exposure settings, such as travel conveyance, location, organization, object, or event.
741	1	a	2.2.4.1 Because attributes of both case and exposure data may describe the same entity, systems supporting OM must have the ability to avoid capturing redundant entity demographic information.
742	1	a	2.2.4.2.b There must be a means to update the case diagnosis either manually or automatically if the case definition changes during an event.
743	1	a	2.2.4.2.c Epidemiological (epi) data must be collected to assist in the case investigation of events.
744	1	a	Standard epi data to be collected includes: onset date and time of symptoms, type of symptoms, risk factors, medical history data, laboratory data, procedure data, and questionnaire responses.
745	1	a	2.2.4.2.d Systems supporting OM must allow for dynamic, event-specific case investigation data to be captured.
746	1	a	2.2.4.2.e In the context of a case, all entities exposed to a case must be recorded and linked to the case.
747	1	a	2.2.4.2.f Demographic information should be collected about the investigator, including their name, address, and contact information, so that the investigator may be contacted to answer questions or to provide additional information.
748	1	a	2.2.4.2.g Both the jurisdiction investigating the event and the jurisdiction reporting the cases and associated investigations must be captured.
749	0	a	For example, if a person becomes ill during travel in one jurisdiction but is the resident of another, the illness will be reported by the state (jurisdiction) of residence and investigated by the jurisdiction visited.
750	1	a	2.2.4.2.h Systems supporting OM should have the ability to classify entities associated with the investigation as investigation controls.
751	0	a	For example, controls share demographic characteristics with the subject of the case, but are not infected with the agent that is the focus of the investigation.
752	1	a	2.2.4.3.b Detailed data must be collected about the source of exposure as well as the exposed entity to support contact exposure tracing.
753	1	a	Exposure data related to both the potential source and the potential spread include the entity?s type, Subject ID, Contact ID, contact?s name and address, exposure dates and times, health status, and priority code.
754	1	a	2.2.4.3.c Epi data must be collected to assist in the exposure investigation of health events.
755	1	a	2.2.4.3.d Systems supporting OM must support capturing dynamic, event- specific data that describes contact between two subjects.
756	1	a	2.2.5 Monitoring and Follow-up Data Monitoring and follow-up data is used to track the progress and treatment of subjects who were exposed or potentially exposed to a health event.
757	0	a	For more information about monitoring and follow-up data, please reference ?PHIN Countermeasure/Response Administration Functional Requirements and Process Flows?, available at www.cdc.gov/phin.
758	1	a	2.2.5.1 Systems supporting OM should support the monitoring and follow-up activities required when tracking the status of cases and exposed individuals.
759	1	a	2.2.5.1.a Monitoring data should be collected about cases and exposed individuals who are isolated or quarantined because of a health event.
760	1	a	2.2.5.1.b Follow-up data should be collected from subjects or their proxies to track symptoms and compliance with recommended treatment plans or prophylaxis.
761	1	a	2.2.5.1.c Follow-up data may be received from take response exams of persons who received a countermeasure that requires such an exam (i.e., smallpox vaccination).
762	0	a	These specimens/samples can be collected from places, persons, animals, or environmental sources such as air, water, food, or soil.
763	1	a	2.2.6.1 Specimens/samples collected for laboratory testing must be assigned an identifier (i.e., Specimen ID) that is unique within the jurisdiction.
764	1	a	2.2.6.2 The subject of a specimen/sample collected for laboratory testing must be linked to the specimen/sample by an identifier (i.e., Subject ID) that is unique within the jurisdiction.
765	1	a	2.2.6.3 Systems supporting OM must be able to store data about the specimens/samples that are collected for laboratory testing.
766	1	a	2.2.6.3.a Clinical specimen data should include information about the specimen source/site from which the specimen was taken, symptom date of onset, and whether the sample is acute or convalescent.
767	1	a	2.2.6.3.c Food sample data should include information about the lot number, batch number, manufacturer name, shipping invoice, temperature, sample type (e.g., dairy ? milk, red meat, spice), and product storage condition.
768	1	a	2.2.6.3.d Bar-coding should be supported for the capture of detailed specimen/sample data to improve the quality and efficiency of data collection.
769	1	a	2.2.6.4 Chain of custody information for all specimens/samples should be captured.
770	1	a	2.2.6.6 Systems supporting OM must be able to create a laboratory test request for a specimen/sample or group of specimens/samples.
771	1	a	2.2.6.9 Systems supporting OM must be able to store laboratory result(s) and link the result(s) to the original laboratory test request.
772	0	a	More information about receiving and linking laboratory test requests is found in section 2.5 System Integration and Data Exchange of this document.
773	1	a	2.2.6.10 Systems supporting OM must store data about laboratory results.
774	1	a	2.2.6.10.a If the specimen/sample collection record exists, the laboratory result must be linked to the specimen collection record by the Specimen ID.
775	1	a	2.2.6.10.b If the specimen/sample collection record does not exist, the laboratory result must be linked to the subject by the Subject ID.
776	1	a	2.2.6.10.c All levels of granularity of results (e.g., specimen/sample level, assay level) must be supported.
777	1	a	2.2.9.2 Activity logs, which are tools for investigators to track their actions during a case, should be supported.
778	0	a	For example, investigators may log calls made to monitor symptoms or calls made to schedule follow-up visits.
779	1	a	2.2.9.3 Activity logs may also provide information needed to support communication with various jurisdictions in the event that the investigation crosses jurisdictional boundaries.
780	0	a	For example, if a person becomes ill during travel in one jurisdiction but is the resident of another, the illness will be reported by the state (jurisdiction) of residence, rather than by the jurisdiction visited.
781	1	a	They will be designed by investigators to collect common data elements (e.g., patient demographics, test results, exposure contacts), agent-specific data elements (e.g., specific laboratory test), and other customized data elements.
782	1	a	2.3.1.1.a Electronic questionnaires should provide the capability to accept digital signatures.
783	1	a	2.3.1.2 Systems supporting OM must provide the ability to control the configuration of and revisions to investigation-specific questionnaires.
784	1	a	2.3.1.3 Systems supporting OM must provide the ability to publish investigation- specific questionnaires and implementation guides.
785	1	a	2.3.1.4 Case investigation should be supported by reusable questionnaire libraries that use common terminology (where available) to maximize the efficiency of data exchange.
786	1	a	2.3.1.5 Systems supporting OM should provide a manual or automatic means of updating the status of case records as the case definition changes.
787	1	a	2.3.1.6 Systems supporting OM should track the changes made to the status of case records as a result of changes in the case definition.
788	1	a	2.3.2 Linking Linkages allow investigators to create meaningful analysis, characterize the event, and identify at-risk populations.
789	1	a	2.3.2.1 Systems supporting OM must support dynamically defined associations between entities for the purpose of defining relationships.
790	0	a	For example, person-to-person (e.g., family relationship, exposure relationship), person-to- place (e.g., household, common place), animal-to-person, object-to-place, person-to-travel.
791	1	a	2.3.2.2 Entity-to-epi data links must match the entity to their symptoms, survey questions, specimens/samples collected, laboratory results, and prophylaxis and treatment data.
792	1	a	2.3.2.3 Each new case must be able to link an assigned Entity ID to an Event ID within the scope of the investigation.
793	1	a	2.3.2.5 Laboratory results must be linked to corresponding specimens/samples including multiple results from one specimen/sample), and subjects when the participating laboratory returns the results.
794	1	a	These linkages must unambiguously associate multiple laboratory results to case and contact identifiers.
795	1	a	2.3.3.2 Contacts of exposed entities (e.g., people, animals, places) may be traced, investigated, and monitored.
796	1	a	2.3.3.3 Systems supporting OM should be able to create new contacts from existing case records, and should also identify the contact type.
797	1	a	2.3.3.4 Systems supporting OM must support contact exposure tracing by allowing one contact to be linked to multiple cases, and allowing multiple contacts to be linked to a single case.
798	1	a	2.3.3.5 Systems supporting OM should be able to produce contact work lists for each investigator to use, and should allow sorting by priority or geography.
799	1	a	2.4 ANALYSIS, VISUALIZATION, AND REPORT GENERATION 2.4.1 Systems supporting OM should allow for analytical searches based upon multiple criteria.
800	1	a	2.4.5 Systems supporting OM should have the ability to produce pre-formatted queries and reports to allow faster and more accurate reporting, while still allowing the flexibility of ad-hoc reporting.
801	1	a	2.4.6 Systems supporting OM should have the ability to produce individual reports for each emergency team member or investigator.
802	1	a	2.4.7 Systems supporting OM should have the ability to compare characteristics of exposed and non-exposed (i.e., controls) persons.
803	1	a	2.4.8 Systems supporting OM should have the ability to produce lists of action items (e.g., to do lists).
804	1	a	2.4.9 Systems supporting OM must have the ability to print questionnaires for multiple uses, including taking to the field, use during phone interviews, etc.
805	1	a	2.4.10 Systems supporting OM must be able to aggregate data.
806	0	a	Examples of aggregated data to be supported are: number of cases, number of contacts per case, and number of vaccinations and/or treatments administered.
807	1	a	2.4.11 Health event data should be aggregated into a centralized data store (i.e., data warehouse) designed specifically to support analysis of events over time.
808	1	a	2.4.12 Data should be accessible for use with commonly available analytical tools (e.g., SAS, SPSS, EPI-INFO, MS Access, MS Excel, Crystal Reports).
809	1	a	2.5 SYSTEM INTEGRATION AND DATA EXCHANGE Systems integration requirements specific to systems supporting OM are included in the section below and describe the types of data that OM should be able to send and receive.
810	0	a	This section is limited to describing the types of data exchange that OM must support
811	1	a	Bi-directional, secure exchange of data with partner organizations supports public health investigations across all levels of public health.
812	1	a	2.5.1 Contact information for key response partner organizations should be stored in a local instance of a public health directory for associating to a health event, as described in section 2.2.2 Health event Data of this document.
813	1	a	2.5.2 Systems supporting OM must be able to accept data from other partner systems supporting OM.
814	1	a	2.5.3 Systems supporting OM must be able to create and send messages for laboratory test requests.
815	0	a	This requirement is identified as a key performance measure for assessing preparedness as described in PHIN Preparedness Key Performance Measures, available at www.cdc.gov/phin.
816	1	a	2.5.5 Systems supporting OM must be able to receive, parse and process messages for laboratory results.
817	0	a	This requirement is identified as a key performance measure for assessing preparedness as described in PHIN Preparedness Key Performance Measures, available at www.cdc.gov/phin.
818	1	a	2.5.5.1 Laboratory results should be linked to laboratory test requests, which are linked to subjects.
819	1	a	2.5.6 Systems supporting OM should be able to exchange messages for laboratory results with systems supporting surveillance, early event detection (EED), and other preparedness areas.
820	0	a	This requirement is identified as a key performance measure for assessing preparedness as described in PHIN Preparedness Key Performance Measures, available at www.cdc.gov/phin.
821	1	a	2.5.8 Systems supporting OM must exchange messages for investigations and for exposure contacts.
822	0	a	This requirement is identified as a key performance measure for assessing preparedness as described in PHIN Preparedness Key Performance Measures, available at www.cdc.gov/phin.
823	1	a	2.5.9 Systems supporting OM must be able to receive, parse and process messages for countermeasures that have been administered.
824	0	a	This requirement is identified as a key performance measure for assessing preparedness as described in PHIN Preparedness Key Performance Measures, available at www.cdc.gov/phin.
825	1	a	2.5.9.1 Countermeasures that have been administered must be linked to the entity that was administered the countermeasures.
826	1	a	2.5.10 Systems supporting OM must be able to create and send messages for countermeasure administration requests.
827	0	a	This requirement is identified as a key performance measure for assessing preparedness as described in PHIN Preparedness Key Performance Measures, available at www.cdc.gov/phin.
828	1	a	2.5.11 Systems supporting OM must be able to exchange aggregated data.
829	0	a	Examples of aggregated data to be supported are: number of cases, number of contacts per case, and number of vaccinations and/or treatments administered.
830	1	a	2.5.14 Message components should be grouped by observation type (e.g., laboratory, symptom, exposure, risk, treatment) by systems supporting OM.
831	1	a	2.5.15 Systems supporting OM should support multiple file formats for import and export, such as databases, spreadsheets, messages, and text files, among others.
832	1	a	2.5.16 Data exchange should support analysis and information sharing of possible health events at all levels of public health (e.g., national, state, local).
833	1	a	2.6 VOCABULARY STANDARDS It is recommended that standards be used across systems supporting OM; however, it is required that vocabulary standards be used when exchanging data.
834	0	a	Vocabulary requirements that span PHIN functional areas should be reviewed in ?PHIN Preparedness Cross Functional Components Requirements?, available at www.cdc.gov/phin.
835	0	a	Operational requirements specific to OM are defined below.
836	0	a	Operational requirements that span PHIN functional areas are separately defined and should be reviewed in ?PHIN Preparedness Cross Functional Components Requirements?, available at www.cdc.gov/phin.
837	1	a	2.7.2 Polices regarding data synchronization should be defined to support multiple deployment options as discussed in section 2.1 System Architecture of this document.
838	1	a	2.7.3 Configuration management protocols and personnel should be identified to support multiple deployment options.
839	1	a	2.7.3.1 Protocols and personnel should be identified to support the set-up and configuration of laptops and other field devices used in OM investigations.
840	1	a	2.8 SYSTEM SECURITY AND AVAILABILITY Systems and data supporting OM must be protected from sabotage, corruption and unauthorized access, and must be available subsequent to a catastrophic event.
841	0	a	This specifications establishes the requirements for the product named Qheadache.
842	0	a	The intended audience is the analyst, programmer and tester of Qheadache.
843	0	a	1.2Sc0pe The product is a computerized game that displays an interface used to solve a specific headache.
844	0	a	1.3De?niti0ns, Acronyms, and Abbreviations Not applicable.
845	0	a	1.4References Not applicable.
846	0	a	1.5SRS Document Overview The remaining sections of this document provide a general description, including Characteristics of the users of this project, the product? hardware, and the functional and data requirements of the product.
847	0	a	General description of the project is discussed in section 2 of this document.
848	0	a	Section 2 gives the functional requirements, data requirements and constraints and assumptions made while designing the game.
849	0	a	It also gives the user Viewpoint of product use.
850	0	a	Section 3 gives the specific requirements of the product.
851	0	a	Section 3.0 also discusses the external interface requirements and gives detailed description of functional requirements.
852	0	a	Its user interface uses menus, graphics and sounds.
853	1	a	2.1.2Hardware Interfaces The product requires the use of a keyboard and a mouse to interface with the user.
854	1	a	It requires a graphical display of at least 800*600 resolution.
855	1	a	2.1.3Software Interfaces The product uses the Qt graphical library.
856	1	a	It must run with all the operating systems that Qt supports.
857	0	a	2.1.5Mem0ry Constraints Not applicable.
858	0	a	2.1.6Site Adaptation Requirements Not applicable.
859	1	a	The user must undo and redo its last thousand actions.
860	0	a	2.2.2Time passed to play.
861	1	a	The product must count and display the time that the user uses to play.
862	0	a	2.2.3C0unt of action number.
863	1	a	The product must count and display the number of the user? action.
864	1	a	The product must record the score (time and number of counts) of a play associated with the name of a user.
865	1	a	The product must display a window with all the player? scores.
866	0	a	2.3User Characteristics No qualification is necessary.
867	0	a	2.4Start Up Requirements Not applicable.
868	0	a	2.5App0rti0ning ofRequirements Not applicable.
869	1	a	Other pointing and input devices are allowable, provided they provide similar functions to a mouse and keyboard, namely the ability to move a cursor onscreen to select buttons and the ability to type names.
870	1	a	The product uses menus, graphics and sounds.
871	1	a	The hardware and operating system must provide an 800x600 screen resolution.
872	1	a	Sound is not required to play the game.
873	0	a	? a menu bar, see Chapter 3.2.5.
874	0	a	3.1.ZSOftware Interfaces Not applicable.
875	0	a	3.1.3 Communications Interfaces Not applicable.
876	0	a	3.2Functi0nal Requirements 3.2.1Acti0ns.
877	0	a	3.2.1.1Presentati0n 0f the board.
878	1	a	The board is a rectangular zone where the user could move some blocks.
879	1	a	The height of the board game is 5X, its width is 4X : X can? t be less than 50 pixels and greater than 100 pixels.
880	1	a	The blocks are separated by a marge of 0.1X.
881	1	a	There are four square blocks with a side of X.
882	1	a	There are four rectangular blocks with the following dimensions : a height of 2X and a width of X.
883	1	a	There is one block with the following dimensions : a height of X and a width of 2X.
884	1	a	There is one square block with a side of 2X.
885	0	a	3.2.1.2.21nput Left?Clicked down on a block.
886	0	a	"3.2.1.2.3Processing The game state becomes ""Block deplacement""."
887	0	a	3.2.1.3.21nput Left?Clicked up on a selected block.
888	0	a	"3.2.1.3.3Pr0cessing The game state becomes ""Block selection""."
889	0	a	3.2.1.3.40utput None.
890	0	a	"3.2.1.4.21nput Mouse movement during the ""Block movement"" state."
891	0	a	3.2.1.4.3Processing The selected block follows the mouse movement without overlapp the other blocks and eXit of the game zone.
892	0	a	The selected block can? move near other blocks at least 0.05X from the others blocks.
893	0	a	3.2.1.5.21nput Menu selection.
894	0	a	3.2.1.5.3Processing The game displays the block positions at the places where they were before the last movement.
895	0	a	This action is consider like a movement.
896	0	a	"The ""undo"" action is unvailable if there was no previous movement."
897	0	a	3.2.1.5.40utput New game board display.
898	0	a	3.2.1.6.21nput Menu selection.
899	0	a	3.2.1.6.3Pr0cessing The game displays the block positions at the places where they were before the last movement was canceled.
900	0	a	This action is consider like a movement.
901	0	a	"The redo action is unvailable, if the previous action wasn' trai""undo"" action."
902	0	a	3.2.1.6.40utput New game board display.
903	0	a	3.2.2.1.3Processing All the player statistics are freezed.
904	0	a	"3.2.2.1.40utputs If the number of block movements of the current player is lower than the highest number of block movement recorded in the statistic file, the The ""Finish Window with Statistcs"" is displayed, see Chapter 3.2.2.2."
905	0	a	"If not the ""Simple finish Window"" is displayed, see Chapter 3.2.2.3."
906	0	a	3.2.2.2Fim'sh Window with Statistics.
907	0	a	"3.2.2.2.1Description The Finish Window with Statisctis contains a the following teXt : ""You win !"
908	0	a	"Enter your name : "", an Edit BOX that can contain 20 Characters and a pushbutton with the label ""OK""."
909	0	a	3.2.2.2.21nput The games is over, see Chapter 3.2.2.1.
910	0	a	"3.2.2.2.3Processing The player Clicks on the pushbutton ""OK""."
911	0	a	The player statistics are recorded in the statistic file of the software, according to the requirement of the Chapter 3.2.3.2.
912	0	a	"3.2.2.2.40utputs The ""finish"" window is Closed."
913	0	a	The statistic window is displayed, see Chapter 3.2.3.4.
914	0	a	3.2.2.3.21nput The games is over, see Chapter 3.2.2.1.
915	0	a	"3.2.2.3.3Pr0cessing The player Clicks on the pushbutton ""OK""."
916	0	a	3.2.2.3.40utputs The Simple Finish Window is Closed.
917	0	a	The statistic window is displayed, see Chapter 3.2.3.4.
918	0	a	3.2.3.1.21nput A block movement.
919	0	a	3.2.3.1.3Processing The number of block movement in incremented of 1.
920	0	a	The difference of time of the block movement and the previous recorded time is recorded.
921	0	a	3.2.3.1.40utput None.
922	0	a	3.2.3.2.21nput The Finish Window with Statistics is completed by the player, see Chapter 3.2.2.2.
923	0	a	3.2.3.2.3Processing The statistics of the player (its name, the block movement number, the time passed to solve the headache) is recorded in the statistic file.
924	1	a	If 10 player statistics are already recorded, the player statistics of the file with the greatest number of block movements is erased.
925	0	a	3.2.3.2.40utput If the file was correctly updated, there is no ouput.
926	1	a	If not, like wrong pernissions or disk full, an error message is displayed.
927	0	a	3.2.3.3.21nput Menu selection.
928	0	a	3.2.3.3.3Pr0cessing The data stored in the statistic file are erased.
929	0	a	3.2.3.3.40utput If the file was correctly updated, there is no ouput.
930	0	a	If not, like wrong pernissions or disk full, an error message is displayed.
931	0	a	3.2.3.4Statistic Window.
932	0	a	3.2.3.4.1Descritption The Player Statistics Window is composed of a listbOX of 10 lines.
933	1	a	Each line is composed of the name of a player, the number of block movement, the time used by the player to solve the headache.
934	0	a	3.2.3.4.21nput End of the game (see Chapter 3.2.2.1) or menu selection.
935	0	a	3.2.3.4.3Processing Window display.
936	0	a	3.2.3.4.40utput None.
937	0	a	3.2.4.1.21nput Menu selection.
938	0	a	3.2.4.1.3Processing A dialog bOX is open : the user could Choose a file that contains all the data of the game previously saved.
939	0	a	3.2.4.1.40uput The board game is re?draw according to the file data.
940	0	a	The player statistics are set to the player statistics of the file data.
941	0	a	"3.2.4.2.3Processing If the game was never saved, the processing is identiqual to the action ""Save as...""."
942	0	a	3.2.4.3.21nput Menu selection.
943	0	a	3.2.4.3.3Pr0cessing A dialog bOX is open : the user could Choose a file that will contain all the data of the current game.
944	1	a	NeXt, the following internal data are saved into the file : the current positions of the blocks, their previous positions, the number of the previous movements and the time passed by the user to solve the headache.
945	1	a	3.2.4.4.3Processing If the game is not saved, a dialog bOX is displayed that asks to the player if he wants to save the game.
946	1	a	"If ""Yes"" is selected, the action ""Save"" is processed and the main window disappeared."
947	1	a	"If ""No"" is selected, the main window disappeared."
948	0	a	3.2.5.1.21nput Menu selection.
949	1	a	Requirements of the action determines the continuation.
950	1	a	The menu selection is unvailable if the associated action is unvailable.
951	1	a	Requirements of the action determines the continuation.
952	0	a	3.2.5.3.21nputs Menu selection.
953	0	a	3.2.5.3.40utputs Menu disappears.
954	1	a	Requirements of the action determines the continuation.
955	1	a	Requirements of the action determines the continuation.
956	1	a	3.3Perf0rmance Requirements There can be only one user per machine.
957	1	a	3.4Software S ystem Attributes The software must be portable to the Windows OS.
958	0	a	"This is the Software Requirements Specification (SRS) forthe ""Space Fractions"" project."
959	0	a	The purpose of the document is to describe the purpose and functionality ofthe software product requested by Ms. Andrea Brooks of Pecan Springs Elementary School.
960	0	a	The product will be a web-based, interactive game.
961	0	a	At the end ofthe game, students will be given feedback based on their game scores.
962	0	a	We are also providing an umbrella forthe past games created.
963	0	a	The umbrella will be a web-based menu system allowing the user to choose between the games.
964	0	a	1.3 Definitions, Acronyms, and Abbreviations Term De?nition HTML Hypertext Markup Language: the formatting language used to describe web pages.
965	0	a	iMac A type of computer made by Apple Computers.
966	0	a	KB Kilobytes: a measure ofthe amount of space available on a computer.
967	0	a	An application for creating dynamic graphics and sound, Mggaomedia generally intended to produce artifacts for display over the World V\?de Web.
968	0	a	MB Megabytes: a measure ofthe amount of space available on a computer.
969	0	a	Iu -in A downloadable component for a web browserthat p 9 provides additional functionality.
970	0	a	umbrella A software product that consists of several independent programs that are unified under a single interface.
971	0	a	web-based Able to be run overthe web, wnthout any permanent files on the user's computer.
972	0	a	1.5 Overview of Document This document is designed to provide information to both the client and the technical designers of the software.
973	0	a	Section one is a brief overview ofthe product, including definitions and references.
974	0	a	The definitions section is intended to assist the technical designers as well as the client in clarifying the terms used throughout the document.
975	0	a	Section two is a general description ofthe product requirements from a user?s perspective.
976	0	a	This section includes information such as functional and data requirements, general constraints, and assumptions.
977	0	a	Section three is a detailed requirements specification targeted toward technical designers.
978	0	a	Speci?c requirements and expectations regarding the components of the product are given in this portion ofthe SRS document.
979	0	a	These students are in the process of learning how to solve arithmetic problems involving fractions.
980	0	a	Moreover, these students (as well as the teacher) are assumed to have basic computer and Internet skills that will enable them to use this software.
981	0	a	Alice, a sixth grade female student learning fractions who does not like to use computers; .
982	0	a	Claire, a sixth grade teacher with computer skills.
983	0	a	Detailed descriptions ofthese users follow.
984	0	a	UserA (Alice) Alice is a sixth grade female student learning fractions who does not like to use computers.
985	0	a	Although she has used computers for email and games, she considers computers to be boring.
986	0	a	She would rather read a story ortalk with friends.
987	0	a	However, she is really interested in learning fractions and enjoys working with other students.
988	0	a	User B (Bobby) Bobby is a sixth grade male student learning fractions who is very competitive.
989	0	a	He enjoys playing competitive sports and using computers, especially to play games.
990	0	a	He has used computers since age ?ve.
991	0	a	He particularly likes to play games where he can excel.
992	0	a	He is only somewhat interested in learning about fractions.
993	0	a	User C (Claire) Claire is a sixth grade teacher who has computer skills.
994	0	a	She enjoys teaching sixth graders and is interested in finding innovative ways to teach her students.
995	0	a	She has been teaching the sixth grade for six years now.
996	0	a	She finds that students have a particularly hard time learning about the concepts related to fractions.
997	0	a	This program requires a web browser capable of running Flash movies.
998	1	a	0 This program will not be dependent on any other software and is not a component of another program.
999	1	a	0 Since the product requires a Flash-supporting browser, the external interface will depend on the configuration of the browser.
1000	1	a	Therefore, various environments may yield different interfaces, but the behavior ofthe program will be the same.
1001	1	a	This program does not require any new hardware.
1002	0	a	2.3 Overview of Functional Requirements The umbrella will be a singular component, providing links to projects relating to fractions, decimals, and percents in a format accessible over the World Vl?de Web.
1003	1	a	"The ""Space Fractions"" game will have the following functional components: 1."
1004	1	a	An introductory movie to set up the storyline.
1005	1	a	A main menu, including a brief help section.
1006	1	a	A series of fraction questions (testing arithmetic, equivalence, graphical interpretation, and improper versus proper fraction skills) that sequentially form a storyline related to the introduction.
1007	1	a	An ending scene where the user's score is calculated and ranked, with an option to quit the game or try again.
1008	1	a	2.4 Overview of Data Requirements The administrator of the program may wish to design a custom game complete with custom fraction questions.
1009	1	a	This information must be saved in a ?le on the web server where the game is hosted and will be easily edited through simplified administrative screens.
1010	1	a	The user's score must be kept as local data within the game so that the results may be given at the end ofthe game.
1011	1	a	Input will consist entirely of mouse clicks forthe userto choose answer options and to set preferences.
1012	1	a	Output will be sounds and animations through Flash movies to acknowledge success or failure in answering the fraction questions.
1013	1	a	2.5 General Constraints, Assumptions, Dependencies, and Guidelines This program will run on any lnternet-accessible computer with a web browserthat supports JavaScript and Macromedia Flash 5.
1014	1	a	2.6 User View of Product Use Upon starting the program, the user is taken through a brief introductory movie to provide background story and information that will help them complete the fraction questions.
1015	1	a	There is an option to skip the introduction, if desired.
1016	1	a	Othen/vise, they will watch the movie to its completion and be taken to the main screen.
1017	1	a	Also, a short summary of our team and a link to our website will be provided.
1018	1	a	To start the game, the user will click on the corresponding button.
1019	1	a	Claire will be assured that the students will know what to do from this main screen.
1020	0	a	Next, the user progresses through a series ofquestions in the form of cartoon images that comprise the main story.
1021	1	a	These questions will test the user's knowledge of basic fraction operations and will be presented as a multiple-choice questionnaire.
1022	1	a	The user will be given a problem and then must click the correct solution.
1023	1	a	A friendly robotic sidekick will assist with general usability issues and give hints towards the correct response.
1024	1	a	Bobby will be captivated by the storyline and will wish to progress as fast as possible.
1025	1	a	The gameplay will be dynamic and adaptive to provide different storylines based on the user's progress.
1026	1	a	Afterthe last question, the main character's adventure will come to an end.
1027	1	a	The last scene will be determined by the user's response on certain critical questions that impact the story's plot, and an option to try again will be presented.
1028	1	a	In addition, the player's exact score will be given with a customized message.
1029	1	a	This gives Bobby the competition he requires and allows Alice to have a unique experience the next time through the program.
1030	1	a	Either way, the user will be encouraged to try again and further bettertheir fraction skills.
1031	1	a	She navigates to the updater page, which asks for a password.
1032	1	a	Upon correct submission of her password, she uses an intuitive web forms interface to update the game to her desiring.
1033	1	a	The interface forthis program will be relatively simple.
1034	1	a	As the target users are User in the sixth grade, this product will be as graphically oriented and appealing as Interface possible.
1035	1	a	No portion of the interface will require the keyboard
1036	1	a	This software will be developed in Macromedia Flash and HTML.
1037	1	a	There is no explicit interaction with the client's hardware.
1038	1	a	Othen/vise, this product has no software interaction.
1039	1	a	Purpose A description ofthe functional requirement and its reason(s).
1040	1	a	Which inputs; in what form/format will inputs arrive; from what sources input will Inputs be derived, legal domains of each input element.
1041	1	a	Describes the outcome rather than the implementation; includes any validity Processing checks on the data, exact timing of each operation (if needed), how to handle unexpected or abnormal situations.
1042	1	a	Outputs Purpose A short movie to set up the storyline ofthe game and provide information to help the user complete the fraction questions.
1043	1	a	Inputs lfthe user clicks a mouse button while in this component, they will skip the movie and proceed to the main menu.
1044	1	a	No other input is recognized.
1045	1	a	Processing Upon entrance to the movie component, the introductory movie will begin playing.
1046	1	a	If a mouse click is received, this component will terminate the movie and fon/vard the userto the main menu component.
1047	1	a	Othen/vise, the movie will continue to its completion and the user will be moved to the main menu.
1048	1	a	Outputs A movie is displayed on the screen.
1049	1	a	3.2.3 Main Menu Purpose A menu that displays a brief section offering help on playing the game, and provides a linkto the main game component and the Denominators' web page.
1050	1	a	Inputs The user can click on the corresponding button to begin the game or follow the link to the Denominators' web page.
1051	1	a	Processing This component will wait until the user selects a button.
1052	1	a	At that time, the user will be fon/varded to the game sequence component orthe Denominators' web page, depending on the button selected.
1053	1	a	Outputs This component will output eitherthe game sequence or the Denominators' web page.
1054	1	a	3.2.4 Game Sequence A series of multiple-choice fraction questions, which sequentially form a Purpose storyline related to the introduction.
1055	1	a	In uts The user will respond to questions by clicking on the desired answer from a set p of choices.
1056	1	a	This component will display a question, and then wait until the user chooses an answer.
1057	1	a	0 lfthe user selects the correct answer, a message to this effect will be displayed and the component will move to the next question.
1058	1	a	0 lfthe incorrect answer is selected, this component will inform the user of Processing this and give them another chance to answerthe question.
1059	1	a	However, their score will not count this question as being answered correctly.
1060	1	a	Afterthe user has proceeded through a set number ofquestions, they will be directed to the ending scene component.
1061	1	a	Inputs The user can select eitherto end the game or return to the main menu via mouse clicks.
1062	1	a	Processing This component will wait until the user selects eitherto return to the main menu orto exit the game.
1063	1	a	After receiving the user?s input, the component will act accordingly.
1064	1	a	Outputs The user's overall score is displayed, as well as a plot conclusion that is obviously related to the story in certain key questions.
1065	1	a	3.2.6 Question Updater Purpose A web-accessible tool to allow questions in the game sequence to be updated by a game administrator.
1066	1	a	Inputs The user will input new data via pulldown menus and text fields.
1067	1	a	Each question will be updated on a separate page, and the user will click a button to progress between these pages.
1068	1	a	Processing The component will wait forthe userto click a submission button for each question.
1069	1	a	After the button is clicked, the component will check that the inputted data is complete and makes sense in the context ofthe updated question.
1070	1	a	Outputs The component will generate a text ?le on the game server, which is used by the game sequence to dynamically load question data.
1071	1	a	Inputs The user will follow a number of links to World Vl?de Web documents.
1072	1	a	Processing This component will wait for a userto click a link, and then follow that link.
1073	1	a	Outputs The component opens the speci?ed 828 product in a separate window.
1074	1	a	3.3 Performance Requirements Only one person can use a single instance ofthe product.
1075	1	a	However, the product will reside on the Internet so more than one user can access the product and download its content for use on their computer.
1076	1	a	Due to the relatively small size ofthe introductory and main menu movies, they can be downloaded in approximately one minute with a modem connection.
1077	1	a	Because Flash movies do not have to be fully downloaded to play, the main game can be played within a few minutes with a regular modem connection to the Internet.
1078	1	a	The product will be as secure as the web browserthat will run the product.
1079	1	a	The product will be available overthe Internet via the S28 website.
1080	0	a	Reliability will be ensured by extensive testing by the team members and mentors, if available.
1081	1	a	Maintainability is a primary goal for this project.
1082	0	a	For example, using appropriate sub- scenes in the main Flash game to split up the code will allow for easy alteration at a later date.
1083	0	a	Purpose This document aims at capturing the complete software requirements for the system.
1084	0	a	It fully describes the external behaviour of the application(s) or subsystem(s) identified.
1085	0	a	It also describes non?functional requirements, design constraints and other factors necessary to provide a complete and comprehensive description of the requirements for the software.
1086	0	a	The current version of this document is the one released at end of iteration C1.
1087	0	a	Structure of the The first chapter describes the functional and non?functional requirements.
1088	0	a	The document second chapter describes the use?case model comprehensively, in terms of how the model is structured into packages and what use cases and actors are in the model.
1089	0	a	"A requirement is defined as ""a condition or capability to which a system must conform""."
1090	0	a	Functional requirements specify actions that a system must be able to perform, without taking physical constraints into consideration.
1091	0	a	These are often best described in a use?case model and in use cases.
1092	0	a	Functional requirements thus specify the input and output behaviour of a system.
1093	0	a	Requirements that are not functional are sometimes called non-functional requirements.
1094	0	a	Many requirements are non?functional, and describe only attributes of the system or attributes of the system environment.
1095	0	a	There are a many different kinds of requirements.
1096	0	a	One way of categorizing them is described as the FURPS+ model [GRA92], using the acronym FURPS to describe the major categories of requirements with subcategories as shown below.
1097	0	a	A design requirement, often called a design constraint, specifies or constrains the design of a system.
1098	0	a	This section should indicate any design constraints on the system being built.
1099	0	a	Design constraints represent design decisions that have been mandated and must be adhered to.
1100	0	a	Examples include software languages, software process requirements, prescribed use of developmental tools, architectural and design constraints, purchased components, class libraries, etc.
1101	0	a	This section defines the interfaces that must be supported by the application.
1102	0	a	It should contain adequate specificity, protocols, ports and logical addresses, etc., so that the software can be developed and verified against the interface requirements.
1103	0	a	I Software interface (software interfaces to other components of the software system.
1104	0	a	These may be purchased components, components reused from another application or components being developed for subsystems outside of the scope of this project, but with which this software application must interact).
1105	0	a	Applicable This section describes by reference any applicable standards and the specific sections Standards of any such standards that apply to the system being described.
1106	0	a	For example, this Requirements could include legal, quality and regulatory standards, industry standards for usability, (STD) interoperability, internationalization, operating system compliance, etc.
1107	1	a	FUN?Ol The system must allow a member of the network to send requests to a particular or all the other members about possible delivery of a driver?s smart card to a similar person.
1108	1	a	FUN?02 The system must allow a member of the network to send a bulk request on all or a large part of its driver?s smart card holders to a particular or all members of the network.
1109	1	a	FUN?03 The system must allow a member to do statistics on messages issued and received from/to his system.
1110	1	a	FUN?04 The system must provide automatic reply to the sender of the request through the use of a standard interface to the Members systems.
1111	1	a	FUN?OS The system must track the work?ow between senders and related replies.
1112	1	a	FUN?07 The system must allow the administrator to extract statistics of use, standard delay of reply by member/period, percentage of unsuccessful transaction, .
1113	1	a	FUN?08 The system must provide the management of user rights and permissions.
1114	1	a	FUN?O9 The system must be able to define and manage various type of messages already in the driver?s smart card holder like pre? delivery check, stolen/lost cards, renewals, exchanges and duplicates.
1115	1	a	FUN? 10 The system must be able to include new members in the network through simple administrative tasks.
1116	1	a	The system must be such that none of the Member States of the network, including the administrator, re?construct a consolidated European database.
1117	1	a	FUN? 15 The system must allow a Member State (through its Card Issuing Authority) to send card status modification requests (lost, stolen,.
1118	0	a	Introduction Non?functional requirements describe only attributes of the system or attributes of the system environment.
1119	0	a	This is no longer the case since everybody agrees upon having a single point of contact per Member State (even though the Member State is organized with several Card Issuing Authorities ? up to the Member State to manage its own organisation).
1120	1	a	PER?02 There will be no restriction in time or place for the use of the software built from the specifications produced under this contract.
1121	1	a	PER?03 The system must be able to establish and keep the dialog with the Members systems despite the various technical environments and technologies used on their sites.
1122	1	a	PER?04 The system will be designed so that background tasks can continue while the user performs foreground tasks.
1123	1	a	PER?05 The system will be used 24x7 by operators under pressure to produce results rapidly.
1124	1	a	The system must respond rapidly to user requests irrespective of any background tasks.
1125	0	a	Such high? availability (24x7) is also required from the Member States systems to ensure acceptable response time (less than 1 minute) to enforcement authorities requests.
1126	1	a	The system should be able to support other types of message structure to cover f .i.
1127	1	a	a future driving licence network and correlated activities.
1128	1	a	SUP?O2 The system must be maintainable and extensible.
1129	1	a	SUP?03 The system must be designed so that it can migrate to upgraded hardware or new versions of the operating systems involved.
1130	1	a	SUP?O4 The system must be able to migrate to other type of network than the one proposed by TESTA?II.
1131	1	a	DES?O2 Each Member of this network will organise its data about smart card holders with no constraints or recommendations on operating system and/or technology used.
1132	1	a	The system will be able to dialog with these environments or specify a generic interface to dialog with the Member?s applications.
1133	0	a	Implementation The table hereafter lists all the non?functional ?implementation? requirements: requirements INT?Ol The system must use the network facilities supplied by the TESTA?II network.
1134	1	a	INT?02 The algorithms in the software will be based on existing techniques and no research will be required to develop new algorithms under this contract.
1135	1	a	INT?03 Most of the functionality of the new software shall depend on pre?existing or commercially available software.
1136	0	a	Contents This chapter contains the following topics: A use?case model is a model of the system's intended functions and its surroundings.
1137	0	a	It serves as a contract between the customer, the users and the system developers on the functionality of the system, which allows : I Customers and users to validate that the system will become what they expected.
1138	0	a	I System developers to build what is expected.
1139	0	a	The same use?case model is used in system analysis, design, implementation, and testing.
1140	0	a	The use?case model consists of use cases and actors.
1141	0	a	An actor defines a coherent set of roles that users of the system can play when interacting with it.
1142	0	a	A user can either be an individual or an external system.
1143	0	a	A use case defines a set of use?case instances, where each instance is a sequence of actions a system performs that yields an observable result of value to a particular actor.
1144	0	a	Each use case in the model is described in detail, showing step?by?step how the system interacts with the actors, and what the system does in the use case.
1145	0	a	Use cases function as a unifying thread throughout the software lifecycle.
1146	0	a	hacking The TCN Adminislrelur isnul relaled m any 01A and wurksfurlhe Ec urTmsIed Third Parly company huding and managing Ihe TACHOneI services Introduction This map describes the list of identified use cases.
1147	0	a	For clarity reasons, use cases are organized as packages.
1148	0	a	The description of each of the use cases packages is given in the next sections.
1149	0	a	Use Case 01 ? Check driver(s)? issued cards Description This use case consists of processing a request for checking driver?s issued card coming from a Card Issuing Authority (CIA).
1150	0	a	Such request could contain the data for a single driver (online mode) or several drivers (batch mode).
1151	0	a	This use case is also used by enforcers (on behalf of CIA ? as TACHOnet only sees CIA as SPOC) during road checks.
1152	0	a	Basic flow The basic flow consists of the following steps: Step Action 1 TACHOnet deciphers the received request and logs the received request as?is in its tracking database.
1153	0	a	2 TACHOnet validates its syntax and assigns it a TACHOnet refid (TCNRefId).
1154	0	a	5 For each received response, TACHOnet deciphers it, logs it as?is in its tracking database and validates its syntax.
1155	0	a	If it is valid, TACHOnet stores the response data (linked to the TCN refid) in the database (for later building the single consolidated response that TACHOnet will send when all responses are received or when the timeout is reached).
1156	0	a	It is also useful for enforcement authorities during road?checks where workshop could also be checked (beside driver cards).
1157	0	a	The checked card is identified by its card number and its issuing Member State code.
1158	1	a	As an issued card must be unique, it should only exist in a single CIA data store (the CIA having issued the card).
1159	0	a	Basic flow The basic flow consists of the following steps: Step Action 1 TACHOnet deciphers the received request and logs the received request as?is in its tracking database.
1160	0	a	2 TACHOnet validates its syntax and assigns it a TACHOnet refid (TCNRefId).
1161	0	a	3 TACHOnet will build as many new requests as issuing Member State codes identified in the original request.
1162	0	a	TACHOnet figures out the target issuing Member State(s) from the issuing Member State code given for each to?be?checked card.
1163	1	a	Every new request only contains card number(s) issued by a particular Member State.
1164	1	a	4 For each identified issuing Member State(s), TACHOnet builds, logs and encrypts the new request, sends it to it and waits for receiving the response.
1165	1	a	5 For each received response, TACHOnet deciphers it, logs it as?is in its tracking database and validates its syntax.
1166	1	a	If it?s valid, TACHOnet stores the response message (linked to the TCNRede) in the database (for later building the single consolidated response that TACHOnet will send when all responses are received or when the timeout is reached).
1167	1	a	6 When all responses are received or when the timeout is reached, TACHOnet builds, logs and encrypts the consolidated response (from the responses received so far), and sends it to the original caller.
1168	1	a	Alternate flows The same alternate flows as described for UC?Ol (page 23) may exist depending on the result of some events/actions of the basic flow.
1169	1	a	Afterwards, if still unsuccessful, it will record a ?Server Error? status code.
1170	1	a	TCN will not check the validity of the state transition declared in this transaction (e.g.
1171	0	a	It's up the MS responsibility to check the validity of such state transition (and return a ModStatusCode=CardStatuslnvalid in the XML response message).
1172	0	a	Table 1 ? New card status Basic flow The basic flow consists of the following steps: Step Action 1 TACHOnet deciphers the received request and logs the received request as?is in its tracking database.
1173	1	a	2 TACHOnet validates its syntax and assigns it a TACHOnet refid (TCNRede).
1174	1	a	3 TACHOnet will build as many new requests as issuing Member State codes identified in the original request.
1175	1	a	TACHOnet figures out the target issuing Member States based on the CIA country code given in the original request.
1176	1	a	Every new request only contains card number(s) issued by a particular Member State.
1177	1	a	4 For each identified issuing Member State(s), TACHOnet builds, logs and encrypts the new request, sends it to the Member State and waits for receiving the response.
1178	1	a	If it?s valid, TACHOnet stores the response message (linked to the TCNRede) in the database (for later building the single consolidated response that TACHOnet will send when all responses are received or when the timeout is reached).
1179	1	a	6 When all responses are received or when the timeout is reached, TACHOnet builds, logs and encrypts the consolidated response (from the responses received so far), and sends it to the original caller.
1180	0	a	Alternate flows The same alternate flows as described for UC?Ol (page 23) may exist depending on the result of some events/actions of the basic flow.
1181	1	a	Pre-conditions 0 The CIA sending the declaration must be defined in TACHOnet 0 The CIA sending the declaration must send its request using the TACHOnet required request format (see below).
1182	1	a	0 The CIA sending the declaration must have first sent a request for checking the card number for which status modification is required.
1183	0	a	Post-conditions 0 The CIA sending the declaration has received a response to its request.
1184	0	a	0 The CIA having issued the card has received the request and processed it.
1185	1	a	TACHOnet figures out the issuing Member State code(s) based on the driving license issuing nation (and not the card issuing Member State code) given for each sub request.
1186	1	a	Every new request only contains card and driving license number(s) issued by a particular Member State.
1187	1	a	For each identified issuing Member State(s), TACHOnet builds, logs and encrypts the new request, sends it to the Member State and waits for receiving the response.
1188	1	a	For each received response, TACHOnet deciphers it, logs it as?is in its tracking database and validates its syntax.
1189	1	a	If it?s valid, TACHOnet stores the response message (linked to the TCNRefId) in the database (for later building the single consolidated response that TACHOnet will send when all responses are received or when the timeout is reached).
1190	1	a	When all responses are received or when the timeout is reached, TACHOnet builds, logs and encrypts the consolidated response (from the responses received so far), and sends it to the original caller.
1191	0	a	Alternate flows The same alternate flows as described for UC?Ol (page 23) may exist depending on the result of some events/actions of the basic flow.
1192	1	a	The Member State CIAs should call upon this service when issuing a new card to get the computed search keys of the driver? s surname and first names, so to store them in their local data store.
1193	1	a	When a Member State CIA will receive a TACHOnet request for checking driver?s issued card, it should use the search keys given in the request to search against their local data store (along with the given driver?s birth date).
1194	1	a	It?s therefore of major importance to use a common algorithm and to store computed search keys in the local data store.
1195	1	a	Nevertheless, Member States are free to use their own Phonetic algorithm (if existing like in Germany).
1196	1	a	In such a case, it?s the Member State responsibility to compute the search keys based on the given driver? s surname and first of the first names.
1197	1	a	The caller must provide the mandatory input parameters.
1198	1	a	The caller has received the computed search keys (or a negative error code).
1199	1	a	), TACHOnet returns a negative status code to the request.
1200	1	a	Special 0 This service should ideally be implemented as a synchronous Web Service.
1201	1	a	0 A downloadable version of this web service should also be made available (.NET and Java) to enable some Member States to install and use it locally.
1202	1	a	Pre-conditions The caller must provide the mandatory input parameters.
1203	0	a	Post-conditions The caller has received the computed search keys (or a negative error code).
1204	1	a	This use case enables the TCN Administrator to create a new CIA Administrator account in the Active Directory for a CIA Administrator using the Microsoft Management Console Active Directory Users and Computers (MMC) .
1205	0	a	Primary Actor TCN Administrator (or delegates to the operator).
1206	0	a	Preconditions The actor has access to the Microsoft Management Console Active Directory Users and Computers.
1207	0	a	Postconditions The new CIA Administrator has been created and has now access to the ReportManager Web site.
1208	1	a	Stakeholders Access to the ReportManager Web site (providing the TCN usage statistics reports) and Interest should only be allowed to the CIA Administrators.
1209	1	a	Therefore, every CIA Administrator must be assigned a user account and password.
1210	0	a	Sequence Diagram Technology and I Access to the ReportManager web site will be secured by using Windows Data Variations accounts.
1211	1	a	The TCN Administrator has access to the Microsoft Management Console Active Directory Users and Computers.
1212	0	a	In the production environment (if not, he may ask the operator to perform the steps).
1213	0	a	I Only one CIA Administrator account will be created per Member State.
1214	0	a	I All users are managed in the Active Directory.
1215	0	a	I The TACHOnet Administrator will also be assigned one account.
1216	0	a	Technology and Access to the ReportManager web site will be secured by using Windows accounts.
1217	0	a	Data Variations List Assumptions I The TCN Administrator has access to the Microsoft Management Console Active Directory Users and Computers.
1218	0	a	In the production environment (if not, he may ask the operator to perform the steps).
1219	0	a	I Only one CIA Administrator account will be created per Member State.
1220	0	a	I All users are managed in the Active Directory.
1221	0	a	I The TACHOnet Administrator will also be assigned one account.
1222	0	a	I The list of requests for the last 14 days (List).
1223	0	a	I The percentage of each status code values (Timeout, ServerError,.
1224	0	a	I The count and percentage of each status code values for each CIA (Consolidated list).
1225	0	a	I The count and percentage of each CIA for each type of requests (Consolidated list).
1226	0	a	I The count and percentage of each type of requests (CheckIssuedCards, CheckCardStatus,.
1227	1	a	The usage statistics should give information about the outgoing requests (from TACHOnet to a CIA) for a given period: I The list of requests for the last 14 days (List).
1228	0	a	I The percentage of OK status code value for each CIA (Consolidated chart).
1229	0	a	I The percentage of each status code values (Timeout, ServerError,.
1230	0	a	I The count and percentage of each status code values for each CIA (Consolidated list).
1231	0	a	I The count and percentage of each CIA for each type of requests (Consolidated list).
1232	0	a	I The count and percentage of each type of requests for each mode ? Batch and On?line ? (Consolidated list).
1233	0	a	The consolidated lists should also give information about the minimum, maximum and average value of the time it took to complete the transaction and for the given timeout value.
1234	0	a	2 The Job: Tachonet Transfer executes the SP: TransferInfo which transfers expired transactions from the production database to the datawarehouse database.
1235	0	a	3 The Job: Tachonet Transfer executes the SP: ProcessInfo.
1236	0	a	4 The SP: ProcessInfo executes the Dts: TachonetDWOlap Processing which processes cubes in the OLAP database.
1237	0	a	1 Introduction This section provides an oveIView of this project.
1238	0	a	1.1 Purpose The putpose of this document is to describe functionality and behavior of the new agentMom fiamework.
1239	0	a	This document is intended to be Viewed only by project advisor and committee members.
1240	0	a	1.2 Scope This document covers the software requirements for the project?
1241	0	a	App1ying Broadcasting/Multicasting/Secured Communication to agentMom in Multi? Agent Systems?.
1242	0	a	1.3 Definitions, Acronym & Abbreviations agentMom 1.2 refers to current implementation of agentMom New agentMom refers to this project, including agentMom with capability of broadcasting, multicasting and secured communication. 
1243	0	a	Unicast refers to one-to-one communication in such a way that a packet originates from a single Intemet host, and it is destined to a unique location of another Intemet host.
1244	0	a	Multicast refers to one-to-many communication in such a way that a packet Oiiginates from a single Intemet host, and it is destined to multiple receivers within the same multicast address.
1245	0	a	Broadcast refers to one-to-many communication in such a way that a packet Oiiginates from a single Internet host, and it is destined to all receivers within the same local network.
1246	0	a	Orgagigtion refers to a set of agents.
1247	0	a	Reorgagigtion refers to a situation where the previous organization structure is not ef?cient to succeed the mission Group refers to a set of agents who agiee to use the same multicast address to subscribe group message.
1248	0	a	There is no ambition to strive for completeness in this document.
1249	0	a	Time-To -Live (TIL) refers to the number of hops that multicast message is allowed to remain in the network before it is discarded by the router.
1250	0	a	1.5 Overview The remainder of this document provides a greater detail functionality and requirement of the software.
1251	0	a	Section 2 desolibes product perspective, oveIall functionality, intended users, constraints and assumption of this software.
1252	0	a	Section 3 provides general Use Cases and speci?c requirement of this software.
1253	0	a	2 Overall Description This section provides an oveIView of the proj ect functionality and factors that affect this project and its requirements.
1254	0	a	2.1 Product Perspective This project will be a fIaInework that provides reusability of agents communication .
1255	0	a	It is implemented in J ava and provides the basic building blocks for building agents, conversations between agents, and the message that are passed in the conversations.
1256	0	a	2.1.1 Software InteIface ? java version 1.4.0 is required to use the software.
1257	0	a	2.1.2 Communication Interface ? TCP/IP is used in order to send unicast message.
1258	0	a	Multicast protocol is used in order to send multicast message.
1259	1	a	UDP is used in order to send broadcast message.
1260	1	a	2.2 Product Functions 2.2.1 Enable agents to broadcast a message to all the agents within the same local network.
1261	1	a	2.2.2 Enable agents to multicast a message to all the agents within the same multicast address.
1262	1	a	2.2.3 Enable agents to unicast a message to other agents within organization.
1263	1	a	2.2.4 Allow agents to choose among unicast, multicast and broadcast communication.
1264	1	a	2.2.5 Allow agents to join and leave multicast group.
1265	1	a	2.2.6 Provide message enc1yption and deCIyption techniques for secured communication. 
1266	0	a	2.2.7 Allow agents to choose to encrypt or not to encrypt message.
1267	1	a	2.3 User Characteristics Users who want to implement multi? agent systems based on this framework are expected to have general knowledge of Java programming, object-on'ented programming and Multi? Agent Systems Engine eIing Methodology.
1268	1	a	2.4.1 Reliable message deliver ? multicast/broadcast packets are delivered with best effort.
1269	0	a	Thus, a packet may be delivered to all speci?ed agents or none.
1270	0	a	2.4.2 Security ? we provide some basic mechanisms for secu1ity such as message enCIyption.
1271	1	a	However, there is no guaIantee that the others cannot decrypt the enc1ypted messages.
1272	1	a	2.4.3 Multicast Protocol ? in order to send multicast message, netw01k environment such as router, netw01k card and operating systems must support multicast protocol.
1273	0	a	2.4.4 Broadcast Message ? in many network, only system administrator is allowed to send broadcast message.
1274	0	a	2.5 Assumptions and Dependencies 
1275	0	a	.2.5.1 We assume that each agent knows the address of destinating agents in order to send unicast message.
1276	0	a	2.5.2 We assume that each agent has enough knowledge to decide the best way to communicate with the other agents.
1277	1	a	2.5.3 In the case of using secured multicast communication, we assume that there is an agent whom each agent can request for the same enc1yption and deCIyption key.
1278	0	a	This agent should maintain a list of agents who are allowed to get the keys.
1279	0	a	2.5.4 We assume that each agent knows the multicast address in order to send multicast message.
1280	0	a	3 Specific Requirements This section provides all of the project requirements in detail.
1281	1	a	Message is enCIypted or Message is not enc1ypted.
1282	0	a	An agent sends notify to join/leave multicast group.
1283	0	a	Message is deCIypted only if Message is enc1ypted.
1284	1	a	For example, Agent_B and Agent_D belong to the same group, and then Agent_B wants to leave the group and Agent_A wants to join the group.
1285	0	a	In this situation, when reorganization occurs, Agent_A who is previously not pan of the group may send notify message to join the group, and Agent_B who is previously part of the group, may send notify message to leave the group.
1286	1	a	For instance, Agent_B suffers a failure in one of its capabilities and does not want to receive any further message from the group.
1287	1	a	Agent_A who may have capability to substitute Agent_B is needed to be pan of the group.
1288	0	a	This involves sending notify of join and leave the group.
1289	0	a	Message is encrypted or Message is not encrypted.
1290	0	a	An agent sends multicast message to the group (multicast address).
1291	1	a	Other agents in the group receive message.
1292	0	a	Message 1s decrypted only if Message 1s encrypted I11 this situation, Agent_ A wants to send a message to everyone within the group, assuming that Agent_A, Agent_B and Agent_C subscribe to the same multicast address.
1293	1	a	This involves the multicast communication since other agents who do not belong to the group carmot receive this message.
1294	0	a	For instance, an agent may want to inform everyone in the group when the assigned tasks are completed.
1295	0	a	This is more effective than in unicast communication since only one copy is sent.
1296	0	a	Also, using biddmgmarket-based protocols ?t well with this kind of communication An agent may request a bid from other agents for doing some tasks.
1297	0	a	An agent sends message to everyone in the same local network.
1298	0	a	Other agent in the same local network receive message.
1299	0	a	In this situation, Agent_A wants to send a message to everyone within the same local network that agent A belongs to.
1300	0	a	This involves the broadcast communication since any agent in the same local network as Agent_A can receive this message.
1301	0	a	For instance, when a new agent who does not previously exist in that local network wants to armounce the existence to other agents.
1302	0	a	3.2 Speci?c Requirement.
1303	1	a	 3.2.1 Unicast Communication 
1304	1	a	3.2.1.1 *agentMom shall support the ability to send unicast message.
1305	1	a	3.2.1.2 *agentMom shall support the ability to receive unicast message.
1306	1	a	3.2.1.3 Unicast message shall only be received by the speci?ed address.
1307	1	a	3.2.1.4 Unicast message shall arrive at the speci?ed address and in order.
1308	0	a	3.2.2 Multicast Communication.
1309	1	a	 3.2.2.1 *agentMom shall support the ability to send multicast message.
1310	1	a	3.2.2.2 *agentMom shall support the ability to receive multicast message.
1311	1	a	3.2.2.3 *agentMom shall support the ability to send request to join multicast group.
1312	1	a	3.2.2.4 *agentMom shall support the ability to send request to leave multicast group.
1313	1	a	3.2.2.5 agentMom shall not allow receiving multicast message from a group before joining that multicast group.
1314	1	a	3.2.2.6 agentMom shall not allow receiving multicast message from a group after leaving that multicast group.
1315	1	a	3.2.2.7 agentMom shall support the ability to set 1ime-to-live for multicast message.
1316	1	a	3.2.2.8 agentMom shall support the ability to set multicast address and port for sending and receiving multicast message.
1317	1	a	3.2.2.9 agentMom shall support the ability to receive multicast message from multiple groups.
1318	0	a	3.2.3 Broadcast Communication.
1319	1	a	3.2.3.1 *agentMom shall support the ability to sent broadcast message.
1320	1	a	3.2.3.2 *agentMom shall support the ability to receive broadcast message.
1321	0	a	3.2.4 Security.
1322	1	a	3.2.4.1 *agentMom shall support the ability to encrypt unicast message.
1323	1	a	3.2.4.2 *agentMom shall support the ability to decrypt unicast message.
1324	1	a	3.2.4.3 agentMom shall allow an agent to decide whether or not to encrypt a message.
1325	1	a	3.2.4.4 agentMom shall automatically decrypt encrypted message.
1326	1	a	3.2.4.5 agentMom shall support the ability to enc1yptmulticastmessage.
1327	1	a	3.2.4.6 agentMom shall support the ability to decrypt multicast message.
1328	0	a	3.2.5 Architecture.
1329	1	a	agentMom with shall support the use of the architecture that agent directly controls the conversations.
1330	1	a	agentMom shall support the use of the architecture that agent?s components control the conversations.
1331	0	a	3.2.6 Compa1ibility.
1332	0	a	3.2.6.1 The new built agentMom shall be compatible with the agentMom.
1333	0	a	As such D8 is a so-called common deliverable, beyond workpackage borders.
1334	0	a	There is no ambition to strive for completeness in this document.
1335	0	a	All BEYOND project members have been approached and partners themselves have made a selection of appropriate projects that could support the goal ofthis deliverable.
1336	0	a	It was decided that a domain-oriented approach provides a comprehensive structure for this deliverable.
1337	1	a	It supports the placement of the individual projects in their context, and allows key aspects of the involved workpackages (multimodality, adaptivity, simulation and usability) to be emphasized.
1338	0	a	Therefore, the other partners had to find a way to overcome this problem.
1339	0	a	One consequence is that most of the contributing partners devoted resources to usability engineering activities, as reported in this deliverable.
1340	0	a	Also, reconsidering the purpose of this deliverable D8 and devoting some time to the usability issues has delayed this deliverable.
1341	0	a	The contributions of the indivual project are ordered according to their application domain.
1342	0	a	Finally, project-wide conclusions concerning the evolution from the first to the second milestone are formulated.
1343	0	a	The purpose and approach of D8 has been agreed upon during the team meeting in Delft (NI), November 2000.
1344	0	a	The following arguments contributed to the de?nition of D8, as it is currently presented.
1345	0	a	"D8, ?Functional Specification and Architecture?, can to some extent be considered as a second iteration on D2 ""Requirements and Usability Methodology""."
1346	0	a	The rationale behind this conclusion is as follows.
1347	0	a	"After describing ""key concepts"" in deliverable D1, the BEYOND partners have contributed to D2, in which the requirements have been detailed and the usability methodology has been described."
1348	1	a	Most of the BEYOND partners planned to have a first prototype at the time of the ?rst milestone (after one year of research in the consortium).
1349	0	a	This is in particular the case for the partners that are directly active in one of the application domains (Public domain, Home domain, Vetronics domain, Avionics domain).
1350	1	a	Consequently, the requirements stated in D2 are considered as a kind of checklist for the first prototype.
1351	1	a	Based on the lessons learnt from the first prototype, ideas for the second prototype have been collected.
1352	1	a	It seems acceptable that the relation D2?milestone 1/prototype 1 is the same as D8-milestone 2/prototype 2.
1353	1	a	This as opposed to the realization of new prototypes during the second half ofthe project period.
1354	0	a	As a result it was decided that a domain-oriented approach provides a comprehensive structure for this deliverable.
1355	0	a	It supports the placement of the individual projects in their context, and allows key aspects of the involved workpackages (multimodality, adaptivity, simulation and usability) to be emphasized.
1356	1	a	However, we opted to let the workpackages take part through projects in application domains in order to obtain a coherent and comprehensive report.
1357	1	a	It should be emphasized (and it should be obvious after reading this deliverable) that the key aspects multimodality, adaptivity, simulation and usability are independent variables.
1358	1	a	They are different dimensions along which the Uls are investigated, but they have nothing to do with the order in which the projects are listed.
1359	0	a	The level to which these aspects have been addressed in the projects differs considerably.
1360	0	a	Also, there are sections on architectural issues.
1361	0	a	It has to be explicitly stated that due to uncertainties in the German funding situation, the consortium lacked the experienced partners for a separate usability workpackage.
1362	0	a	Therefore, the other partners had to find a way to overcome this problem.
1363	0	a	One consequence is that most of the contributing partners devoted resources to usability engineering activities, as reported in this deliverable.
1364	0	a	The above mentioned relation between deliverables D1 (key concepts), D2 (requirements) and D8 (functional specifications) is applicable for all the listed projects.
1365	1	a	D1, D2 and D8 are all common deliverables.
1366	1	a	Besides this, there are relations with other deliverables that are the result of particular workpackages.
1367	0	a	For instance, D3 ?Common Adaptivity Reference Framework? from WP2 comes into play in the adaptivity and/or architectural sections of this document.
1368	1	a	This illustrates that the migration from the first to the second prototype takes into account adaptivity issues, possibly inspired by the cooperation in the context of the adaptivity framework.
1369	1	a	Similar relations can be found with regard to multimodality and simulation.
1370	0	a	It is likely that the relationship also extends to future deliverables, intended to provide even more detail when we progress towards milestone 2.
1371	0	a	Finally, project-wide conclusions concerning the evolution from the first to the second milestone are formulated.
1372	0	a	APC (apc interactive solutions AG) is working on the development of information networks, terminals and kiosk solutions to address people's needs for information in public space.
1373	1	a	The core component in this project is the information terminal which is called accesspoint.
1374	0	a	It resembles the interface between users and the network which transports and provides context sensitive information.
1375	1	a	The accesspoint is higly multimodal and provides a good basis for adaptive services.
1376	0	a	APC has devoted part of its development to user interface design.
1377	0	a	Many features have been implemented in a first multimodal Accesspoint prototype.
1378	0	a	This is considered to be crucial not only for the accesspoint services but the acceptance of the whole system where essential functionalities are speech controlled dialogs.
1379	1	a	The second prototype will follow and offer adaptive features as well.
1380	0	a	It will enable enhanced understanding of voice commands and beter dialog design will be an important step towards natural language understanding.
1381	1	a	Project Status During the first year, comprehensive analysis and functional specifications have culminated into the first multi-modal prototype accesspoint.
1382	0	a	Its basic technological implementation has been tested during operations in numerous public space applications as a geographical information system and marketing support media among many others.
1383	0	a	During the second year, development of modular component based modules will address the lack of functionality and interoperability that are currently missing.
1384	0	a	Goals for the second prototype are guidelines for basic user interface design and the simulation of a sample application.
1385	1	a	Another focus is to comply with open architecture standards and maintain accessibility of web-hosted data.
1386	1	a	Methods and results concerning usability As indicated in the project status, usability data has been acquired by log file analysis and video surveillance of user sessions.
1387	1	a	Furthermore, users have been asked to participate in opinion polls and fill in questionnaires.
1388	0	a	Pre-evaluation of the user interface has been carried out together with design experts by APC corporate partners.
1389	0	a	Results were mostly focused on acceptance of the system in public space, and address the design of the solid, speech and graphical user interface.
1390	0	a	It has been found that a major issue in the design of the solid user interface is ergonomics.
1391	1	a	The most important requirement is the stability of the system on a high-Ievel user application level, which is a consequence of the availability of basic network and terminal functionality.
1392	1	a	System failures caused by user operation or network malfunctions have to be avoided.
1393	1	a	Dead ends in dialogs have to be addressed by a special help system and contextual understanding has to be provided.
1394	0	a	The system must guide users throughout the interaction process quickly and effectively and it has to be designed to avoid cognitive overloads caused by information overflow.
1395	0	a	The accesspoint has to be controllable through different modalities.
1396	0	a	A switch between modalities must not affect the system operations, consequently there should be no need to re-initiate the dialog status.
1397	0	a	Likewise, it should be possible to switch the current context without loosing perspective in case the system does not estimate the context properly.
1398	0	a	General changing requirements and extensions There is an urgent need for extensibility of the software system.
1399	0	a	The monolithic implementation which is used at the moment does not support modelling of upcoming functionality requests and it is very dif?cult to maintain and extend.
1400	0	a	Although the ?rst prototype complies with the specified functionality we have decided to re-implement it from scratch and carefully design all application interfaces for process communications.
1401	0	a	Better development tools to handle the speech system on an abstract level are required to improve the process of extending its rule database.
1402	0	a	For better extensibility, context engines need to be implemented rather than interfaces and the method of choice are neural networks.
1403	0	a	As for training purposes new tools are needed and should be able to derive input from rule databases which are used at the moment.
1404	0	a	Usability related specifications There are two major aspects which are of vital importance for the acceptance of the terminal in public space applications.
1405	0	a	Firstly the solid user interface requires high standards in ergonomics and robustness.
1406	1	a	"Secondly the system needs to have a ?subtle notion"" of its services to guide users quickly and effectively."
1407	1	a	It must be self explicable and understand users' needs.
1408	1	a	It must also be able to handle context specific dialogs.
1409	1	a	Dialogs which it doesn't understand clearly should be handled properly to limit user frustration.
1410	0	a	Context switches must be supported at any state of the session and the system should offer alternatives and rank them by guessing its likelyhood.
1411	0	a	The graphical and speech user interface need to complement each other.
1412	0	a	They represent input and output channels and provide access to the state of the context BEYOND Public Deliverable 8 Functional Specifications and Architecture 9 February 2001 ITEA 99002 BEYOND engine.
1413	1	a	The information flow must be compatible with average user capabilities to avoid cognitive overload.
1414	0	a	The graphical user interface model presents information in an abstract two dimensional way and supports virtual characters.
1415	0	a	Further points address training of the context engine of which some have already been mentioned above.
1416	0	a	Adaptivity related specifications The following adaptivity specifications are limited to single user sessions.
1417	0	a	It is assumed that multiple user sessions are not very likely to occur in public space applications.
1418	1	a	A general single user session occurs when one person in front of the terminal interacts with the system.
1419	0	a	An onlooker, or person inside the interaction area of the terminal is already considered to be a user.
1420	0	a	"Some adaptivity related speci?cations are partly indicated in section ?Usability related specifications"" above."
1421	0	a	Contextual understanding is an example and support of context switches without explicit requests are another.
1422	0	a	The interaction process should be as natural as possible and the development should ultimatly enable natural language understanding.
1423	0	a	every single user is understood instantly irrelevant of age, gender or other distinct characteristics.
1424	0	a	Multimodality related specifications The terminal is designed to support classical input-output channels like typing or reading, and complement them with speech and visual capabilities.
1425	1	a	Except for high level features, most of the above mentioned adaptivity specifications primarily rely on multimodality related features.
1426	0	a	Visual and audio surveillance enable user detection and language understanding through face and speech recognition.
1427	1	a	At the moment, higher level functions and more powerful features for enhanced sensing can be implemented by combining speech and visual information.
1428	1	a	Mode switches which are not initiated by the system are only possible through input channels.
1429	1	a	Output presentation is determined by the system and the user has no direct influence in this case.
1430	0	a	If desired the user can override default settings, but because of privacy issues, certain output channels are preferred.
1431	1	a	Simulation related specifications Certain new usage scenarios require extended functionality which has not been implemented yet.
1432	0	a	The system functionality should be extensible and able to be integrated into the simulation environment to interface existing and new features at the same time.
1433	0	a	To describe the newly defined specification, the simulation environment should provide an abstract high level scripting language thus providing an interpreter.
1434	0	a	Architectural issues To ensure extensibility of the software system, an open architecture has been chosen.
1435	1	a	All functionalities will be implemented using components or even distributed components in a client-server oriented approach.
1436	0	a	Because of multimedia capabilities operating system selection is virtually limited to the MS V\?ndows based platform.
1437	0	a	The implementations of the context engine with near natural language capabilities, the multiple modality support functions and the speech and graphical interfaces are heavily component based.
1438	1	a	Introduction Home entertainment systems are embedded-computer systems that deliver entertainment content to consumers in their homes.
1439	0	a	The home environment places special constraints on entertainment systems, such as audio-video systems.
1440	0	a	The expected evolution is that home systems can adapt to suit to individual preferences, different contexts of use, and different types of content.
1441	0	a	The user interfaces of adaptive home systems will have to communicate this adaptivity to the user.
1442	0	a	A first step towards adaptive user interfaces is to have an easy way to create customisable or ?flexible? user interfaces.
1443	0	a	Flexibility means here: adaptivity in the development phase.
1444	1	a	However, the process to develop these ?exible user interfaces needs to be improved and supported by tools.
1445	0	a	Currently, user interfaces are mostly specified on paper with sometimes-Iimited tool support, and it takes many man-years to develop them.
1446	0	a	Prototypes or simulations, if developed well, are far more comprehensive than lots of pages of description and they allow early validation ofthe usability in a cost-effective way.
1447	1	a	In the computer world, authoring tools or Rapid Application Development tools are used to prototype and build the graphical parts of an application.
1448	0	a	These parts are compiled into executable code.
1449	0	a	An authoring tool for the consumer world can use a similar approach as the user interface development tools in the computer world.
1450	0	a	However, the consumer world has extra constraints that have to be taken into account: in particular, these are limited RAM, lack of hard disk and comparably slow processors.
1451	0	a	The high level requirements forthis authoring tool are: c The authoring tool should allow easy modification of the behaviour of user interfaces.
1452	0	a	0 The authoring tool should support easy development of adaptive user interfaces.
1453	0	a	0 The authoring tool should allow the functional requirements speci?cation of the next generation of consumer products to be developed in a much faster and ef?cient manner.
1454	0	a	BEYOND Public Deliverable 8 Functional Specifications and Architecture 14 February 2001 ITEA 99002 BEYOND The ?rst prototype of the authoring tool offers a basic functionality.
1455	0	a	This functionality has been testing extensively by expert users in a pilot project.
1456	1	a	Their experiences resulted in more knowledge, needed to specify new requirements.
1457	1	a	In the mean time, a common reference model for adaptive systems has been developed.
1458	1	a	The second prototype should offer a more extended functionality based on the new requirements and it should take into account the common reference model.
1459	0	a	The aim of the two prototypes is to give us insight in the feasibility of the development of an authoring tool for user interface development of consumer products.
1460	0	a	Project status In the first year of the project, we started with an early version of the first prototype and focussed on the specification of the requirements for this prototype, by doing usability tests.
1461	1	a	This resulted in a list of requirements for the first prototype as described in section 5.4.1.
1462	0	a	Also our contribution to the reference model for adaptivity (document D3) gave us a better insight in the domain of adaptivity.
1463	1	a	In the first half of the second project-year, the ?rst prototype has been used in a pilot project, where a user interface for a speci?c consumer system, a DVD (Digital Versatile Disc) player was developed.
1464	1	a	This usability testing by expert users in a real project was needed to gain better knowledge on what we expect from an authoring tool.
1465	0	a	The requirements for a second prototype, speci?ed in section 5.4.1 are based on the knowledge gathered in these activities.
1466	1	a	Although the ?rst prototype offered a limited functionality, it gave us the possibility to gain experience on the desired functionality of an authoring tool.
1467	0	a	Our authoring tool specifically targets speci?cation, design, simulation and code generation, for the development of on-screen-based user interfaces and control of consumer products.
1468	0	a	Code generation for a target platform is not yet supported.
1469	0	a	The requirements ofthe ?rst prototype are described by the requirements listed below: 0 The authoring tool provides a set of standard widgets.
1470	1	a	A widget is a graphical entity representing the interface between a user and the application software.
1471	1	a	0 The authoring tool provides for each project a project repository containing a font definition, a colour palette, bitmap images and strings.
1472	1	a	o The authoring tool allows the user to manage a palette and its colours.
1473	0	a	Colours are organised in a palette.
1474	1	a	o The authoring tool allows the userto import bitmaps from an external source.
1475	1	a	0 The authoring tool allows the userto simulate a user interface on a PC.
1476	0	a	An extensive evaluation of the ?rst prototype, by trying out the tool for the development of the on-screen-based user interface of a DVD player resulted in new requirements for a second prototype.
1477	0	a	From the UI developer?s point of view, the main need was the addition of the ability to create menus in an OSD UI.
1478	1	a	Besides this important user requirement, the second prototype of the tool should demonstrate code generation for a target platform, in this case the DVD player.
1479	0	a	The extension - requirements for the second prototype are: c The authoring tool provides a complex widget containing a menu structure and a navigation function.
1480	1	a	0 The authoring tool should provide a menu editor.
1481	0	a	This menu editor allows the userto define items in a menu.
1482	0	a	0 The authoring tool allows the user to generate C code for a target platform, e.g.a DVD player.
1483	0	a	Usability related specifications The general requirements, listed in section 5.1, all stress the usability aspects of the tool.
1484	1	a	A possible usability requirement that will be considered for future extensions is: ?the authoring tool should be able to assist the user in the authoring process by a wizar 5.4.3.
1485	1	a	The compiled C code can then be loaded in the target system.
1486	0	a	Off-Iine adaptivity is a first step towards the development of more adaptive user interfaces.
1487	0	a	We called this flexibility instead of adaptivity.
1488	0	a	The tool offers the UI developer a more ?exible way of developing a UI.
1489	0	a	Thus the authoring tool should be able to support specification, simulation and code generation of UI aspects related to these i/o peripherals.
1490	0	a	A Multimodal user interface forthe authoring tool is a possible requirement for future versions.
1491	0	a	Simulation related specification As specified in the requirements of section 5.4.1, the ?rst as well as the second prototype allow to make simulations of a user interface on a PC.
1492	1	a	Simulations are a way to get early feedback on a UI that is being developed.
1493	0	a	Architectural issues Until now, Philips Hasselt concentrated for the Beyond project on usability testing and on requirements speci?cation.
1494	0	a	A lot of effort will be done to design the second prototype conform the requirements specified for the second prototype of the authoring tool.
1495	0	a	Examples are global positioning systems in cars, trajectory guidance in busses and metro, systems allowing the monitoring ofa boat in its environment etc.
1496	0	a	The environments in which they are used place special constraints on the displays of the Vetronics systems.
1497	0	a	Rugged displays are needed, which satisfy specifications such as being resistant to vibrations, extremely high or low temperatures, shocks, high degree of humidity, magnetic fields etc.
1498	1	a	These speci?cations must be satisfied in addition to common image speci?cations with regard to resolution, coIors etc.
1499	0	a	In addition, the possibility to add both textual and graphic overlay to the displayed video is necessary to show navigation information, diagnostics etc.
1500	0	a	BARCO collaborates with the LUC for the Vetronics software.
1501	1	a	The first prototype of the UI-Editor was meant to perform some research about the general structure of the Editor.
1502	0	a	This prototype gave us an impression of how to implement such kind of program and enabled us to learn about the do?s and don?ts in this kind of application.
1503	0	a	Another important target is to get some feedback of the market about the new concept we are introducing.
1504	0	a	High-Ievel requirements The previous section emphasized the fact that the Vetronics domain demands ruggedized displays.
1505	1	a	In this section we will not mention general criteria for ruggedized displays, as they are well-known by BARCO from earlier developments.
1506	1	a	We will rather focus on speci?c targets for BARCO and LUC in the second prototype based on the requirements of the first prototype.
1507	0	a	VI?th the feedback on this first prototype we can re?ne our requirements so they actually re?ect our needs.
1508	0	a	However the software part (UI-Editor and firmware support) are still in prototype phase because ofthe new approach for the UI-Editor.
1509	1	a	Forthe Vetronics hardware and firmware: 0 Optimum Video performance 0 Ruggedness : Environmental Specification compliance.
1510	1	a	0 The so?ware structure of the ?rmware should be suitable for adding a ?UI- interpreter? (to interprete and visualize the UI code generated by the UI Editor; so a very important component in this project).
1511	1	a	For this aspect we have chosen to add/implement a kind of virtual machine which performs the interaction between the UI-Code and the effective hardware/firmware.
1512	0	a	0 The software (firmware) should be able to control all the available hardware and the hardware state should be accessible to the ?rmware and be exposed to the UI-Code.
1513	1	a	Forthe User Interface Editor: 0 The UI Editor should allow ?exible creation and modi?cation of the user interface ofthe Vetronics application.
1514	0	a	This must be done in an interactive and visual way.
1515	0	a	0 The UI Editor should be able to communicate with the Vetronics hardware, to download the developed UI to the Vetronics system for real use.
1516	1	a	This communication is done using different kinds of interfacing (Serial port, USB, FireVI?re, IrDa, CAN, ...).
1517	1	a	This communication module is also needed to obtain the system configuration from the Vector Unit.
1518	1	a	0 The UI Editor itself should be a powerful and user friendly tool.
1519	0	a	Because we are focussing of VI?ndows-users, the VI?ndows guidelines are taken info account.
1520	0	a	However, we do not want to obtain the ?Designed for Windows Label.
1521	0	a	It should be compatible with the common versions of VI?ndows (98/ME/2000) and near-future versions.
1522	0	a	0 The UI-Editor should be an open-application so we can add new functionality to support new hardware con?gurations.
1523	0	a	To obtain this we must create an open framework on which we can PIug-In aII functionality we desire.
1524	0	a	Flexibility versus Adaptivity We define flexibility here as a level of adaptivity of the system, from the point of view of the UI developer.
1525	0	a	This way of working assumes that we, in a first stage, only focus BEYOND Public Deliverable 8 Functional Specifications and Architecture 20 February 2001 ITEA 99002 BEYOND on ?Off-Line Adaptivity?.
1526	1	a	This means that we must develop/modify the User Interface using a separate program (UI-Editor) and download it into the system in order to use the new User Interface.
1527	1	a	The adaptation takes place in between sessions with the Vetronics system.
1528	1	a	Even this off-Iine adaptivity is a step fonivard in the Vetronics domain as in most cases, the UI is realized in firmware.
1529	0	a	Project status During the first year of the project, a lot of analysis and research have been performed.
1530	0	a	All this research resulted in the development of a first prototype.
1531	0	a	This prototype was the first milestone in the BEYOND program.
1532	0	a	The prototype consists of a User Interface Editor, a Vetronics system and some peripherals to try the complete system as such.
1533	0	a	This expert review resulted in some kind of score by which we could validate the prototype (or reject it).
1534	0	a	0 The functionality ofthe prototype is more or less what was required 0 The graphical performance could be better.
1535	0	a	Some screen updates were not OK 0 A list of bugs/malfunctions has been made.
1536	0	a	Most of these have already been corrected.
1537	0	a	In fact, all functional requirements were fulfilled, but we noticed a major lack in the approach of the software: PIugIn-Capability.
1538	0	a	AII functional parts were statically linked to each other without any way to add additional functionality; although not without writing lots of code.
1539	0	a	So, we have decided to start a new cycle with a weII-analyzed framework so we will be able to easily pIug-in new functionality onto the application.
1540	0	a	Every pIug-in will then represent a piece of functional hardware.
1541	0	a	As already mentioned in the project status, there has been an expert review on the first prototype.
1542	0	a	The UI interpreter should interpret the downloaded UI code to navigate through the menus and perform de?ned actions.
1543	0	a	This is the decision-agent we need for content prioritization.
1544	0	a	User Interface Editor: System Configuration VI?zard Font authoring modalities The UI Editor should allow the user to create/modify menus.
1545	1	a	Menus are in fact the combination of Overlay (OSD and Symbol Generator), HotSpot zones and Event-Action Associations.
1546	0	a	The UI Editor should enable the user to associate an event to an action as defined in the previous point.
1547	0	a	An event-driven approach is envisioned in the first prototype to evaluate its feasibility.
1548	0	a	Hereby the VM must support this event-driven approach and act as a transparent link between the generated UI-code and the hardware.
1549	0	a	BEYOND Public Deliverable 8 Functional Specifications and Architecture 25 February 2001 ITEA 99002 BEYOND o The UI Editor should also dispose of a facility to associate an event to more than one action.
1550	0	a	This extension of the event-driven approach raises design issues to be tackled.
1551	0	a	o In general, the UI Editor should be a user friendly and powerful development tool.
1552	0	a	This requires: 0 Attention for visualization and simulation issues (WYSIVWG approach, e.g.
1553	0	a	Visualization of the designed UI, menus, icons, Simulating navigation etc.).
1554	0	a	0 Attention for solutions that speed up the development of the UI (e.g.
1555	0	a	investigate the use of drag-and-drop tools such as in the context of action definition).
1556	0	a	0 Attention for general usability issues and user interface design.
1557	0	a	Our main extension of the requirements forthe UI-Editor is the PIug-In- approach of the program.
1558	0	a	In order to meet this extra requirement a lot of investigation on the architecture of the UI-Editor has been done and seriously evaluated.
1559	0	a	This resulted in a component?based approach where all functionality could easily be ?Plugged? into the editor.
1560	0	a	As a result, we are able to add the Symbol Generator Functionality to the Editor, even with expanded possibilities like macro definition, text capability and bitmap operations.
1561	0	a	All these important features exposed by the hardware will now be fully supported in the UI-Editor, which gives us expanding possibilities.
1562	0	a	Usability related specifications The usability has been verified by the expert review of the first prototype.
1563	1	a	Because of the variety of SW?experience and interest we covered a wide range of usability issues, from non-technical, commercial to pure technical.
1564	0	a	Every member had his speci?c remarks on the software, as expected, some were more about the Look?And-Feel, and others were more technical about bugs and inconsistencies.
1565	0	a	The hardware layout is always visible during development.
1566	0	a	AIso derived Vetronics products, with different housing, LCD, are not covered.
1567	0	a	0 Font creation/modi?cation is really easy and performing well.
1568	1	a	BEYOND Public Deliverable 8 Functional Specifications and Architecture 26 February 2001 ITEA 99002 BEYOND 0 Some artifacts are noted during screen updates.
1569	0	a	0 Communication ports are statically implemented into the editor.
1570	1	a	o The complete UI-Editor has to be updated if modifications are made.
1571	1	a	This is an anomaly when we want to give support/updates via the Internet.
1572	0	a	0 Finally we concluded that the prototype met its functional requirements, but it was too static.
1573	0	a	From our hardware development and customer requirements we had learned that all have very specific needs concerning not only on User Interface but also real Hardware Interfacing to several peripherals.
1574	0	a	This will also solve our maintainability issue.
1575	0	a	Adaptivity related specifications The generated User Interface is only off-Iine adaptive.
1576	0	a	Which means the UI is modified on a separate computer and then reloaded into the Vector System.
1577	0	a	The Vector system has some agents inside to prioritize the information available (UI- information, system status, Environment data, ...).
1578	0	a	Though using off-Iine adaptivity, the running Vetronics application (based on code realized by means of the UI Editor) can demonstrate ?intelligent? behavior to some extent.
1579	0	a	The User Interface has access to its own data (directly UI-related), but also to data provided by the firmware concerning the current system status and its environment.
1580	0	a	As a consequence, there is a need for a kind of decision algorithm (=agent) in order to decide whether the UI is more important than the system/environment data or vice-versa, depending on the actual content.
1581	1	a	This will re?ect in the information the user gets to see.
1582	0	a	It is possible that in dangerous conditions the environmental data force the defined UI to be overruled by some buiIt-in UI elements (e.g.
1583	0	a	The UI-Editor itself enables us to create and modify the User Interface off-Iine and then reload it.
1584	0	a	In the definite program we can implement wizards in orderto guide the user through several tasks or warn him for contradictory situations.
1585	0	a	These self- Iearning wizards will recognize the user?s behavior and identify occasions to interfere and help.
1586	0	a	In this case, we need a kind of user pro?le and a behavior database in order to take the right decisions/predictions.
1587	0	a	In this context, we will use the reference model in which we collaborated with the other members of WP2 for the Deliverable 3.
1588	0	a	This reference model will be used in the agent approach of both the ?rmware and editor.
1589	0	a	Although extension will be rather limited in ?rst, we want to do some research about extending its implementation in both the Firmware and UI-Editor.
1590	0	a	BEYOND Public Deliverable 8 Functional Specifications and Architecture 27 February 2001 ITEA 99002 BEYOND 6.4.4.
1591	0	a	Multimodality related specifications The relation of this project to multimodality is rather limited.
1592	0	a	However, our Vector system should be able to communicate with all kinds of peripherals.
1593	0	a	In Vetronics markets, probably due to the heavy environmental conditions (temperature, vibrations, noise, ...) we cannot really use fine multimodal devices.
1594	0	a	However, auditive information is one of the most used feedback methods in train applications.
1595	0	a	Also Touch Input devices are rather frequently used because they do not require additional place.
1596	0	a	Currently, support for a touch screen is provided in the UI-Editor.
1597	0	a	As a consequence, the Vector system does not have to be available while developing and testing the UI.
1598	0	a	This is a very important demand because the systems are mostly built in into consoles where they are not easily accessible for downloading etc.
1599	1	a	An important result of the simulation may be the ability to certify the generated UI for use in life critical conditions.
1600	1	a	This can be achieved when using an identical Virtual Machine in both the simulator and firmware.
1601	0	a	This is to be investigated after the finalization of our application and is certainly beyond the context of this BEYOND project.
1602	1	a	Architectural issues Because this new approach demands flexible functionality by using PIug-Ins, we needed to redesign the framework from a static one to a component based one.
1603	0	a	In order to be sure we can cover all flexibility requirements a lot of effort is now being done in the complete architectural redesign of the UI-Editor.
1604	0	a	This architecture is thus considered as a very open framework (the base application) where we can easily plug in all PIug-Ins we need.
1605	0	a	To accomplish this, we have chosen to use an component based approach by using the latest SW?technologies that are usable within this type of application/platform, namely COM & COM+.
1606	1	a	Accident analysis has shown that 65% of all aircraft incidents are caused by human error.
1607	0	a	Two kinds of human errors can be distinguished: slips and mistakes [Reason, 1987].
1608	0	a	A slip occurs when the intention is right, but a deviation of that intention occurs.
1609	0	a	A mistake occurs when the actions are according to the intended plan, but the plan is inadequate to achieve the intended goal.
1610	0	a	It is expected that slips and mistakes in aircraft operation can be avoided by an intelligent adaptive flight deck that assists the ?ight crew in performing theirtasks.
1611	0	a	An intelligent system that knows the human intentions and the actual and predicted flight status can detect slips from the intended plan.
1612	0	a	Ifthe system is aware of the goals of the operation, the intelligent system can even give a recommendation to the pilot to correct for the error.
1613	0	a	In most cases, mistakes are not simply due to a bad knowledge of the theory or procedure, but are rather a logical consequence of a lack of situation awareness.
1614	0	a	The flight deck communicates to the pilot information about the ?ight status (flight plan, position, velocity, etc.
1615	0	a	To form an internal representation of the flight situation, the crew has to integrate all this information presented to them on numerous head-down cockpit displays in different formats.
1616	1	a	In addition, the auditory channel is used to present advice, warnings and alerts to the crew.
1617	0	a	Especially during critical situations, where the situation awareness is of greatest importance, pilots have difficulties building up a representation of the ?ight situation.
1618	1	a	At the same time, several buttons can lighten up, various alerts can be given, and information is highlighted on the display.
1619	0	a	Mistakes can be prevented by assisting the pilot in building situation awareness.
1620	0	a	Another contributorto the high workload during critical situations in the cockpit is the task ofdecision making.
1621	0	a	Even if the flight crew is able to determine a good resolution to solve the problem, they have too little overview to optimize it.
1622	0	a	An intelligent ?ight deck can help the pilot by proposing optimized alternatives out of which the pilot can choose one.
1623	0	a	In such a co-operation, the pilot and intelligent ?ight deck share their knowledge and capabilities to improve the safety and efficiency of the overall system.
1624	0	a	BEYOND Public Deliverable 8 Functional Specifications and Architecture 30 February 2001 ITEA 99002 BEYOND 7.1.2.
1625	0	a	Levels of the adaptation process Four stages can be distinguished in the adaptation process: initiation, proposal, decision, and execution [Dieterich et al., 1993].
1626	1	a	The agents performing or controlling these stages are the pilot of the automation.
1627	0	a	This adaptation is contradicting with the human-centered design philosophy and seems therefore unacceptable.
1628	0	a	In certain time-critical, high workload situations, however, it may be necessary or even mandatory to automatically adapt the interface to draw the crew?s attention and to allow an immediate but sound response.
1629	1	a	Because the adaptation is unexpected and may cause confusion, its occurrence must be well known and trained by the cockpit crew.
1630	0	a	User?controlled self-adaptation: the decision to adapt is taken by the user, while all other tasks are automated.
1631	1	a	If the automation thinks that for the current situation a different presentation may be more ef?cient, it may suggest an adaptation that has to be agreed upon by the pilot.
1632	0	a	 User?initiated self-adaptation: the user takes the initiative, the automation proposes, decides and executes.
1633	0	a	This is in fact self-adaptation, but allowing the pilot to take the initiative.
1634	0	a	 Computer?aided adaptation: on a user?s initiative, the automation proposes an adaptation, which it will execute afterthe user?s approval.
1635	0	a	 Svstem-initiated adaptation: on a system?s initiative, the user proposes, decides and executes the adaptation.
1636	1	a	The pilot is then informed if it seems reasonable to tailor the system.
1637	0	a	Adagtation: the user performs the tasks on all stages of the adaptation.
1638	1	a	The management of [company name]. has identified a potential need for re-writing its core Laboratory Information System (LIS) to improve the performance.
1639	0	a	In general, this project will provide a stable environment, automate decisions, streamline work?ows, and employ industry standard coding and documentation practices.
1640	0	a	All functionalities for the new [system name] system would be documented in this FRS.
1641	1	a	Any undocumented requirements will be considered out of scope and will not be implemented duiing this phase of Re-WIiting. 
1642	0	a	The existing functionalities in the core [system name] will remain same.
1643	0	a	The project team has decided that system development will occur on module by module basis. 
1644	0	a	The system shall display the desired operational page for the user after clicking the hyperlink.
1645	0	a	A user with admin privileges shall be able to Add/Create a new user and associate the user with specified ro|e(s) in the system.
1646	0	a	The system shall display an error message if the new user is found in the [system name] system. 
1647	1	a	The system shall display an error message if the new user is not active in the Active Directory.
1648	1	a	The user shall be able to create/add a new user manually or from a template.
1649	1	a	 The system shall display the xxx tab as the default tab.
1650	1	a	The user record shall inherit all speci?ed ro|e(s) settings in the template when the user record is created from the user template
1651	0	a	The user shall be able to add additional roles manually while creating/adding a new user from a user template.
1652	1	a	The system shall save the user info to the database with specified roles associated with divisions for the newly created/added user.
1653	1	a	The user must have the flexibility to click any tab to commence the adding process, although the xxx Tab shall display as the default tab.
1654	0	a	2.1.1.2.1.11 The system shall generate a standard confirmation message after saving data and warning/caution messages after the cancel or close button is clicked. 
1655	1	a	The system shall clear up data if the user chooses to click the Cancel button in the midst of creating/adding a new user.
1656	1	a	2.1 121.18 The user must fill in the required fields?User Name and Display Name?in the User Information section at the time of creating/adding a new user.
1657	1	a	The system shall direct the user to the xxx Page if the user chooses to click the close button without entering any data.
1658	0	a	The Project Team must demonstrate mockups of UI changes to project stakeholders early in the development process. 
1659	0	a	 2.1.1.2.1.17 The user must associate at least one role, division, designator code, and lab location at the time of creating/adding a new user. 
1660	1	a	The Project Team must permit reasonable adjustment to the user interfaces of new functionality by project stakeholders when project schedule permits those adjustments.
1661	1	a	The Project Team must perform applicable and appropriate testing against new functionality prior to releasing that functionality/build to the production environment.
1662	1	a	 2.4.1.2 The project Team must allow a reasonable time to conduct User Acceptance Testing (UAT) against the built functionalities prior to deploying the product to the production environment.
1663	1	a	The Development Team shall define coding standards for the application and follow those standards consistently.
1664	0	a	 2.5.1.2 The Development Team shall be required to adjust existing source code to follow accepted coding standards only if that source code must be modified. 
1665	1	a	The system shall log errors, warnings, and informational messages to an external log file on the application server.
1666	0	a	The Development Team shall be required to adjust existing source code to use the external log file only if that source code must be modified to implement another requirement.
1667	0	a	2.5.2.3 The system shall log an error message to the external data file when the user is directed to the [SYSTEM NAME] error page.
1668	1	a	2.6.1.2 The Development Team shall utilize established open source frameworks instead of proprietary custom components wherever appropriate. 2.6.1.3
1669	1	a	The Technical Owner/Lead shall provide signof?f before any [SYSTEM NAME] build can be deployed to the production environment.
1670	1	a	The Development Team shall perform weekly integrations of the [SYSTEM NAME] system and deploy these system updates to the Staging environment. 
1671	0	a	The Development Team shall label every scheduled [SYSTEM NAME] build in the source control system.
1672	0	a	2.6.3.3 The Development Team shall perform scheduled [SYSTEM NAME] builds using code checked out of source control using the label as defined and specified. 
1673	1	a	The Development Team shall develop and then send out release notes via e-mail to all Project Team after each [SYSTEM NAME] build deployed to the Staging environment.
1674	0	a	The [system name] system will displaya hypertext link labeled ?
1675	0	a	Help? at the top right corner on each of the user screens to provide assistance to the user.
1676	0	a	Each of the Help topic pop-up windows will contain that same content that is available within the [system name] user?s manuals. 
1677	0	a	2.7.1.1 The system shall provide the capability to open a pop-up window displaying information about the specific page along with links to supporting help topics upon selecting each Help link.
1678	1	a	2.7.1.2 The system shall display ?[system name] Overview? page located underthe Getting Started section of Help as default help topic page that will load upon selecting Help hypertext link. 
1679	1	a	2.7.1.3 The system must allow users to easily navigate through each of the help topics by selecting a corresponding hypertext link provided in the left frame of the pop-up Help window. 
1680	1	a	The system shall display the [company name] logo in the top, right side of the screen on each of the help pages. 
1681	0	a	2.7.1.5 The system must exhibit each of the help pages using the same color scheme and background as specified.
1682	1	a	The system shall provide an index to the users for a more in-depth search of topic contents through the online help tool. 
1683	0	a	 2.7.1.6 The system shall provide searching ability to the users to quickly find specific topic material through the online help tool. 
1684	1	a	The system shall provide a Glossary for industry-related terms associated with [company name] and the [system name] system to the users through the online help tool.
1685	0	a	The Functional Requirements Speci?cations (FRS) report provides the detailed description of the functionalities required for the ?rst version of the CCTNS.
1686	0	a	CCTNS V1.0 functionality is designed to focus on delivering value to 105, records room staff and Citizens within the broad crime investigation area.
1687	0	a	Based on the guiding principles stated above, nine different function blocks have been identi?ed and the detailed functionality of each block was determined.
1688	0	a	The functionality of the CCTNS application is focused on providing value to the police personnel, especially the of?cers operating at the cutting edge and easing the day to day operations of the police function.
1689	0	a	Citizens can register their complaints with police and then based on the evidence, facts and following investigation, police shall take the complaint forward.
1690	0	a	The Registration module acts as an interface between the police and Citizens and it eases the approach, interaction and information exchange between police and complainants.
1691	0	a	Investigation After a complaint is initiated, police initiates the investigation process.
1692	1	a	Prosecution Interfacing with the courts during the prosecution of cases is an integral part of the responsibilities of police personnel.
1693	0	a	A designated constable from each police station constantly interfaces with the courts.
1694	0	a	Search The Search module of the CCTNS gives police personnel the ability to execute a basic or advanced search on cases.
1695	0	a	Using the search functionality, police personnel can search for a particular person, type of crime, modus operandi, property etc.
1696	0	a	It also gives the user the ability to customize the results View by criminal/accused or by cases.
1697	0	a	It makes reporting easy for police by enabling them to execute different types of queries such as monthly reporting, RTI related etc.
1698	0	a	The Citizen Interface module of the CCTNS acts as a conduit for the information exchange between Citizens and police units/personnel.
1699	1	a	Citizens can use it as a tool to get information or acknowledgements from police.
1700	1	a	The police in turn can use it to respond to Citizens with very little turnaround time.
1701	1	a	The Navigation module of the CCTNS provides role based landing pages which help in navigating through the CCTNS application.
1702	1	a	It shows information such as cases assigned, alerts, pending tasks etc hence helping police personnel to plan better and execute with greater ef?ciency.
1703	0	a	Application Configuration The Con?guration module of the CCTNS helps keep the application con?gured according to the states? requirements in addition to keeping data elements/rules up to date.
1704	0	a	With a proper con?guration, information such as act and sections, state speci?c data, castes, tribes, property information etc.
1705	0	a	The functional requirements for each of the modules are provided as A1 to A7 in separate enclo sures.
1706	0	a	The non?functional requirements specify the qualitative attributes such as user?friendliness and performance of the system that are critical for the increased user?acceptance 0f the application.
1707	0	a	Help Module 1 The solution should provide detailed context?sensitive help material for all the possible actions and scenarios on all user interfaces in the application.
1708	1	a	2 The solution should send alerts (e.g., email, SMS) to the user if the user Chooses .
1709	1	a	The solution should enable the help?desk user to View the reports on the 4. submitted defects or enhancement requests category?wise, status?wise, and age? wise.
1710	1	a	5 The support solution should be accessible to the users both from within the application and also outside the application through a browser interface.
1711	1	a	Audit Module An audit trail is a record of actions taken by either the user or the system triggers.
1712	0	a	This includes actions taken by users or Administrators, or actions initiated automatically by the system as a result of system parameters.
1713	1	a	Once the audit trail functionality has been activated, the System must track 2. events without manual intervention, and store in the audit trail information about them.
1714	1	a	The System must maintain the audit trail for as long as required, which will be at 3' least for the life of the case to which it refers.
1715	1	a	The System must be able to export audit trails for speci?ed cases (without 5. affecting the audit trail stored by the System).
1716	1	a	This functionality can be used by external auditors who wish to examine or analyse system activity.
1717	0	a	A user?s attempts 6. to access a case to which he is denied access), and (where Violations can validly be attempted) attempted Violations, of access control mechanisms.
1718	1	a	The System should be able to provide reports for actions on cases organised by workstation and (where technically appropriate) by network address.
1719	0	a	The requirements specify the requirements to control the user access to correspondences, ?les, and records and various functionalities provided within the system.
1720	0	a	Access Module The System must allow the user to limit access to cases to speci?ed users or user groups.
1721	0	a	The System must allow a user to be a member of more than one group.
1722	1	a	The System must allow only adrnin?users to set up user pro?les and allocate users to groups.
1723	1	a	The System should allow a user to stipulate which other users or groups can access cases.
1724	1	a	The System must allow changes to security attributes for groups or users (such as access rights, security level, privileges, password allocation and management) to be made only by super?user.
1725	1	a	These options are presented in order of increasing security.
1726	0	a	If a user performs a quick or advanced search, the System must never include in the search result list any record which the user does not have the right to access.
1727	0	a	Any access to cases, and all other activities involving the cases and related 10. documents or data should also need to be stored in the audit trail to ensure legal admissibility and to assist in data recovery.
1728	0	a	All error messages produced by the System must be meaningful, so that they can be appropriately acted upon by the users who are likely to see them.
1729	0	a	The System must be able to display several entities (cases, suspects) simultaneously.
1730	0	a	The interfaces must be made customizable or user?con?gurable to the extent 4. possible.
1731	0	a	Such con?gurations must be saved in the user pro?le.
1732	0	a	These defaults should include: 7 0 user?de?nable values; 0 values same as previous item; 0 values derived from context, e.g.
1733	1	a	Where the System employs a graphical user interface, it must allow users to customise it.
1734	0	a	Customisation should include, but need not be limited to the following changes: Usability 1.
1735	0	a	The user interfaces should be designed to make them user?intuitive.
1736	0	a	The user interfaces of the system should comply with Standard ISO 9241.
1737	0	a	ICT accessibility: ISO 9241?20 shall be the standard for guidance on ICT accessibility.
1738	0	a	Application user interfaces to meet its requirements and recommendations.
1739	0	a	User interfaces should meet its requirements and recommendations.
1740	0	a	Content accessibility WCAG 1.0 shall be the standard used for guidance on content accessibility.
1741	0	a	General guidance on achieving self?descriptiveness is given in ISO 9241?110.
1742	0	a	Offering altemative access paths: Alternative access paths for navigating to a speci?c unit of content should be offered to support different navigation strategies.
1743	1	a	If a splash screen is used, a navigation option to skip it should be offered.
1744	0	a	Avoiding opening unnecessary windows: Additional windows such as new browser windows or pop?up windows should only be opened if this supports the user?s task.
1745	1	a	Opening new windows can distract, confuse or impede users for a variety of reasons.
1746	0	a	They could make it cognitively more dif?cult to understand the navigation structure with negative effects on both usability and accessibility.
1747	0	a	They also require additional user actions for closing unwanted windows.
1748	0	a	This may be done by placing important information at the top and providing links to information that is further down the page.
1749	0	a	Horizontal scrolling should be avoided wherever possible.
1750	0	a	Designing for input device independence: User interfaces should be designed to allow activation of controls by a variety of input devices.
1751	1	a	The ability to choose between different input devices for activating controls such as links, ?elds and buttons is important both for users who prefer a certain input mode, mobile users and users with disabilities.
1752	0	a	In general, device independence can be achieved if the functionality is operable Via a keyboard.
1753	1	a	Making user interfaces robust: User interfaces should be designed to be as robust as possible in the face of changing technology.
1754	1	a	This encompasses being able to present content containing newer technologies by older user agents as well as designing content to be usable with future technologies.
1755	0	a	This is particularly important for frequently accessed pages or pages that are important for user navigation and exploration, such as the home page.
1756	0	a	Minimizing user errors: Potential user errors as well as the effort needed to recover from errors should be minimized.
1757	0	a	Users expect error messages to be in the same language as the user interface.
1758	0	a	Making text resizable by the user: Text should be able to be resized by the user, using functions provided by the user agent or other appropriate means i.e.
1759	1	a	Text quality: The quality of textual content with respect to spelling and grammar should be suf?cient so as not to impede readability.
1760	0	a	Supporting text skimming: Fast skimming of text should be supported by the provision of clear links, bulleted lists, highlighted keywords, logical headings, and short phrases and sentences.
1761	1	a	Readability of text: Text presented on the pages should be readable taking into account the expected display characteristics and spatial arrangement.
1762	0	a	Distinguishable within?page links: Within?page links should be clearly distinguishable from other links that lead to a different page.
1763	1	a	Within?page links are shown with dashed rather than solid underlines 24.
1764	0	a	Avoiding link overload: Text pages containing large proportions of links should be formatted so that the presence of links does not impede the readability of the text.
1765	1	a	Using appropriate terminology speci?c to the user?s tasks and information needs is important for making the content easy to understand.
1766	0	a	Marking links opening new windows: Links that open new browser windows or pop?up windows should be clearly marked.
1767	1	a	Distinguishing navigation links from controls: Navigation links should be clearly distinguishable from controls activating some action.
1768	1	a	space ?lled only with the background color should be used in such a way that it does not impair the Visual skimming of the page.
1769	0	a	Selecting appropriate page lengths The length of a page should be selected so as to support the primary purpose and use of the page.
1770	0	a	Short pages are generally more appropriate for homepages, navigation pages, or overview pages that need to be read quickly.
1771	0	a	Longer pages can be more appropriate when users want to read the content without interruptions or when the page needs to match a paper counterpart.
1772	1	a	Using colour: Colour should be used with care, taking into account human capabilities and restrictions in perceiving colour, and not as the only means of conveying information.
1773	1	a	Color should never be the only means of coding.
1774	0	a	When frames are used, it is important to title each frame, and to describe its purpose and how frames relate to one another other.
1775	0	a	Providing altematives to frame?based presentation: If frames are used, an alternative way of presenting relevant information without frames should be provided.
1776	1	a	Consistent page layout: Pages should be designed using consistent layout schemes, supporting the user in ?nding similar information at the same position on different pages.
1777	1	a	Overall layout schemes apply to all pages and are preferable when all pages have a similar structure.
1778	0	a	Frequently, however, different pages have different purposes and types of content.
1779	0	a	In such cases, pages can usually be grouped in different categories, using one layout scheme for each category consistently.
1780	0	a	Placing title information consistently: Page titles should be placed in a consistent location on the different pages.
1781	1	a	Observing principles of human perception When designing application pages, the general principles of human perception should be taken into account.
1782	0	a	The Intemational Standards mentioned below shall be consulted for guidance.
1783	0	a	Guidance on selecting and using different forms of interaction techniques is to be found in ISO 9241?14 to ISO 9241?17.
1784	0	a	ISO 9241?14 gives guidance about menus, ISO 9241?15 about command dialogues, ISO 9241?16 about direct manipulation and ISO 9241?17 about forms.
1785	0	a	In addition, when designing multimedia information presentations, the design principles and recommendations described in ISO 14915?1 to ISO 14915?3 should be taken into account.
1786	0	a	Appropriate content presentation also plays a key role in accessibility.
1787	0	a	Linking back to the home page or landmark pages: Each page should contain a link leading to the home page of the application or to a landmark page that is easy to recognize for the user.
1788	1	a	Providing a site map: A separate navigation overview such as a site map should be provided for application showing the structure of the site in an overview form.
1789	1	a	Placing navigation components consistently: Navigation components should be 41' placed consistently on the pages or in the framesets in the pages of the application.
1790	1	a	User adaptation can also be important for making the user interface more accessible.
1791	0	a	Different approaches can be used for achieving these goals, like providing users with means for customizing the user interface to their personal needs i.e.
1792	0	a	individualization designing content and navigation differently for varying user groups or roles i.e.
1793	0	a	Making individualization and adaptation evident: It should be made evident to the 44' user when individualization and/ or adaptation are used.
1794	1	a	Making user pro?les evident: If prede?ned user pro?les or user?speci?ed pro?les 45 are used for individualizing or adapting content, the pro?le currently used should ' be made evident.
1795	1	a	If pro?les are used, it is important to provide users with information about this concept and its implications.
1796	0	a	46 Allowing users to see and change pro?les: If user?speci?ed pro?les are used, users ' should be able to see, modify and delete that pro?le on demand.
1797	0	a	Unplanned downtime for the System must not exceed per 3' .
1798	0	a	4 The number of incidents of unplanned downtime for the System must not exceed ' per .
1799	0	a	5 In the event of any software or hardware failure, it must be possible to restore the System (with inline synchronization) within no more than hours.
1800	0	a	In this context, performing a search means returning a result list.
1801	0	a	It does not include retrieving the records themselves.
1802	0	a	The System must be able to retrieve and display within 5?8 seconds the case which has been accessed within the previous 2 months, regardless of storage capacity or 3. number of cases in the system.
1803	0	a	This requirement is intended to allow for rapid retrieval of frequently?used cases, on the understanding that frequency of use is typically correlated with recent use.
1804	0	a	The System be scaleable and must not have any features which would preclude use in small or large police stations, with varying numbers of cases handled.
1805	0	a	The proposed functional architecture is modeled around centralized deployment to facilitate ease of maintenance and leverage advancement in open standards and web technologies.
1806	0	a	The 3 C?s (Core?Con?guration?Customization) forms the guiding principle for the architecture.
1807	1	a	The functional architecture of the CCTNS solution is given in the ?gure below.
1808	0	a	The functional architecture is composed of 4 major components based on SOA principles.
1809	0	a	Each of the components contains multiple services as de?ned by Service De?nition.
1810	0	a	The core services, support layer and security and access control components can be deployed as standard components with necessary con?guration changes.
1811	1	a	The customization layer can override and add to the core services based on the speci?c state requirements and can be plugged with the core services.
1812	0	a	The deployment of the application will be at state level and will be con?gured and customized as per the state speci?c extensions.
1813	0	a	Central trading System.
1814	0	a	The central trading system (CTS) is to complete the trading of stock.
1815	0	a	It analyses the instructions that enter the central trading system and diVides them into several kinds of instructions.
1816	0	a	The system will make a match between them under specifical prescripts.
1817	0	a	Also, the central trading system provides some interfaces to send messages to other modules.
1818	0	a	The CTS is just a subsystem of the whole stock trading system (STS) system.
1819	0	a	There are mainly siX subsystems involved, stock account operation, ?nancing account operation, trade client serve, network message promulgating, central trading system and trading system manage.
1820	0	a	Communications exist among these subsystems which complicates the relationships between subsystems. The CTS receive instructions from trade client serve.
1821	0	a	Then the CTS produces new messages which to be sent to network message promulgating after dealing with the instructions from trade client serve.
1822	0	a	Also, the system manager is authorized to access the information in CTS. There are mainly two kinds of users.
1823	0	a	The CTS provides the terminal users easy Operations that are con?ned to a series of mouse clicks and keyboard, which compared to other systems are really much simpli?ed.
1824	0	a	However, for another user, things are different .
1825	0	a	the maintainers of this CTS must be familiar with java programming and the socket.
1826	0	a	When the system crashes down, they can find the cause and ?x it.
1827	0	a	When new requirements should be supported, they can modify the program to make it ?t.
1828	0	a	As the instruction is frequently operated in CTS such as fetch, deal with, repeal and so on, the CTS is heavily transferred.
1829	1	a	The program must take this into consideration.
1830	0	a	The maintainers of CTS should have good strategies to overcome crash of the system when overhead exceeds the capacity of it.
1831	1	a	There are mainly five kinds of actors, which here consist of other related sub-systerns, involved with our Central Trading System.
1832	0	a	Often, user-scenario is considered the same to use-case.
1833	0	a	They both can help our team understand how system functions and features will be used by different classes of end-users (actors).
1834	0	a	However, I prefer to understand it like this: a user scenario is a particular environment within a specified use case.
1835	0	a	So, I will specify user-scenarios going along with developing use cases in the next session. Preconditions . . 1nformat10n Trigger
1836	0	a	central trading system: save the buy instruction 3 central trading system: match the instructions with the Scenario same stock id 4.
1837	1	a	central trading system: make a trade by matching 5.
1838	1	a	central trading system: modify the information of matched instructions 1.
1839	1	a	Should the trade information return to Transaction User Interface immediately when the deal is done?
1840	1	a	Should the failure of trade return to Transaction User Interface the next day? 3.
1841	1	a	If exception happens, is exception log needed? 4.
1842	0	a	central trading system: save the sell instruction 3.
1843	1	a	central trading system: match the instructions with the Scenario same stock id
1844	1	a	central trading system: make a trade by matching 5.
1845	1	a	central trading system: modify the information of matched instructions 1.
1846	1	a	all the operations have been suspended Exception 2.
1847	1	a	some deal exceptions come up 3 no matched stock with the buy instruction Priority Essential, must be implemented
1848	0	a	Should the trade information return to Transaction User Interface immediately when the deal is done? 2.
1849	1	a	Should the failure of trade return to Transaction User Interface the next day? 3.
1850	0	a	If exception happens, is exception log needed? 4.
1851	0	a	security issue Open issues Preconditions . . cancel 1nformatlon Trigger
1852	1	a	The ?cancel? button on UI been clicked l. transaction user interface: give the cancel in struction Scenario 2.
1853	1	a	central trading system: save the cancel instruction 3.
1854	1	a	central trading system: cancel the correlative instruction 1.
1855	1	a	Is it necessary to return the status of cancel transaction? 2.
1856	1	a	If exception happens, is exception log needed? 3.
1857	1	a	The correlative trade transactions have been successfully happens, is exception log needed? 2.
1858	1	a	central trading system: implement the query cenano 3.
1859	1	a	central trading system: structuralize the queried data 4.
1860	1	a	central trading system: send the data to release 1.
1861	0	a	Then the instructions will go to the instructions manager modular.
1862	0	a	This modular will deal with all the three kinds of instructions.
1863	0	a	Then it will send the results to the Trading client serve and information releasing modular as well as keep a log file. The instructions analysis will identify the kind of the instructions.
1864	1	a	Then it will deal with the illegal instructions like the raising limit and freezing the fund in the Data Base.
1865	0	a	In addition, it will keep log file about the instructions. In this level the three kinds of instructions will go to three different modules.
1866	0	a	The query instruction will refer to the Data Base or the instructions list.
1867	1	a	The cancel instruction will delete the instruction the instruction in the instructions list.
1868	1	a	Include the query and writing and modifying DB 1nstruct10n Data Base(1nput) instructions to the Data Base newest trading CTS(output) Information
1869	1	a	Freeze the fund ofuser?s account instruction . . . . . . . . . deal the 1nstruct10n 1n detall.
1870	0	a	There are several states in the diagram, which are decoding, researching, canceling, analyzing, rej ecting, queuing, storing, matching, queue modifying, responding.
1871	1	a	The ?ow between the adjacent states goes their way according to specific conditions which are displayed on the ?ow line. Class: PretreatmentO?nstruction
1872	0	a	ManagementOfInstruction Class: ManagementOfDealing Deal business following the key rules, and some operations are executed after the deals 15 Version 1.0 Deal the business
1873	1	a	The central trading system has relation with three modules that are trading client serve.
1874	0	a	These modules have contact with CTS usin g the interface supplied by CTS. 7.1.1 Transaction User Interface
1875	0	a	The Transaction User Interface has to input the instructions.
1876	0	a	This instruction should have ?ve parameters: user ID, stock ID, quantity, respected price, tirnestarnp.
1877	1	a	The user query instruction should have three Version 1.0 parameters: user ID, query content, some restrict parameters.
1878	0	a	The stock query instruction should has three parameters: stock ID, query content, some restrict pararnetera 7.1.2 Information Releasing Module
1879	1	a	The information releasing module use the interface to ?nd the price of the stocks.
1880	0	a	The input should has two parameters including the stock name and the restrict parameter. 7.1.3 Trading manager system
1881	1	a	The trading manager system uses the interface to ?nd the user?s trading instruction.
1882	0	a	The input should has two parameters including the trading instruction type(buy or sell),and the restrict parameter. 7.2 Function Criteria
1883	1	a	The CTS deals with trading instruction, query instruction and some cancel instruction.
1884	0	a	The functions are as follows: I) instruction matching
1885	1	a	When the client serve get a trading instruction, it will send the instruction to the CTS to trade with other trading instructions.
1886	0	a	The process of the trading includes the following two main principles: price ?rst principle and the time ?rst principle.
1887	0	a	If the trading fails when these two principles have been applied, we should refer to another principle.
1888	0	a	The trading states are diVided into two kinds: totally ?nished and the partially ?nished. 4) outdated instruction
1889	1	a	If a instruction haven?t ?nished it?s trading in one day, then it will be removed form the CTS for out of date. 17 Version 1.0
1890	0	a	Software Requirements Specification for KeePass Password Safe
1891	0	a	This document includes software requirements for KeePass Password Safe, release number 1.10.
1892	0	a	KeePass Password Safe is an OSI Certified Open Source Software distributed under the terms of the GNU General Public License Version 2 or under.
1893	0	a	The system gives resolution to memorizing passwords problem.
1894	0	a	Its purpose is to keep all of the user?s passwords, data, email accounts, usernames and URLs stored in a very secure, encrypted database, protected by a Master Password.
1895	0	a	The system is very small so it can be easily transferred from one computer to another.
1896	0	a	It provides several functionalities on the already encrypted data and the new ones to be inserted.
1897	0	a	The database produced, is protected by a Master Password only known by its inventor with no backup if lost. 1.2 Document Conventions 0
1898	0	a	This requirement document contains general information about KeePass, main classes and use cases, functions, features and special technologies.
1899	0	a	It describes in detail all that KeePass needs to work properly and with safety.
1900	0	a	The rest of the document is divided into chapters for better understanding. 0
1901	0	a	In chapter 2 an overall description of KeePass is provided.
1902	0	a	First product perspective is presented with product features and main functions.
1903	0	a	Then follow user classes and characteristics, operating environments that KeePass supports as well as design and implementation constraints.
1904	0	a	After all that user documentation is presented and will provide you with more details about each feature?s technology. 0
1905	0	a	In chapter 5 requirements about safety and performance are presented.
1906	0	a	So it provides you a very secure, encrypted database where you can keep inside all your passwords, usernames, email accounts, URLs, notes without any risk for others to find them.
1907	0	a	That is because KeePass Password Safe can lock every database with only one Master Password and/or key file.
1908	0	a	There are no duplicates, anywhere in your computer, of this Master Password and/or key file so in case of lost database cannot be opened by anyone.
1909	0	a	Those are analyzed in the following pages. More about KeePass you can find out at http://keepass.info/ 1.5 References More about KeePass can be found at 0 http://soarcef0rge.net/proiects/keepass/
1910	0	a	In this website you can find out more about the project and discuss any questions in the forums.
1911	0	a	You can go back and look at preVious releases, code and problems that have been solved.
1912	0	a	There you can also find information about the developers as well as the project?s main characteristics such as programming language and algorithms 0
1913	0	a	Overall Description 2.1 Product Perspective KeePass consists of a database which contains data for one or more users.
1914	0	a	Each user?s data are diVided into groups and subgroups so that they are organized in a form that serves right the user.
1915	0	a	Every user has a unique Master Key which can be simple or composite and its combination opens uniquely the database.
1916	0	a	If lost there is no recovery.
1917	0	a	Groups and subgroups contain entries with usernames, passwords URLs etc that can be sent or copied to websites, application and accounts.
1918	0	a	There is also the ability for a onetime key creation to be used once in a transaction without the risk of reused by others for any reason.
1919	0	a	In the diagram below there are the main components of the system, subsystem interconnections and external interfaces to help you understand the main idea of KeePass.
1920	0	a	The database can be opened and closed whenever user wants it.
1921	1	a	Changes on the data are permitted and the changes can be saved.
1922	1	a	The user also can print all data in order to keep them with him even when a computer is not available.
1923	0	a	Also the user can search the database using key words through a search engine provided with the software.
1924	0	a	Last but not least, the database can be imported and/or exported from/to the Internet. 0 Group/Subgroup ?
1925	0	a	New groups and subgroups can be added easily and can be deleted the same way.
1926	0	a	The feature of searching can be applied in just one group and not in the whole database if wanted. 0 Entry ? Add, View/Edit, Duplicate, Delete
1927	0	a	A new entry can be added in any group or subgroup and it contains title, username, password, URL and notes.
1928	0	a	Not all fields are required for an entry.
1929	0	a	An entry can be duplicated and deleted in the click of a button. 0 Change Language
1930	0	a	At KeePass website there are available language translations that can be downloaded and applied easily. 0
1931	0	a	The user can select a sequence of keypresses that KeePass will be able to perform and send them to any window or browser. 0 Command Line Options
1932	1	a	All these together form the Composite Master Key and are all required in order to open the database.
1933	0	a	So the user cannot use a combination of them to unlock the database. 0 Configuration
1934	0	a	There are available generations based on character sets and based on patterns the first for generating random passwords and the second for creating passwords which require specific patterns.
1935	1	a	There is also available generating passwords that follow rules which are determined further down on this document.
1936	0	a	Then there are security-reducing options which reduce the security of the passwords they are applied to.
1937	0	a	When this option is turned on, secure edit controls stronger than the ones of Windows are protecting your data and no one can access them, see them or steal them. 0
1938	0	a	TAN Support KeePass uses TAN-Transaction Authentication Numbers for even more security.
1939	1	a	This feature can be used for generating one time passwords so that there won?t be any chance, for anyone to access e.g. your bank account even if he finds out that password.
1940	0	a	That is because when the password is entered one time it becomes useless.
1941	0	a	TANs can be added using the TANs wizard. 0 URL Field
1942	1	a	The URL field supports various special protocols and placeholders and can be used for Standard capabilities where URL field can execute valid URLs for which a protocol handler is defined.
1943	1	a	In addition to that, KeePass supports all registered protocols that Internet Explorer supports.
1944	0	a	URL field also offers the ability of executed command lines instead of URLs.
1945	0	a	Also, placeholders can be used that will be automatically replaced when the URL is executed. 0
1946	0	a	Using Stored Passwords Passwords that are stored in the database can be copied to website accounts and applications with security and without retyping them again.
1947	0	a	This can be done by several methods such us ConteXt-Sensitive Password List, Drag and Drop, Auto-Type and KeeForm.
1948	0	a	All of them are explained better further down. Software Requirements Specification for KeePass Password Safe Page 6 0 Lock Workspace Last but not least at all is the locking workspace feature.
1949	0	a	This feature is turned on and locks the database when minimized.
1950	1	a	So to unlock it the Master Key is required again.
1951	1	a	The workspace can be locked manually as well by selecting this option from File menu. 2.3 User Classes and Characteristics 0
1952	1	a	The user interfaces used are: NET/Mono, Win32 (MS Windows)
1953	0	a	When a password is copied for any reason, (e.g. copy to an application, account, and website) it remains in the memory for only 10 seconds.
1954	0	a	After 10 seconds pass there is nothing to paste and you have to recopy again.
1955	0	a	That provides security in a case a password is copied and not pasted anywhere so no one can find it out by pasting later. Language Requirements in KeePass Password Safe:
1956	0	a	Not in all translations translated help files and tutorials are available. Specific Technologies used in KeePass Password Safe: 0
1957	0	a	In order to keep the user?s data fully protected, 2 very secure algorithms are used: Cipher Block Size Key Size Advanced Encryption Standard (AES / Rijndael) 128 bits 256 bits Twofish 128 bits 256 bits
1958	0	a	In both algorithms every time the user saves a database, a random 128-bit initialization vector is generated. 0
1959	0	a	For the creation of the 256-bit key the Cipher uses, the Secure Hash Algorithm SHA-256 is used. 0
1960	0	a	A compiled HTML Help file with a tutorial and full help on all features provided 0
1961	0	a	A KeePass Internet shortcut which take the user in the system?s official website where are available downloads, translations, plug-ins and extensions. Software Requirements Specification for KeePass Password Safe Page 8 3.
1962	1	a	System Features System features are organized by use cases and functional hierarchy so that the main functions of the system will be understandable. 3.1 New Database
1963	0	a	It is the first thing a user must do to begin using KeePass.
1964	0	a	Its main function is the determination of the master password that will unlock the database from now on Stimulus/Response Sequences Data Flow 3.1.2.1 Basic Data Flow 1.
1965	0	a	User opens KeePass and select New->Database 2.
1966	1	a	User writes his private Master Password and/or selects Key File 3.
1967	1	a	Master Password confirmation: the user retypes Master Password 5.
1968	0	a	The user does not determines a Master Password 2b.
1969	1	a	A message is appeared which prompts him to enter a password or key file Functional Requirements REQ?l: KeePass must be downloaded and installed REQ?2: Master Password has no limits in length.
1970	1	a	A whole sentence can be used with more than 100 characters. Software Requirements Specification for KeePass Password Safe Page 9 3.2
1971	0	a	When the database is found, the master password is wanted so that the database will be unlocked.
1972	1	a	Once this is done the user is free to access his data. 3.2.2.
1973	0	a	Stimulus/Response Sequences Data Flow 3.2.2.1 Basic Data Flow 1.
1974	0	a	User opens KeePass and select Open->Database 2.
1975	1	a	User navigates through his folders 3.
1976	1	a	User selects a database 4.
1977	1	a	User types Master Password 5.
1978	1	a	User selects a type of folder non suitable for database 3b.
1979	1	a	A message ?file not found? appears 3c.
1980	1	a	Master Password is wrong 4b.
1981	0	a	invalid/wrong key? appears 4c.
1982	1	a	User chooses cancel
1983	1	a	But when it is time for the database to close or during his working on the database, he can save the changes made. 3.3.2.
1984	0	a	User opens KeePass and changes his data 2.
1985	1	a	User selects save database 3.
1986	0	a	User gives a new database name 2c.
1987	1	a	User wants to exit KeePass 2b.
1988	1	a	A message is appeared asking if he wants to save the database 2c.
1989	1	a	Users minimizes the database 2b.
1990	0	a	This can be done by selecting print.
1991	1	a	When this happens, a list of data types that can be printed are shown and the user can select the data to be printed.
1992	0	a	User selects print from file menu 3.
1993	0	a	The list of options opens with checked the fields: password groups, title, user name, password, URL, notes 4.
1994	0	a	User unselects all fields 3b.
1995	0	a	This is very useful when the user needs to find out very quickly which password is required in one account or what username he has put on another account.
1996	0	a	It is not necessary to write in the search field all characters.
1997	0	a	By writing just one character the database will present all data which contains it or are related with it. 3.5.2.
1998	0	a	User types a password, user name, URL, word of notes, title or group that exist in the database 3.
1999	1	a	User types two or more words in the search field 3.
2000	1	a	User does not type anything 3.
2001	1	a	User types data not related with the database 3.
2002	1	a	All data related to the word must be shown.
2003	0	a	For example if user types ?abc? and abc is part of a password and of a username, both entries must be shown 3.6
2004	0	a	Add Group/Subgroup
2005	0	a	The user can create a new group or subgroups into an existing group.
2006	0	a	When creating a group/subgroup the user must select a name and then he can add entries into it. 3.6.2.
2007	0	a	User opens KeePass and selects to add new group/subgroup
2008	1	a	User types a name and has the option to select an image 3.
2009	1	a	The group/subgroup is created 5.
2010	1	a	User leaves the group/subgroup name field empty
2011	0	a	User selects Cancel
2012	0	a	User opens KeePass and selects modify group/subgroup
2013	0	a	User types the new name and has the option to select an image 3.
2014	1	a	The group/subgroup changes name 5.
2015	1	a	The group/subgroup?s name remains the same 5.
2016	0	a	In order for that to happen, he must have chosen first a group/subgroup. Stimulus/Response Sequences Data Flow 3.8.2.1 Basic Data Flow 1.
2017	1	a	User opens KeePass and selects a group/subgroup 2.
2018	1	a	User selects to delete the group/subgroup 3.
2019	1	a	A message is appeared to confirm the delete 4.
2020	1	a	The group/subgroup is deleted 6.
2021	1	a	The group/subgroup is not deleted Functional Requirements Not exists. 3.9
2022	1	a	The user selects a group/subgroup and then he chooses ?find in this group? from file menu.
2023	0	a	Then a window appears which prompts the user to write a sequence of characters (letters and numbers) from one character to 200 (or more).
2024	0	a	After that a menu of options to choose from appears and the user can select to search for: title, user name, password, URL, notes, group name.
2025	0	a	Search results appear in the main window. Stimulus/Response Sequences Software Requirements Specification for KeePass Password Safe Page 16 Data Flow 3.9.2.1 Basic Data Flow 1.
2026	1	a	User opens KeePass and selects to find something in a selected group/subgroup
2027	1	a	User types the word to search for 3.
2028	1	a	User selects the fields which will be searched 4.
2029	1	a	User leaves the find field empty 5.
2030	1	a	User leaves all search in boxes unchecked 5.
2031	1	a	User leaves the find field empty 3.
2032	1	a	User leaves all search in boxes unchecked 5.
2033	1	a	In order to find something in a group a word must be placed in the find field 3.10 Add Entry
2034	0	a	When he does this, a window opens which is actually a form.
2035	0	a	In this form the user completes the fields he wants.
2036	0	a	Not all fields are required for an entry to be created.
2037	1	a	In fact an entry can be added with no fields at all.
2038	1	a	By selecting OK the entry is created in the group selected. Stimulus/Response Sequences Data Flow 3.10.2.1 Basic Data Flow 1.
2039	0	a	User opens KeePass and selects to add an entry
2040	0	a	User fills in the form, as many fields as he wants, from 1 to 9 3.
2041	0	a	User fills in the password field 2b.
2042	0	a	The repeat password field is not identical with the password field 2c.
2043	0	a	This feature allows the user to change or modify an existing entry. Software Requirements Specification for KeePass Password Safe 3.11.1 3.11.2. 3.11.3 Page 18 Description
2044	0	a	The user can modify the context of an entry he already has added.
2045	0	a	This can be done by selecting View/edit entry.
2046	0	a	In order for that to happen, the user must select an entry first.
2047	0	a	Then the user can change the group, title, user name, password, URL, notes, expiration date and attachment file.
2048	0	a	His changes are saved by clicking OK. Stimulus/Response Sequences Data Flow 3.11.2.1 Basic Data Flow 1.
2049	0	a	User opens KeePass and selects to View/edit an existing entry 2.
2050	1	a	User changes the fields he wants in the form 3.
2051	1	a	User changes the password field 2b.
2052	0	a	The repeat password field is not identical with the password field 2c.
2053	0	a	A message appears ?the repeated password must be identical with the password 3.11.2.2.2 Alternative Data Flow 2 3.
2054	0	a	The user can create an exact copy of an entry.
2055	1	a	This can be done by selecting an entry and clicking duplicate entry.
2056	0	a	When this is done the new entry is added in the same group were the first was. 3.12.2.
2057	0	a	User opens KeePass and selects an existing entry
2058	1	a	The user can delete an existing entry by selecting it and then by clicking delete entry.
2059	0	a	When this is done a message appears and informs the user that if he deletes the entry he won?t be able to restore it back. 3.13.2.
2060	1	a	User opens KeePass and selects to delete an existing entry Software Requirements Specification for KeePass Password Safe Page 20 3.13.3 2.
2061	1	a	The user can select between a number of translations that are available at KeePass website.
2062	1	a	All the user has to do is to select change language from the View menu and then the language he wants.
2063	0	a	If he already has download languages packets he can choose one of them.
2064	0	a	If he wants another language pack he can select get more language.
2065	0	a	Doing this he will be transferred at KeePass website and choose the language he wants for downloading. Stimulus/Response Sequences Data Flow 3.14.2.1 Basic Data Flow 1.
2066	0	a	User opens KeePass and selects to change language from the View menu
2067	1	a	The user selects a language to load from the list that appears 3.
2068	1	a	A message appears that informs user that the installation has been done and in order for the changes to take place KeePass must be restarted Software Requirements Specification for KeePass Password Safe Page 21 4.
2069	0	a	User selects get more languages
2070	1	a	The browser opens in KeePass website were translations are located 4.
2071	1	a	User selects a language he wants 5.
2072	1	a	The user defines the sequences which can be sent to any other open window like browsers or login accounts.
2073	1	a	By default the sent keystroke sequence is {USERNAME} {TAB } {PASSWORD} {ENTER}.
2074	0	a	There is the ability for the user to define his own auto-type sequence in the notes field of each entry.
2075	0	a	The sequence must be prefixed with ?Auto-Type? and length of one line.
2076	0	a	If a sequence is more than a line it cannot be used and in case of two sequences in one note?s field only the first one is used.
2077	0	a	There are 3 methods to invoke auto-type.
2078	0	a	Software Requirements Specification for KeePass Password Safe Page 22 0
2079	1	a	The first method is to use the context menu command and perform auto-type while the entry is selected. 0
2080	1	a	The second method is to select an entry and press Ctrl+V 0
2081	1	a	The third method is to use the system?wide auto-type hot key so that KeePass can search all entries in the database for matching sequences. 3.
2082	1	a	15 .2 Functional Requirements REQ?l9: The prefix ?Auto-Typez? is required in front of each sequence REQ?20: Sequence?s length must not be more than a line (59 characters)
2083	0	a	The database file location is passed as argument in the command line.
2084	0	a	This feature is a composition of master password and key files and all its composites are required so that the database can be unlocked. 3.17.1 Description
2085	0	a	The database can be unlocked with a master password, a key file or both of them.
2086	1	a	But the same composition of them must be used always.
2087	1	a	A master key is a password the user creates.
2088	0	a	Once a master key is created for a database, it is always required.
2089	0	a	In case the user forgets it, the database can never be opened again by any way. A key file is a file that locks the database.
2090	0	a	The database opens when this file is present.
2091	0	a	If the file is lost and there are no copies of it, all data are gone forever and database never unlocks again. Software Requirements Specification for KeePass Password Safe Page 23 3.17.2 Functional Requirements REQ?24:
2092	1	a	Import/Export If a master password is required to unlock the database, the database doesn?t open unless the password is entered
2093	0	a	If a key file is required to unlock the database, the database doesn?t open unless
2094	0	a	In case of lost master password or key file, the database never unlocks again.
2095	0	a	Despite that, almost all support exporting to CSV or XML files.
2096	0	a	This feature allows switching back from an application to KeePass. 3.19.1 Description
2097	0	a	The global hot key takes the user back from one window to KeePass.
2098	1	a	In case of multiple databases running of KeePass the global hot key restores the window which was opened first of all.
2099	1	a	This password may contain letters (big and small) and numbers.
2100	0	a	The user can keep it or he can put his own in the field.
2101	0	a	The generation can be based on character sets, patterns or can be created according by rules.
2102	0	a	This feature can be disabled if user wants it by selecting 0 as password length in the password generator dialog.
2103	0	a	More about characters sets and patterns can be found at KeePass Help Files including directions and examples.
2104	0	a	They can be added to user?s database by using TAN wizard and can contain all letters and numbers.
2105	0	a	When TAN are created, they appear as typical entries which in the field title contain ?
2106	0	a	? so that KeePass will know it?s a TAN. In TAN entries, user cannot change the title, user name or URL but notes can be added.
2107	0	a	When a TAN is used, its expiration time is set to that current time and the entry expires automatically. Functional Requirements REQ?32: Title, username or URL cannot be changed in a TAN entry.
2108	1	a	When a TAN is used, it expires automatically and can never be used again. Software Requirements Specification for KeePass Password Safe Page 25 4.
2109	0	a	External Interface Requirements 4.1 User Interfaces User interface includes various forms and windows.
2110	0	a	The main database window consists of the main menu bar with file, edit, View, tools and help.
2111	0	a	Under main menu there is a toolbar with shortcuts to most used functions of KeePass.
2112	1	a	Those are: new, open, save, add entry, edit/View entry, delete entry, copy username to clipboard, copy password to clipboard, find in database and lock workspace.
2113	0	a	On the main database window are appeared entries from a selected group.
2114	0	a	Groups and subgroups can be found at a side bar.
2115	0	a	When a function is performed like adding, editing or deleting, the active window is the one performing the action.
2116	0	a	Other Nonfunctional Requirements 5.1 Performance Requirements
2117	0	a	When a password is copied, it remains on memory for only 10 seconds.
2118	0	a	If in the meanwhile it is not pasted anywhere, it must be copied again.
2119	1	a	That happens so that if user copies a password and not paste it anywhere, the password cannot be found by anyone later. 5 .2 Safety Requirements
2120	0	a	When a USB which contains the database is removed from a computer while changes haven?t been completely saved, the database is damaged and cannot be opened.
2121	0	a	In this case the repair functionality can help by repairing KeePass database file from tools menu.
2122	0	a	In case the user forgets or loses the Master Password, the repair functionality won?t help.
2123	0	a	KeePass is a small and light proj ect
2124	0	a	so it does not need to be installed.
2125	0	a	All it takes is unpacking from the Zip package.
2126	0	a	It can be transferred also in a USB stick with no additional configuration needed. 0
2127	0	a	KeePass is a project that once uninstalled from a computer, leaves no trace behind.
2128	0	a	KeePass is developed under GNU General Public License version 2 or later (copy from http://www.gnu.org/licenses/gplhtml) and can be distributed under those terms. 0
2129	0	a	KeePass can be found and downloaded from www.sourceforge.com and the proj ect?s official website at http://keepass.info/ for free.
2130	0	a	Computer Science & Software Engineering
2131	0	a	This document presents the business requirement of Unified University Inventory System (U UIS) in Technology-independent manner.
2132	0	a	A11 attempts have been made in using mostly business terminology and business language while describing the requirements in this document.
2133	0	a	Very minimal and commonly understood Technical terminology is used.
2134	0	a	Use case approach is used in modeling the business requirements in this document. 2.
2135	0	a	Inventory assets Assets in the inventory are classified in 3 types 0
2136	0	a	University structure University organizational hierarchy is represented by the following University I
2137	0	a	Name: Modify Use Case Identifier: MODUC Description
2138	0	a	The use case describes the modification that the Inventory Admin can do.
2139	0	a	Goal The Inventory Admin initiates the use case.
2140	0	a	The use case presents all the modification that can be done by the Inventory Admin. Preconditions 1.
2141	1	a	The Inventory Admin is authenticated Assumptions 1.
2142	1	a	We assume that use Knows the results of each operation there is no go back actions Basic Course 1.
2143	0	a	Use case begins when Inventory Admin start searching for an asset 2.
2144	1	a	Inventory Admin Edit the asset 3.
2145	1	a	Inventory Admin modify asset properties Alternate Course A:
2146	1	a	Condition: administrator or authorised inventory user is working on waiting for approval list or waiting for execution list 1.
2147	1	a	Inventory user or Admin Edit the asset 2.
2148	0	a	Inventory user or Admin modify asset properties Exceptional Course : 1. .
2149	1	a	Inventory Admin search for asset .
2150	1	a	Inventory Admin edit asset .
2151	1	a	Inventory Admin asset out of inventory .
2152	1	a	Message error because asset cannot be modified 4;me .
2153	1	a	Inventory Admin search for asset .
2154	1	a	Inventory Admin search for asset 2.
2155	1	a	no asset found .
2156	0	a	Message error is displayed U.) Post conditions 1.
2157	0	a	The system state change according to modification Description The use case describes the edit operation that the Inventory Admin can do.
2158	0	a	The Inventory Admin initiates the use case.
2159	0	a	The use case presents the edit done by the Inventory Admin. Preconditions 1.
2160	1	a	The Inventory Admin is authenticated Assumptions 1.
2161	1	a	We assume that use Knows the results of each operation there is no go back actions Basic Course 1.
2162	1	a	Use case begins when Inventory Admin start searching for an asset 2.
2163	0	a	Inventory Admin Edit the asset Alternate Course A:
2164	0	a	Condition: administrator or authorised inventory user is working on waiting for approval list or waiting for execution list 1.
2165	0	a	Inventory user or Admin Edit the asset Exceptional Course : 1. 1.
2166	0	a	Inventory Admin search for asset 2.
2167	0	a	Inventory Admin edit asset 3.
2168	0	a	Inventory Admin does not have sufficient privileges to edit asset 4.
2169	0	a	Inventory Admin search for asset 2.
2170	0	a	Message error is displayed Post conditions 1.
2171	0	a	The system state change according to modification Actors Inventory Admin, Inventory system, Authentication system 10 Included Use Cases 1.
2172	1	a	We suppose that Hosting system and servers support all the operations Authentica?o . V- . , l x I / (< U 58/56) / Authentication System * | to Ad ' ?V5? W mm InventorySystem EDT.UC
2173	1	a	Name: Add New Asset Use Case Identifier: ANI.UC Description The use case describes the operation of adding a new asset to the inventory.
2174	0	a	The Inventory Admin initiates the use case.
2175	0	a	The use case presents how Inventory Admin can add new inventory asset. Preconditions 1.
2176	1	a	The Inventory Admin is authenticated Assumptions 1.
2177	1	a	We assume that use Knows the results of each operation there is no go back actions Basic Course 1.
2178	1	a	Use case begins when Administrator start a new asset Administrator select asset type Administrator select asset location Administrator select owner Administrator fill all asset properties 9%?!? Alternate Course
2179	1	a	A: None Exceptional Course: 1.
2180	0	a	Use case begins when Administrator start a new asset
2181	0	a	Administrator send exception request to IT to add the new type and the common properties Post conditions 1.
2182	0	a	The User initiates the use case.
2183	0	a	The use case presents request process that can be done by User. Preconditions 1.
2184	0	a	The User is authenticated Assumptions 1.
2185	0	a	We assume that use Knows the results of each operation
2186	1	a	Only basic request form is available for level 0 3.
2187	1	a	Requests forrns provide search facilities to users levels 1, 2 and 3 Basic Course 1.
2188	1	a	User select basic request form 2.
2189	1	a	User type a small request text specifying asset (s) location,.. 3.
2190	1	a	User click on submit Alternate Course A: 1. User select advanced request form 2.
2191	0	a	User enter asset serial number and location 3.
2192	1	a	User enter small text describing operation to be done 4.
2193	1	a	User click on submit Alternate Course B: 1.
2194	0	a	User select advanced request form 2.
2195	1	a	User enter asset serial number and location 3.
2196	1	a	User enter small text describing operation to be done 4 User can add as many assets as he wants to the list by clicking add another asset button 5.
2197	1	a	User click on submit Alternate Course C: 1.
2198	0	a	User select exception request form 2.
2199	1	a	User enter a text message describing the exception that occurs 3.
2200	1	a	User click on submit Exceptional Course : 1.
2201	0	a	User search for asset 2.
2202	0	a	Error Message is displayed 14 Post conditions
2203	0	a	A new request is pending waiting approval Actors Inventory Admin, Inventory system, Authentication system Included Use Cases 1.
2204	0	a	We suppose that Hosting system and servers support all the operations Authentication
2205	0	a	Use Case 15 Name: Returning Asset Identifier: RTI.UC Description The use case describes the returning asset update that the Inventory Admin can do.
2206	0	a	The use case presents all the updates to the inventory that can be done by the Inventory Admin. Preconditions 1.
2207	1	a	The Inventory Admin is authenticated Assumptions 1.
2208	1	a	We assume that use Knows the results of each operation there is no go back actions Basic Course 1.
2209	1	a	Use case begins when Inventory Admin start returning 2.
2210	1	a	Inventory Admin select asset state to available Alternate Course A: Condition: 1.
2211	0	a	Use case begins when Inventory Admin start returning 2.
2212	1	a	Inventory Admin select asset state to damaged Exceptional Course : Post conditions 1.
2213	0	a	The inventory system is updated Actors Inventory Admin, Inventory system, Authentication system 16 Description The use case describes the approving of requests that an Inventory Admin can do.
2214	1	a	The Inventory Admin initiates the use case.
2215	0	a	The use case presents all the approval or denial of a user request that can be done by an Inventory Admin. Preconditions 1.
2216	0	a	The Inventory Admin is authenticated
2217	0	a	Request list not empty Assumptions 1.
2218	0	a	We assume that use Knows the results of each operation Basic Course 1.
2219	0	a	The Inventory system is updated Actors Inventory Admin, Inventory system, Authentication system 18 Included Use Cases 3.
2220	0	a	Use Case Identifier: CHP.UC Description The use case describes the modification that Department, Facutly or University Admininistrator can do to a user permissions.
2221	0	a	The administrator initiates the use case.
2222	0	a	The use case presents all change that can be done by the Admininistrators. Preconditions 1.
2223	0	a	The Administrator is authenticated Assumptions 1.
2224	0	a	We assume that use Knows the results of each operation 2.
2225	1	a	Administrator knows the role of each permission on the permission list
2226	1	a	Administrator cannot assigne permissions more than he have Basic Course 1.
2227	1	a	Use case begins when Administrator press change permission 2.
2228	0	a	Administrator select user 3.
2229	1	a	Administrator modify permissions Alternate Course A:
2230	0	a	Condition: None Exceptional Course : 1. 1.
2231	0	a	Administrator select user 2.
2232	0	a	Administrator modify permissions he give permissions more than he have 3.
2233	0	a	An error message is displayed Post conditions
2234	0	a	The permissions of user are changed Acto rs Administrator, Inventory system, Authentication system 20
2235	1	a	Name: Search Identifier: SRCH.UC Description The use case describes the search operation that only authorised users can do.
2236	0	a	The User initiates the use case.
2237	0	a	The use case presents search and advanced search that can be done by the User. Preconditions 1.
2238	0	a	Search operation is authorised Assumptions 1.
2239	0	a	We assume that use Knows the results of each operation Basic Course 1.
2240	0	a	Use case begins when User start ?ll searching field
2241	0	a	Search results are displayed Alternate Course A: 1.
2242	0	a	Use case begins when User press advanced search
2243	0	a	Press submit 4 Search results are displayed Exceptional Course : 1.
2244	0	a	Use case begins when User start ?ll searching field 2.
2245	0	a	No results are found message is displayed Post conditions None Acto rs User, Inventory system, Authentication system 24 Included Use Cases 1.
2246	0	a	Authentication use case Name: Create Reports Use Case Identifier: REP.UC Description The use case describes the creation of reports that the User can do.
2247	1	a	The use case presents reports that can be created by the User.
2248	0	a	Three reports can be created Reports .
2249	0	a	User Permission Report .
2250	0	a	Request Report .
2251	0	a	Assets By Location Report Preconditions 1.
2252	0	a	The User is authenticated
2253	0	a	User is authorised to create reports Assumptions 1.
2254	0	a	We assume that use Knows the results of each operation Basic Course 1.
2255	0	a	Use case begins when User click on a report type 2.
2256	0	a	Report can be filtered 4.
2257	0	a	Fields can be sorted Alternate Course A: None Exceptional Course : None Post conditions Report is generated Acto rs User, Inventory system, Authentication system 26 Included Use Cases
2258	0	a	By Location Report REP.UC Create reports Use Case 27 8.
2259	0	a	Construction Junction Inventory Management Software Requirements Specification Version 2.0
2260	0	a	The purpose of this document is to define the requirements of the Inventory Management System as proposed by the Construction Junction (CJ) staff. 1.2. Scope
2261	0	a	Requirements defined in this document are prioritized by business and technical sponsors (Please refer to Appendix A).
2262	0	a	Overview The Inventory Management System is an application designed to allow the Construction Junction staff to create, maintain and view the contents and value of its inventory of items in a categorized way.
2263	0	a	It also facilitates the process of receiving items into the Construction Junction inventory via the drop-off, pick-up and deconstruction donation processes so that items can be traced from donation through sale.
2264	0	a	This section contains a description of each actor that interfaces with the system:
2265	0	a	Administrator: A member of the Construction Junction staff who can perform any of the Inventory Management functions.
2266	0	a	Decon Associate: A member of the Construction Junction staff who executes a deconstruction and/or strip out job and brings the items for processing at the receiving dock.
2267	0	a	A customer who purchases items from the Construction Junction inventory.
2268	0	a	Primary Contact: An individual who is the primary contact for a donation.
2269	0	a	The individual may be the actual donor or be acting on behalf of one.
2270	0	a	Vendor: An individual or organization who sells items to be added to Construction Junction?s inventory Consigner: An individual who donates items to Construction Junction under consignment. 3.
2271	0	a	Detailed Functional Requirements This section contains detailed reports for each product-functional use cases.
2272	0	a	Each report contains the following data or sections (if a section has no content for a use case, it has been removed): Name of the use case High-level description Actor(s): All actors who interact with the system during the course of the use case.
2273	1	a	Pre-conditions: Pre-conditions are conditions that must be true prior to beginning the use case and are assumed to be true throughout the use case. Triggers:
2274	1	a	Use Case Dependencies: Other use cases which this use case depends on. Basic Flows: The flows for the standard, expected execution of the use case.
2275	1	a	The system should provide a categorized view of the entire inventory to the Construction Junction staff.
2276	1	a	Starting at the department level, users can navigate into the inventory item categories and sub- categories, all the way down to an individual inventory item. 3.1.1. Actor(s):
2277	0	a	Administrator Director Manager Customer Service Representative
2278	0	a	1. User accesses the main inventory screen 2.
2279	1	a	All Items button at any level in the inventory to view a list of all items in that department or category 3.
2280	1	a	The user may click the View All Items button on the main inventory screen to view the complete list of all items in the inventory 4.
2281	1	a	Once in the view items list screen, the user may filter the results by searching for: 4.1.
2282	0	a	A particular item by item number 4.2.
2283	1	a	All items with Donor, Department, Category or Description matching the provided keyword 4.3.
2284	1	a	All items with certain attributes, features and/or details
2285	1	a	3.1.6. Business Rules: 1. Inventory departments and categories are displayed in matrix format
2286	1	a	2. The matrix dimensions are fixed, and are the same when displaying departments or categories.
2287	1	a	3. Unused matrix cells are displayed empty. 4.
2288	1	a	The actual matrix dimensions are to be determined during system implementation. 4.1.
2289	1	a	Each matrix cell displays a department or category name.
2290	0	a	For departments with subcategories, the department name is a hyperlink to the view of the department subcategories 5.2.
2291	0	a	For categories with subcategories, the category name is a hyperlink to the view of the subcategories 5.4.
2292	0	a	The category name is not a hyperlink 6.
2293	0	a	By default, the items list contains the list of all Unique and Stock items in the selected department or category, or across all departments and categories when viewing the all inventory items screen 7.
2294	0	a	When a search keyword is specified, the system filters the default items list for that screen and returns only the items for which the keyword matches one or more of the following columns: 7.1.
2295	0	a	The system should allow inventory administrators to customize the inventory structure by defining the inventory departments (not to be confused actual retail floor departments known later in this document as stocking locations). 3.2.1. Actor(s):
2296	1	a	Use Case Dependencies 1. View Inventory 3.2.4. Basic Flows:
2297	1	a	User accesses the main inventory screen 1.2.
2298	1	a	System displays the Add Department button 1.3.
2299	1	a	User clicks the Add Department button 1.4.
2300	1	a	User enters the Department data 1.5.
2301	1	a	System validates the Department data 1.6.
2302	1	a	System adds the new Department to the inventory 1.7.
2303	1	a	User is taken back to the main inventory screen
2304	1	a	User navigates to a Department (see View Inventory) 2.2.
2305	0	a	System displays the Edit Department button
2306	1	a	User clicks the Edit Department button 2.4.
2307	1	a	System displays the Department data 2.5.
2308	1	a	User edits Department data 2.6.
2309	1	a	System validates the Department data 2.7.
2310	1	a	System updates the Department information 2.8.
2311	1	a	User is taken back to the Department screen
2312	1	a	User navigates to a Department (see View Inventory) 3.2.
2313	1	a	System displays the Edit Department button 3.3.
2314	1	a	User clicks the Edit Department button 3.4.
2315	1	a	System displays the Department data 3.5.
2316	1	a	User clicks the Delete Department button 3.6.
2317	1	a	System validates the Department deletion 3.7.
2318	1	a	System removes the Department from the inventory 3.8.
2319	1	a	User is taken back to the main inventory screen
2320	0	a	User cancels the Department add and is taken back to the main inventory screen
2321	0	a	During data validation, data is deemed invalid and an error message is presented to the user 2. Edit Department 2.1.
2322	0	a	User cancels the Department edit and is taken back to the main inventory screen
2323	1	a	During data validation, data is deemed invalid and an error message is presented to the user 3. Delete Department 3.1.
2324	0	a	User cancels the Department deletion and is taken back to the Department screen
2325	1	a	The Department Name must be unique across the inventory 1.3.
2326	1	a	The Department?s Unique Tag must be unique across the inventory 1.4.
2327	1	a	The POS Department Code must be at most 3 characters long 1.5.
2328	1	a	The Unique Tag must be at most 18 characters long 1.6.
2329	1	a	There must be at least one slot available in the Department matrix to hold the new Department 2. Edit Department 2.1.
2330	0	a	The Department Name must be unique across the inventory 2.3.
2331	1	a	The Department?s Unique Tag must be unique across the inventory 2.4.
2332	1	a	The Unique Tag must be at most 18 characters long 3.
2333	1	a	A Department cannot be deleted if it contains categories and/or items
2334	1	a	The Department is updated 3. Delete Department 3.1.
2335	0	a	The system should allow inventory administrators to customize the inventory structure by defining the inventory departments and categories. 3.3.1. Actor(s):
2336	0	a	User navigates to a Department or Category (see View Inventory) 1.2.
2337	0	a	System displays the Add Category buttons
2338	0	a	User enters Category data 1.6.
2339	1	a	System validates the Category data 1.7.
2340	1	a	System adds the new Category to the inventory 1.8.
2341	1	a	User navigates to a Category (see View Inventory) 2.2.
2342	1	a	System displays the Edit Category button 2.3.
2343	1	a	User clicks the Edit Category button 2.4.
2344	1	a	System updates the Category information 2.8.
2345	1	a	User is taken back to the Category screen
2346	0	a	User navigates to a Category (see View Inventory) 3.2.
2347	1	a	System displays the Edit Category button 3.3.
2348	1	a	User clicks the Edit Category button 3.4.
2349	1	a	System displays the appropriate screen for the Category type 3.4.1.Unique Item 3.4.2.Stock Item 3.5.
2350	0	a	User clicks the Delete Category button 3.6.
2351	0	a	Details can be assigned to ?All? departments and/or categories 4.8.
2352	0	a	Alternatively, items can be added during routine inventory maintenance.
2353	0	a	Receiving Associate Pickup Associate Decon Associate Customer Service Representative
2354	0	a	The screen displays all inventory departments in matrix format (see View Inventory) 2.
2355	0	a	User drills down to the appropriate category for the item 2.1.
2356	1	a	If in donation processing mode, the item entry screen is presented automatically 2.2.
2357	1	a	If in inventory management mode, the list of existing inventory items in that category is displayed 2.2.1.User clicks the Add Item button 3.
2358	0	a	The appropriate item entry screen is presented
2359	0	a	At any point, the user may click on a department on the inventory department shortcuts list, which takes the user to the inventory view for that particular department. 2.
2360	0	a	Only unique and stock items are available to be added in inventory management mode
2361	0	a	When an item is added to the inventory, the system updates QuickBooks POS accordingly and promptly 4.1.
2362	1	a	A new item entry is created in POS for a unique item 4.2.
2363	1	a	The item quantity is updated for a stock item 5. Mandatory fields: 5.1.
2364	0	a	The available options in the Material, Finish, Color and Features selectors should be the ones defined for the selected department (see Manage Attributes and Details) 8.
2365	0	a	The fields and available options under the Details section should be the ones defined for the selected category (see Manage Attributes and Details) 9. For Stock Items, all fields are pre-set and disabled, and cannot be changed 10.
2366	1	a	For Unique Items, all fields with values defined when the Unique Item category was created are pre- set and cannot be changed 11.
2367	0	a	For unique and stock items, the system makes pricing recommendations to the user on the item entry screen (see Suggest Item Price)
2368	0	a	For unique items, user can accept the suggested price, enter a different one, or leave it blank 11.1.1.
2369	0	a	The item price can only be left blank during the processing of an acquisition.
2370	0	a	The price has to be set before the item can be added to the inventory 11.2.
2371	0	a	For stock items, the price is pre-set and the user cannot change it 12.
2372	0	a	The system should allow various management actions to be performed on items existing in the inventory.
2373	0	a	These include modifying, deleting and splitting an item, and viewing the item?s details and item history.
2374	0	a	These actions are only available for Unique and Stock items. 3.6.1. Actor(s):
2375	0	a	The screen displays all inventory departments in matrix format with option to select and/or edit items to move them to a new department/category 1.3.
2376	1	a	User drills down to the desired existing inventory item (see View Inventory) 1.4.
2377	1	a	The item detail screen is presented 1.5.
2378	1	a	User modifies item information
2379	1	a	The system validates item information
2380	1	a	Item information is updated in the inventory 1.8.
2381	1	a	System gives the option of re-printing then item tag 1.9.
2382	1	a	User optionally re-prints the item tag and attaches it to the item 2. Adjust Item Quantity 2.1.
2383	1	a	User accesses the main inventory screen 2.2.
2384	1	a	The screen displays all inventory departments in matrix format 2.3.
2385	1	a	User drills down to the desired existing inventory item (see View Inventory) 2.4.
2386	1	a	The item detail screen is presented 2.5.
2387	1	a	User changes the item quantity 2.6.
2388	1	a	The system displays a confirmation screen where a reason for the adjustment must be specified by the user 2.7.
2389	1	a	The system validates the item change
2390	1	a	Item information is updated in the inventory 3.
2391	1	a	Split Inventory Item 3.1.
2392	0	a	User accesses the main inventory screen 3.2.
2393	1	a	The screen displays all inventory departments in matrix format 3.3.
2394	1	a	User drills down to the desired existing inventory item (see View Inventory) 3.4.
2395	1	a	The item detail screen is presented 3.5.
2396	1	a	User clicks the Split Item button 3.6.
2397	1	a	The system displays the Item Split screen 3.7.
2398	0	a	Once the list is complete, user confirms the split 3.9.
2399	1	a	The system validates the split
2400	0	a	3.10. Item information is updated in the inventory 3.10.1.
2401	0	a	The original (split) item is updated in the inventory 3.10.2. Any new items that were added to the split list are added to the inventory maintaining parental history 4. View Inventory Item History 4.1.
2402	1	a	User accesses the main inventory screen 4.2.
2403	0	a	The screen displays all inventory departments in matrix format 4.3.
2404	1	a	User drills down to the desired existing inventory item (see View Inventory) 4.4.
2405	1	a	The item detail screen is presented 4.5.
2406	1	a	User clicks the Item History button 4.6.
2407	1	a	The system displays the Item History screen containing current and historical information about the inventory item 3.6.5. Alternative Flows:
2408	0	a	1. Modify Inventory Item 1.1.
2409	0	a	User cancels the operation and is taken back to the item selection screen
2410	0	a	During data validation, data is deemed invalid and an error message is presented to the user 2. Adjust Item Quantity 2.1.
2411	0	a	User cancels the operation and is taken back to the item selection screen
2412	1	a	During data validation, data is deemed invalid and an error message is presented to the user 3.
2413	1	a	All item properties available when the item was originally added to the inventory can be modified, except for the system-generated item number (see Add Item to Inventory). 1.2.
2414	1	a	The business rules defined for adding a new item into the inventory are also applicable to modifying an existing inventory item (see Add Item to Inventory). 1.3.
2415	1	a	Once set for the first time in the inventory, the item price can only be modified by a Manager, Director or Administrator, must maintain a history and include an explanation for the price change 1.4.
2416	0	a	Changes to the item in the inventory should be reflected in the corresponding item in QuickBooks POS 2. Adjust Item Quantity 2.1.
2417	1	a	When an item is updated, the system must automatically detect that the item quantity has been modified and present the adjustment confirmation screen 2.2.
2418	1	a	If the quantity is increased, the user must enter a comment describing the reason for the change 2.4.
2419	0	a	Changes to an item?s quantity in the inventory should be reflected in the corresponding item in QuickBooks POS
2420	0	a	3. Split Inventory Item 3.1.
2421	0	a	When building the split item list, at least two items must exist in the list, including the original item 3.2.
2422	1	a	When building the split item list, the business rules defined for adding a new item into the inventory are also applicable (see Add Item to Inventory). 3.3.
2423	1	a	Clicking the Clone button on a row adds a new item row with the same item values as the original, except for the item number, which is left blank 3.4.
2424	1	a	Clicking the Add Item button takes the user through the inventory matrix so that a category can be selected for the new item.
2425	1	a	The user is then taken to the View/Update Item screen 3.5.
2426	1	a	Clicking the category name for an item takes the user to the View/Update Item screen for that item 3.6.
2427	1	a	All items in the split item list are saved in the inventory when the user confirms the split 3.6.1.The original item is updated
2428	0	a	Item is updated in QuickBooks POS
2429	0	a	2. Adjust Item Quantity 2.1.
2430	0	a	Item is updated in the inventory 2.2.
2431	1	a	Item is updated in QuickBooks POS
2432	1	a	3. Split Inventory Item 3.1.
2433	0	a	Original item is updated in the inventory 3.2.
2434	1	a	Original item is updated in QuickBooks POS 3.3.
2435	1	a	New items are updated in the inventory 3.4.
2436	1	a	New items are updated in QuickBooks POS
2437	1	a	4. View Inventory Item History None 3.6.8. Open Issues: None
2438	0	a	The system should assist in the task of pricing a new inventory item by making pricing suggestions to the user when adding to or modifying an item in the inventory.
2439	0	a	Use Case Dependencies
2440	0	a	User modifies item data
2441	0	a	The following price suggestion configuration parameters are available: 3.1.
2442	0	a	Number of months of historical price information to include when calculating price recommendations.
2443	0	a	3.7.7. Post-Condition(s): 1. Price suggestion information is displayed on the screen
2444	0	a	Inventory Management users should be able to view all past and current acquisitions. Receiving Associates use this function to locate an expected acquisition when receiving a donation at the loading dock.
2445	1	a	Pickup and Decon crews may also use this function to initiate the process of receiving items while in the truck, on their way to the receiving dock.
2446	0	a	Off acquisitions are not typically pre-scheduled as Pick Up and Decon acquisitions except for those submitted through the organizational website.
2447	0	a	Administrator Director Manager Customer Service Representative
2448	0	a	1. User accesses the acquisitions screen 2.
2449	1	a	The screen displays a list of all acquisitions, latest ones at the top of the list 3. User may optionally filter the acquisitions displayed on the screen by changing filtering options
2450	1	a	4. User clicks on an acquisition record 5. System display the details for that acquisition, including expected items 3.8.5. Alternative Flows:
2451	0	a	Details can be assigned to ?All? departments and/or categories 4.8.
2452	0	a	Alternatively, items can be added during routine inventory maintenance.
2453	0	a	Receiving Associate Pickup Associate Decon Associate Customer Service Representative
2454	0	a	The screen displays all inventory departments in matrix format (see View Inventory) 2.
2455	0	a	User drills down to the appropriate category for the item 2.1.
2456	1	a	If in donation processing mode, the item entry screen is presented automatically 2.2.
2457	1	a	If in inventory management mode, the list of existing inventory items in that category is displayed 2.2.1.User clicks the Add Item button 3.
2458	0	a	The appropriate item entry screen is presented
2459	0	a	At any point, the user may click on a department on the inventory department shortcuts list, which takes the user to the inventory view for that particular department. 2.
2460	0	a	Only unique and stock items are available to be added in inventory management mode
2461	0	a	When an item is added to the inventory, the system updates QuickBooks POS accordingly and promptly 4.1.
2462	1	a	A new item entry is created in POS for a unique item 4.2.
2463	1	a	The item quantity is updated for a stock item 5. Mandatory fields: 5.1.
2464	0	a	The available options in the Material, Finish, Color and Features selectors should be the ones defined for the selected department (see Manage Attributes and Details) 8.
2465	0	a	The fields and available options under the Details section should be the ones defined for the selected category (see Manage Attributes and Details) 9. For Stock Items, all fields are pre-set and disabled, and cannot be changed 10.
2466	1	a	For Unique Items, all fields with values defined when the Unique Item category was created are pre- set and cannot be changed 11.
2467	0	a	For unique and stock items, the system makes pricing recommendations to the user on the item entry screen (see Suggest Item Price)
2468	0	a	For unique items, user can accept the suggested price, enter a different one, or leave it blank 11.1.1.
2469	0	a	The item price can only be left blank during the processing of an acquisition.
2470	0	a	The price has to be set before the item can be added to the inventory 11.2.
2471	0	a	For stock items, the price is pre-set and the user cannot change it 12.
2472	0	a	The system should allow various management actions to be performed on items existing in the inventory.
2473	0	a	These include modifying, deleting and splitting an item, and viewing the item?s details and item history.
2474	0	a	These actions are only available for Unique and Stock items. 3.6.1. Actor(s):
2475	0	a	The screen displays all inventory departments in matrix format with option to select and/or edit items to move them to a new department/category 1.3.
2476	1	a	User drills down to the desired existing inventory item (see View Inventory) 1.4.
2477	1	a	The item detail screen is presented 1.5.
2478	1	a	User modifies item information
2479	1	a	The system validates item information
2480	1	a	Item information is updated in the inventory 1.8.
2481	1	a	System gives the option of re-printing then item tag 1.9.
2482	1	a	User optionally re-prints the item tag and attaches it to the item 2. Adjust Item Quantity 2.1.
2483	1	a	User accesses the main inventory screen 2.2.
2484	1	a	The screen displays all inventory departments in matrix format 2.3.
2485	1	a	User drills down to the desired existing inventory item (see View Inventory) 2.4.
2486	1	a	The item detail screen is presented 2.5.
2487	1	a	User changes the item quantity 2.6.
2488	1	a	The system displays a confirmation screen where a reason for the adjustment must be specified by the user 2.7.
2489	1	a	The system validates the item change
2490	1	a	Item information is updated in the inventory 3.
2491	1	a	Split Inventory Item 3.1.
2492	0	a	User accesses the main inventory screen 3.2.
2493	1	a	The screen displays all inventory departments in matrix format 3.3.
2494	1	a	User drills down to the desired existing inventory item (see View Inventory) 3.4.
2495	1	a	The item detail screen is presented 3.5.
2496	1	a	User clicks the Split Item button 3.6.
2497	1	a	The system displays the Item Split screen 3.7.
2498	0	a	Once the list is complete, user confirms the split 3.9.
2499	1	a	The system validates the split
2500	0	a	3.10. Item information is updated in the inventory 3.10.1.
2501	0	a	The original (split) item is updated in the inventory 3.10.2. Any new items that were added to the split list are added to the inventory maintaining parental history 4. View Inventory Item History 4.1.
2502	1	a	User accesses the main inventory screen 4.2.
2503	0	a	The screen displays all inventory departments in matrix format 4.3.
2504	1	a	User drills down to the desired existing inventory item (see View Inventory) 4.4.
2505	1	a	The item detail screen is presented 4.5.
2506	1	a	User clicks the Item History button 4.6.
2507	1	a	The system displays the Item History screen containing current and historical information about the inventory item 3.6.5. Alternative Flows:
2508	0	a	1. Modify Inventory Item 1.1.
2509	0	a	User cancels the operation and is taken back to the item selection screen
2510	0	a	During data validation, data is deemed invalid and an error message is presented to the user 2. Adjust Item Quantity 2.1.
2511	0	a	User cancels the operation and is taken back to the item selection screen
2512	1	a	During data validation, data is deemed invalid and an error message is presented to the user 3.
2513	1	a	All item properties available when the item was originally added to the inventory can be modified, except for the system-generated item number (see Add Item to Inventory). 1.2.
2514	1	a	The business rules defined for adding a new item into the inventory are also applicable to modifying an existing inventory item (see Add Item to Inventory). 1.3.
2515	1	a	Once set for the first time in the inventory, the item price can only be modified by a Manager, Director or Administrator, must maintain a history and include an explanation for the price change 1.4.
2516	0	a	Changes to the item in the inventory should be reflected in the corresponding item in QuickBooks POS 2. Adjust Item Quantity 2.1.
2517	1	a	When an item is updated, the system must automatically detect that the item quantity has been modified and present the adjustment confirmation screen 2.2.
2518	1	a	If the quantity is increased, the user must enter a comment describing the reason for the change 2.4.
2519	0	a	Changes to an item?s quantity in the inventory should be reflected in the corresponding item in QuickBooks POS
2520	0	a	3. Split Inventory Item 3.1.
2521	0	a	When building the split item list, at least two items must exist in the list, including the original item 3.2.
2522	1	a	When building the split item list, the business rules defined for adding a new item into the inventory are also applicable (see Add Item to Inventory). 3.3.
2523	1	a	Clicking the Clone button on a row adds a new item row with the same item values as the original, except for the item number, which is left blank 3.4.
2524	1	a	Clicking the Add Item button takes the user through the inventory matrix so that a category can be selected for the new item.
2525	1	a	The user is then taken to the View/Update Item screen 3.5.
2526	1	a	Clicking the category name for an item takes the user to the View/Update Item screen for that item 3.6.
2527	1	a	All items in the split item list are saved in the inventory when the user confirms the split 3.6.1.The original item is updated
2528	0	a	Item is updated in QuickBooks POS
2529	0	a	2. Adjust Item Quantity 2.1.
2530	0	a	Item is updated in the inventory 2.2.
2531	1	a	Item is updated in QuickBooks POS
2532	1	a	3. Split Inventory Item 3.1.
2533	0	a	Original item is updated in the inventory 3.2.
2534	1	a	Original item is updated in QuickBooks POS 3.3.
2535	1	a	New items are updated in the inventory 3.4.
2536	1	a	New items are updated in QuickBooks POS
